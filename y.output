Terminals which are not used

   ASS_EQ
   ASS_LS
   ASS_RS
   BYTE
   FLOAT
   IFELSE
   LONG
   NEW
   JNULL
   OP_SHL
   OP_SHR
   OP_SHRR
   OP_DIM
   SHORT
   THIS
   ASS_SUM


Grammar

    0 $accept: init $end

    1 init: CLASS ID '{' main function_list '}'
    2     | CLASS ID '{' main '}'
    3     | CLASS ID '{' global_list main '}'
    4     | CLASS ID '{' global_list main function_list '}'

    5 main: scope STATIC VOID MAIN '(' STRING '[' ']' ARGS ')' code

    6 global_list: global_variable
    7            | global_list global_variable

    8 global_variable: scope STATIC declaration ';'
    9                | declaration ';'

   10 function_list: function
   11              | function_list function

   12 function: scope STATIC type ID '(' argument_list ')' code

   13 scope: PRIVATE
   14      | PROTECTED
   15      | PUBLIC

   16 code: '{' '}'
   17     | '{' operation_list '}'

   18 operation_list: operation
   19               | operation_list operation

   20 operation: declaration ';'
   21          | assignment ';'
   22          | unary ';'
   23          | if
   24          | cycle
   25          | control ';'
   26          | function_call ';'

   27 declaration: type var_list

   28 assignment: ID assign_operator expression

   29 unary: ID OP_INC
   30      | OP_INC ID
   31      | ID OP_DEC
   32      | OP_DEC ID

   33 control: BREAK
   34        | CONTINUE
   35        | RETURN
   36        | RETURN expression
   37        | SYSTEM '.' OUT '.' PRINTLN '(' expression ')'
   38        | SYSTEM '.' OUT '.' PRINT '(' expression ')'

   39 expression: '(' expression ')'
   40           | value
   41           | function_call
   42           | infix_expression
   43           | if_expression

   44 function_call: ID '(' ')'
   45              | ID '(' parameter_list ')'

   46 infix_expression: expression '+' expression
   47                 | expression '-' expression
   48                 | expression '*' expression
   49                 | expression '/' expression
   50                 | expression '%' expression
   51                 | expression '&' expression
   52                 | expression LS expression
   53                 | expression RS expression

   54 if_expression: expression '>' expression
   55              | expression '<' expression
   56              | expression OP_EQ expression
   57              | expression OP_LE expression
   58              | expression OP_GE expression
   59              | expression OP_NE expression
   60              | expression OP_LOR expression
   61              | expression OP_LAND expression

   62 parameter_list: expression
   63               | parameter_list ',' expression

   64 var_list: var
   65         | var_list ',' var

   66 var: ID
   67    | ID '=' expression

   68 argument_list: argument
   69              | argument_list ',' argument

   70 argument: type ID

   71 cycle: FOR '(' forInit ';' expression ';' increase_list ')' condition_code
   72      | FOR '(' ';' expression ';' increase_list ')' condition_code
   73      | FOR '(' forInit ';' expression ';' ')' condition_code
   74      | FOR '(' ';' expression ';' ')' condition_code
   75      | WHILE '(' expression ')' condition_code
   76      | DO condition_code WHILE '(' expression ')' ';'

   77 if: IF '(' expression ')' condition_code
   78   | IF '(' expression ')' condition_code ELSE condition_code
   79   | SWITCH '(' expression ')' '{' switch '}'

   80 forInit: assignment
   81        | declaration

   82 increase_list: increase
   83              | increase_list ',' increase

   84 increase: assignment
   85         | unary

   86 condition_code: '{' operation_list '}'
   87               | operation
   88               | ';'
   89               | '{' '}'

   90 switch: CASE value ':' operation_list switch
   91       | DEFAULT ':' operation_list switch
   92       | CASE value ':' operation_list
   93       | DEFAULT ':' operation_list

   94 assign_operator: '='
   95                | ASS_ADD
   96                | ASS_SUB
   97                | ASS_MUL
   98                | ASS_DIV
   99                | ASS_PERC
  100                | ASS_AND

  101 value: ID
  102      | STRING_VAL
  103      | NUMBER_VAL
  104      | '+' NUMBER_VAL
  105      | '-' NUMBER_VAL
  106      | DOUBLE_VAL
  107      | CHAR_VAL
  108      | TRUE
  109      | FALSE

  110 type: CHAR
  111     | INT
  112     | STRING
  113     | BOOLEAN
  114     | DOUBLE
  115     | VOID


Terminals, with rules where they appear

$end (0) 0
'%' (37) 50
'&' (38) 51
'(' (40) 5 12 37 38 39 44 45 71 72 73 74 75 76 77 78 79
')' (41) 5 12 37 38 39 44 45 71 72 73 74 75 76 77 78 79
'*' (42) 48
'+' (43) 46 104
',' (44) 63 65 69 83
'-' (45) 47 105
'.' (46) 37 38
'/' (47) 49
':' (58) 90 91 92 93
';' (59) 8 9 20 21 22 25 26 71 72 73 74 76 88
'<' (60) 55
'=' (61) 67 94
'>' (62) 54
'[' (91) 5
']' (93) 5
'{' (123) 1 2 3 4 16 17 79 86 89
'}' (125) 1 2 3 4 16 17 79 86 89
error (256)
ARGS (258) 5
ASS_MUL (259) 97
ASS_DIV (260) 98
ASS_ADD (261) 95
ASS_SUB (262) 96
ASS_EQ (263)
ASS_AND (264) 100
ASS_LS (265)
ASS_RS (266)
BOOLEAN (267) 113
BREAK (268) 33
BYTE (269)
CASE (270) 90 92
CHAR (271) 110
CLASS (272) 1 2 3 4
CONTINUE (273) 34
DEFAULT (274) 91 93
DO (275) 76
DOUBLE (276) 114
ELSE (277) 78
FALSE (278) 109
FLOAT (279)
FOR (280) 71 72 73 74
IF (281) 77 78
IFELSE (282)
INT (283) 111
LONG (284)
LS (285) 52
MAIN (286) 5
NEW (287)
JNULL (288)
OP_INC (289) 29 30
OP_DEC (290) 31 32
OP_SHL (291)
OP_SHR (292)
OP_SHRR (293)
OP_GE (294) 58
OP_LE (295) 57
OP_EQ (296) 56
OP_NE (297) 59
OP_LAND (298) 61
OP_LOR (299) 60
OP_DIM (300)
OUT (301) 37 38
PRINT (302) 38
PRINTLN (303) 37
PRIVATE (304) 13
PROTECTED (305) 14
PUBLIC (306) 15
SHORT (307)
STATIC (308) 5 8 12
STRING (309) 5 112
SWITCH (310) 79
SYSTEM (311) 37 38
RETURN (312) 35 36
RS (313) 53
TRUE (314) 108
THIS (315)
VOID (316) 5 115
WHILE (317) 75 76
NUMBER_VAL (318) 103 104 105
DOUBLE_VAL (319) 106
STRING_VAL (320) 102
CHAR_VAL (321) 107
ID (322) 1 2 3 4 12 28 29 30 31 32 44 45 66 67 70 101
IFPREC (323)
ASS_PERC (324) 99
ASS_SUM (325)


Nonterminals, with rules where they appear

$accept (90)
    on left: 0
init (91)
    on left: 1 2 3 4, on right: 0
main (92)
    on left: 5, on right: 1 2 3 4
global_list (93)
    on left: 6 7, on right: 3 4 7
global_variable (94)
    on left: 8 9, on right: 6 7
function_list (95)
    on left: 10 11, on right: 1 4 11
function (96)
    on left: 12, on right: 10 11
scope (97)
    on left: 13 14 15, on right: 5 8 12
code (98)
    on left: 16 17, on right: 5 12
operation_list (99)
    on left: 18 19, on right: 17 19 86 90 91 92 93
operation (100)
    on left: 20 21 22 23 24 25 26, on right: 18 19 87
declaration (101)
    on left: 27, on right: 8 9 20 81
assignment (102)
    on left: 28, on right: 21 80 84
unary (103)
    on left: 29 30 31 32, on right: 22 85
control (104)
    on left: 33 34 35 36 37 38, on right: 25
expression (105)
    on left: 39 40 41 42 43, on right: 28 36 37 38 39 46 47 48 49 50
    51 52 53 54 55 56 57 58 59 60 61 62 63 67 71 72 73 74 75 76 77
    78 79
function_call (106)
    on left: 44 45, on right: 26 41
infix_expression (107)
    on left: 46 47 48 49 50 51 52 53, on right: 42
if_expression (108)
    on left: 54 55 56 57 58 59 60 61, on right: 43
parameter_list (109)
    on left: 62 63, on right: 45 63
var_list (110)
    on left: 64 65, on right: 27 65
var (111)
    on left: 66 67, on right: 64 65
argument_list (112)
    on left: 68 69, on right: 12 69
argument (113)
    on left: 70, on right: 68 69
cycle (114)
    on left: 71 72 73 74 75 76, on right: 24
if (115)
    on left: 77 78 79, on right: 23
forInit (116)
    on left: 80 81, on right: 71 73
increase_list (117)
    on left: 82 83, on right: 71 72 83
increase (118)
    on left: 84 85, on right: 82 83
condition_code (119)
    on left: 86 87 88 89, on right: 71 72 73 74 75 76 77 78
switch (120)
    on left: 90 91 92 93, on right: 79 90 91
assign_operator (121)
    on left: 94 95 96 97 98 99 100, on right: 28
value (122)
    on left: 101 102 103 104 105 106 107 108 109, on right: 40 90 92
type (123)
    on left: 110 111 112 113 114 115, on right: 12 27 70


state 0

    0 $accept: . init $end

    CLASS  shift, and go to state 1

    init  go to state 2


state 1

    1 init: CLASS . ID '{' main function_list '}'
    2     | CLASS . ID '{' main '}'
    3     | CLASS . ID '{' global_list main '}'
    4     | CLASS . ID '{' global_list main function_list '}'

    ID  shift, and go to state 3


state 2

    0 $accept: init . $end

    $end  shift, and go to state 4


state 3

    1 init: CLASS ID . '{' main function_list '}'
    2     | CLASS ID . '{' main '}'
    3     | CLASS ID . '{' global_list main '}'
    4     | CLASS ID . '{' global_list main function_list '}'

    '{'  shift, and go to state 5


state 4

    0 $accept: init $end .

    $default  accept


state 5

    1 init: CLASS ID '{' . main function_list '}'
    2     | CLASS ID '{' . main '}'
    3     | CLASS ID '{' . global_list main '}'
    4     | CLASS ID '{' . global_list main function_list '}'

    BOOLEAN    shift, and go to state 6
    CHAR       shift, and go to state 7
    DOUBLE     shift, and go to state 8
    INT        shift, and go to state 9
    PRIVATE    shift, and go to state 10
    PROTECTED  shift, and go to state 11
    PUBLIC     shift, and go to state 12
    STRING     shift, and go to state 13
    VOID       shift, and go to state 14

    main             go to state 15
    global_list      go to state 16
    global_variable  go to state 17
    scope            go to state 18
    declaration      go to state 19
    type             go to state 20


state 6

  113 type: BOOLEAN .

    $default  reduce using rule 113 (type)


state 7

  110 type: CHAR .

    $default  reduce using rule 110 (type)


state 8

  114 type: DOUBLE .

    $default  reduce using rule 114 (type)


state 9

  111 type: INT .

    $default  reduce using rule 111 (type)


state 10

   13 scope: PRIVATE .

    $default  reduce using rule 13 (scope)


state 11

   14 scope: PROTECTED .

    $default  reduce using rule 14 (scope)


state 12

   15 scope: PUBLIC .

    $default  reduce using rule 15 (scope)


state 13

  112 type: STRING .

    $default  reduce using rule 112 (type)


state 14

  115 type: VOID .

    $default  reduce using rule 115 (type)


state 15

    1 init: CLASS ID '{' main . function_list '}'
    2     | CLASS ID '{' main . '}'

    PRIVATE    shift, and go to state 10
    PROTECTED  shift, and go to state 11
    PUBLIC     shift, and go to state 12
    '}'        shift, and go to state 21

    function_list  go to state 22
    function       go to state 23
    scope          go to state 24


state 16

    3 init: CLASS ID '{' global_list . main '}'
    4     | CLASS ID '{' global_list . main function_list '}'
    7 global_list: global_list . global_variable

    BOOLEAN    shift, and go to state 6
    CHAR       shift, and go to state 7
    DOUBLE     shift, and go to state 8
    INT        shift, and go to state 9
    PRIVATE    shift, and go to state 10
    PROTECTED  shift, and go to state 11
    PUBLIC     shift, and go to state 12
    STRING     shift, and go to state 13
    VOID       shift, and go to state 14

    main             go to state 25
    global_variable  go to state 26
    scope            go to state 18
    declaration      go to state 19
    type             go to state 20


state 17

    6 global_list: global_variable .

    $default  reduce using rule 6 (global_list)


state 18

    5 main: scope . STATIC VOID MAIN '(' STRING '[' ']' ARGS ')' code
    8 global_variable: scope . STATIC declaration ';'

    STATIC  shift, and go to state 27


state 19

    9 global_variable: declaration . ';'

    ';'  shift, and go to state 28


state 20

   27 declaration: type . var_list

    ID  shift, and go to state 29

    var_list  go to state 30
    var       go to state 31


state 21

    2 init: CLASS ID '{' main '}' .

    $default  reduce using rule 2 (init)


state 22

    1 init: CLASS ID '{' main function_list . '}'
   11 function_list: function_list . function

    PRIVATE    shift, and go to state 10
    PROTECTED  shift, and go to state 11
    PUBLIC     shift, and go to state 12
    '}'        shift, and go to state 32

    function  go to state 33
    scope     go to state 24


state 23

   10 function_list: function .

    $default  reduce using rule 10 (function_list)


state 24

   12 function: scope . STATIC type ID '(' argument_list ')' code

    STATIC  shift, and go to state 34


state 25

    3 init: CLASS ID '{' global_list main . '}'
    4     | CLASS ID '{' global_list main . function_list '}'

    PRIVATE    shift, and go to state 10
    PROTECTED  shift, and go to state 11
    PUBLIC     shift, and go to state 12
    '}'        shift, and go to state 35

    function_list  go to state 36
    function       go to state 23
    scope          go to state 24


state 26

    7 global_list: global_list global_variable .

    $default  reduce using rule 7 (global_list)


state 27

    5 main: scope STATIC . VOID MAIN '(' STRING '[' ']' ARGS ')' code
    8 global_variable: scope STATIC . declaration ';'

    BOOLEAN  shift, and go to state 6
    CHAR     shift, and go to state 7
    DOUBLE   shift, and go to state 8
    INT      shift, and go to state 9
    STRING   shift, and go to state 13
    VOID     shift, and go to state 37

    declaration  go to state 38
    type         go to state 20


state 28

    9 global_variable: declaration ';' .

    $default  reduce using rule 9 (global_variable)


state 29

   66 var: ID .
   67    | ID . '=' expression

    '='  shift, and go to state 39

    $default  reduce using rule 66 (var)


state 30

   27 declaration: type var_list .
   65 var_list: var_list . ',' var

    ','  shift, and go to state 40

    $default  reduce using rule 27 (declaration)


state 31

   64 var_list: var .

    $default  reduce using rule 64 (var_list)


state 32

    1 init: CLASS ID '{' main function_list '}' .

    $default  reduce using rule 1 (init)


state 33

   11 function_list: function_list function .

    $default  reduce using rule 11 (function_list)


state 34

   12 function: scope STATIC . type ID '(' argument_list ')' code

    BOOLEAN  shift, and go to state 6
    CHAR     shift, and go to state 7
    DOUBLE   shift, and go to state 8
    INT      shift, and go to state 9
    STRING   shift, and go to state 13
    VOID     shift, and go to state 14

    type  go to state 41


state 35

    3 init: CLASS ID '{' global_list main '}' .

    $default  reduce using rule 3 (init)


state 36

    4 init: CLASS ID '{' global_list main function_list . '}'
   11 function_list: function_list . function

    PRIVATE    shift, and go to state 10
    PROTECTED  shift, and go to state 11
    PUBLIC     shift, and go to state 12
    '}'        shift, and go to state 42

    function  go to state 33
    scope     go to state 24


state 37

    5 main: scope STATIC VOID . MAIN '(' STRING '[' ']' ARGS ')' code
  115 type: VOID .

    MAIN  shift, and go to state 43

    $default  reduce using rule 115 (type)


state 38

    8 global_variable: scope STATIC declaration . ';'

    ';'  shift, and go to state 44


state 39

   67 var: ID '=' . expression

    FALSE       shift, and go to state 45
    TRUE        shift, and go to state 46
    NUMBER_VAL  shift, and go to state 47
    DOUBLE_VAL  shift, and go to state 48
    STRING_VAL  shift, and go to state 49
    CHAR_VAL    shift, and go to state 50
    ID          shift, and go to state 51
    '+'         shift, and go to state 52
    '-'         shift, and go to state 53
    '('         shift, and go to state 54

    expression        go to state 55
    function_call     go to state 56
    infix_expression  go to state 57
    if_expression     go to state 58
    value             go to state 59


state 40

   65 var_list: var_list ',' . var

    ID  shift, and go to state 29

    var  go to state 60


state 41

   12 function: scope STATIC type . ID '(' argument_list ')' code

    ID  shift, and go to state 61


state 42

    4 init: CLASS ID '{' global_list main function_list '}' .

    $default  reduce using rule 4 (init)


state 43

    5 main: scope STATIC VOID MAIN . '(' STRING '[' ']' ARGS ')' code

    '('  shift, and go to state 62


state 44

    8 global_variable: scope STATIC declaration ';' .

    $default  reduce using rule 8 (global_variable)


state 45

  109 value: FALSE .

    $default  reduce using rule 109 (value)


state 46

  108 value: TRUE .

    $default  reduce using rule 108 (value)


state 47

  103 value: NUMBER_VAL .

    $default  reduce using rule 103 (value)


state 48

  106 value: DOUBLE_VAL .

    $default  reduce using rule 106 (value)


state 49

  102 value: STRING_VAL .

    $default  reduce using rule 102 (value)


state 50

  107 value: CHAR_VAL .

    $default  reduce using rule 107 (value)


state 51

   44 function_call: ID . '(' ')'
   45              | ID . '(' parameter_list ')'
  101 value: ID .

    '('  shift, and go to state 63

    $default  reduce using rule 101 (value)


state 52

  104 value: '+' . NUMBER_VAL

    NUMBER_VAL  shift, and go to state 64


state 53

  105 value: '-' . NUMBER_VAL

    NUMBER_VAL  shift, and go to state 65


state 54

   39 expression: '(' . expression ')'

    FALSE       shift, and go to state 45
    TRUE        shift, and go to state 46
    NUMBER_VAL  shift, and go to state 47
    DOUBLE_VAL  shift, and go to state 48
    STRING_VAL  shift, and go to state 49
    CHAR_VAL    shift, and go to state 50
    ID          shift, and go to state 51
    '+'         shift, and go to state 52
    '-'         shift, and go to state 53
    '('         shift, and go to state 54

    expression        go to state 66
    function_call     go to state 56
    infix_expression  go to state 57
    if_expression     go to state 58
    value             go to state 59


state 55

   46 infix_expression: expression . '+' expression
   47                 | expression . '-' expression
   48                 | expression . '*' expression
   49                 | expression . '/' expression
   50                 | expression . '%' expression
   51                 | expression . '&' expression
   52                 | expression . LS expression
   53                 | expression . RS expression
   54 if_expression: expression . '>' expression
   55              | expression . '<' expression
   56              | expression . OP_EQ expression
   57              | expression . OP_LE expression
   58              | expression . OP_GE expression
   59              | expression . OP_NE expression
   60              | expression . OP_LOR expression
   61              | expression . OP_LAND expression
   67 var: ID '=' expression .

    LS       shift, and go to state 67
    OP_GE    shift, and go to state 68
    OP_LE    shift, and go to state 69
    OP_EQ    shift, and go to state 70
    OP_NE    shift, and go to state 71
    OP_LAND  shift, and go to state 72
    OP_LOR   shift, and go to state 73
    RS       shift, and go to state 74
    '+'      shift, and go to state 75
    '-'      shift, and go to state 76
    '*'      shift, and go to state 77
    '/'      shift, and go to state 78
    '%'      shift, and go to state 79
    '&'      shift, and go to state 80
    '<'      shift, and go to state 81
    '>'      shift, and go to state 82

    $default  reduce using rule 67 (var)


state 56

   41 expression: function_call .

    $default  reduce using rule 41 (expression)


state 57

   42 expression: infix_expression .

    $default  reduce using rule 42 (expression)


state 58

   43 expression: if_expression .

    $default  reduce using rule 43 (expression)


state 59

   40 expression: value .

    $default  reduce using rule 40 (expression)


state 60

   65 var_list: var_list ',' var .

    $default  reduce using rule 65 (var_list)


state 61

   12 function: scope STATIC type ID . '(' argument_list ')' code

    '('  shift, and go to state 83


state 62

    5 main: scope STATIC VOID MAIN '(' . STRING '[' ']' ARGS ')' code

    STRING  shift, and go to state 84


state 63

   44 function_call: ID '(' . ')'
   45              | ID '(' . parameter_list ')'

    FALSE       shift, and go to state 45
    TRUE        shift, and go to state 46
    NUMBER_VAL  shift, and go to state 47
    DOUBLE_VAL  shift, and go to state 48
    STRING_VAL  shift, and go to state 49
    CHAR_VAL    shift, and go to state 50
    ID          shift, and go to state 51
    '+'         shift, and go to state 52
    '-'         shift, and go to state 53
    '('         shift, and go to state 54
    ')'         shift, and go to state 85

    expression        go to state 86
    function_call     go to state 56
    infix_expression  go to state 57
    if_expression     go to state 58
    parameter_list    go to state 87
    value             go to state 59


state 64

  104 value: '+' NUMBER_VAL .

    $default  reduce using rule 104 (value)


state 65

  105 value: '-' NUMBER_VAL .

    $default  reduce using rule 105 (value)


state 66

   39 expression: '(' expression . ')'
   46 infix_expression: expression . '+' expression
   47                 | expression . '-' expression
   48                 | expression . '*' expression
   49                 | expression . '/' expression
   50                 | expression . '%' expression
   51                 | expression . '&' expression
   52                 | expression . LS expression
   53                 | expression . RS expression
   54 if_expression: expression . '>' expression
   55              | expression . '<' expression
   56              | expression . OP_EQ expression
   57              | expression . OP_LE expression
   58              | expression . OP_GE expression
   59              | expression . OP_NE expression
   60              | expression . OP_LOR expression
   61              | expression . OP_LAND expression

    LS       shift, and go to state 67
    OP_GE    shift, and go to state 68
    OP_LE    shift, and go to state 69
    OP_EQ    shift, and go to state 70
    OP_NE    shift, and go to state 71
    OP_LAND  shift, and go to state 72
    OP_LOR   shift, and go to state 73
    RS       shift, and go to state 74
    '+'      shift, and go to state 75
    '-'      shift, and go to state 76
    '*'      shift, and go to state 77
    '/'      shift, and go to state 78
    '%'      shift, and go to state 79
    '&'      shift, and go to state 80
    ')'      shift, and go to state 88
    '<'      shift, and go to state 81
    '>'      shift, and go to state 82


state 67

   52 infix_expression: expression LS . expression

    FALSE       shift, and go to state 45
    TRUE        shift, and go to state 46
    NUMBER_VAL  shift, and go to state 47
    DOUBLE_VAL  shift, and go to state 48
    STRING_VAL  shift, and go to state 49
    CHAR_VAL    shift, and go to state 50
    ID          shift, and go to state 51
    '+'         shift, and go to state 52
    '-'         shift, and go to state 53
    '('         shift, and go to state 54

    expression        go to state 89
    function_call     go to state 56
    infix_expression  go to state 57
    if_expression     go to state 58
    value             go to state 59


state 68

   58 if_expression: expression OP_GE . expression

    FALSE       shift, and go to state 45
    TRUE        shift, and go to state 46
    NUMBER_VAL  shift, and go to state 47
    DOUBLE_VAL  shift, and go to state 48
    STRING_VAL  shift, and go to state 49
    CHAR_VAL    shift, and go to state 50
    ID          shift, and go to state 51
    '+'         shift, and go to state 52
    '-'         shift, and go to state 53
    '('         shift, and go to state 54

    expression        go to state 90
    function_call     go to state 56
    infix_expression  go to state 57
    if_expression     go to state 58
    value             go to state 59


state 69

   57 if_expression: expression OP_LE . expression

    FALSE       shift, and go to state 45
    TRUE        shift, and go to state 46
    NUMBER_VAL  shift, and go to state 47
    DOUBLE_VAL  shift, and go to state 48
    STRING_VAL  shift, and go to state 49
    CHAR_VAL    shift, and go to state 50
    ID          shift, and go to state 51
    '+'         shift, and go to state 52
    '-'         shift, and go to state 53
    '('         shift, and go to state 54

    expression        go to state 91
    function_call     go to state 56
    infix_expression  go to state 57
    if_expression     go to state 58
    value             go to state 59


state 70

   56 if_expression: expression OP_EQ . expression

    FALSE       shift, and go to state 45
    TRUE        shift, and go to state 46
    NUMBER_VAL  shift, and go to state 47
    DOUBLE_VAL  shift, and go to state 48
    STRING_VAL  shift, and go to state 49
    CHAR_VAL    shift, and go to state 50
    ID          shift, and go to state 51
    '+'         shift, and go to state 52
    '-'         shift, and go to state 53
    '('         shift, and go to state 54

    expression        go to state 92
    function_call     go to state 56
    infix_expression  go to state 57
    if_expression     go to state 58
    value             go to state 59


state 71

   59 if_expression: expression OP_NE . expression

    FALSE       shift, and go to state 45
    TRUE        shift, and go to state 46
    NUMBER_VAL  shift, and go to state 47
    DOUBLE_VAL  shift, and go to state 48
    STRING_VAL  shift, and go to state 49
    CHAR_VAL    shift, and go to state 50
    ID          shift, and go to state 51
    '+'         shift, and go to state 52
    '-'         shift, and go to state 53
    '('         shift, and go to state 54

    expression        go to state 93
    function_call     go to state 56
    infix_expression  go to state 57
    if_expression     go to state 58
    value             go to state 59


state 72

   61 if_expression: expression OP_LAND . expression

    FALSE       shift, and go to state 45
    TRUE        shift, and go to state 46
    NUMBER_VAL  shift, and go to state 47
    DOUBLE_VAL  shift, and go to state 48
    STRING_VAL  shift, and go to state 49
    CHAR_VAL    shift, and go to state 50
    ID          shift, and go to state 51
    '+'         shift, and go to state 52
    '-'         shift, and go to state 53
    '('         shift, and go to state 54

    expression        go to state 94
    function_call     go to state 56
    infix_expression  go to state 57
    if_expression     go to state 58
    value             go to state 59


state 73

   60 if_expression: expression OP_LOR . expression

    FALSE       shift, and go to state 45
    TRUE        shift, and go to state 46
    NUMBER_VAL  shift, and go to state 47
    DOUBLE_VAL  shift, and go to state 48
    STRING_VAL  shift, and go to state 49
    CHAR_VAL    shift, and go to state 50
    ID          shift, and go to state 51
    '+'         shift, and go to state 52
    '-'         shift, and go to state 53
    '('         shift, and go to state 54

    expression        go to state 95
    function_call     go to state 56
    infix_expression  go to state 57
    if_expression     go to state 58
    value             go to state 59


state 74

   53 infix_expression: expression RS . expression

    FALSE       shift, and go to state 45
    TRUE        shift, and go to state 46
    NUMBER_VAL  shift, and go to state 47
    DOUBLE_VAL  shift, and go to state 48
    STRING_VAL  shift, and go to state 49
    CHAR_VAL    shift, and go to state 50
    ID          shift, and go to state 51
    '+'         shift, and go to state 52
    '-'         shift, and go to state 53
    '('         shift, and go to state 54

    expression        go to state 96
    function_call     go to state 56
    infix_expression  go to state 57
    if_expression     go to state 58
    value             go to state 59


state 75

   46 infix_expression: expression '+' . expression

    FALSE       shift, and go to state 45
    TRUE        shift, and go to state 46
    NUMBER_VAL  shift, and go to state 47
    DOUBLE_VAL  shift, and go to state 48
    STRING_VAL  shift, and go to state 49
    CHAR_VAL    shift, and go to state 50
    ID          shift, and go to state 51
    '+'         shift, and go to state 52
    '-'         shift, and go to state 53
    '('         shift, and go to state 54

    expression        go to state 97
    function_call     go to state 56
    infix_expression  go to state 57
    if_expression     go to state 58
    value             go to state 59


state 76

   47 infix_expression: expression '-' . expression

    FALSE       shift, and go to state 45
    TRUE        shift, and go to state 46
    NUMBER_VAL  shift, and go to state 47
    DOUBLE_VAL  shift, and go to state 48
    STRING_VAL  shift, and go to state 49
    CHAR_VAL    shift, and go to state 50
    ID          shift, and go to state 51
    '+'         shift, and go to state 52
    '-'         shift, and go to state 53
    '('         shift, and go to state 54

    expression        go to state 98
    function_call     go to state 56
    infix_expression  go to state 57
    if_expression     go to state 58
    value             go to state 59


state 77

   48 infix_expression: expression '*' . expression

    FALSE       shift, and go to state 45
    TRUE        shift, and go to state 46
    NUMBER_VAL  shift, and go to state 47
    DOUBLE_VAL  shift, and go to state 48
    STRING_VAL  shift, and go to state 49
    CHAR_VAL    shift, and go to state 50
    ID          shift, and go to state 51
    '+'         shift, and go to state 52
    '-'         shift, and go to state 53
    '('         shift, and go to state 54

    expression        go to state 99
    function_call     go to state 56
    infix_expression  go to state 57
    if_expression     go to state 58
    value             go to state 59


state 78

   49 infix_expression: expression '/' . expression

    FALSE       shift, and go to state 45
    TRUE        shift, and go to state 46
    NUMBER_VAL  shift, and go to state 47
    DOUBLE_VAL  shift, and go to state 48
    STRING_VAL  shift, and go to state 49
    CHAR_VAL    shift, and go to state 50
    ID          shift, and go to state 51
    '+'         shift, and go to state 52
    '-'         shift, and go to state 53
    '('         shift, and go to state 54

    expression        go to state 100
    function_call     go to state 56
    infix_expression  go to state 57
    if_expression     go to state 58
    value             go to state 59


state 79

   50 infix_expression: expression '%' . expression

    FALSE       shift, and go to state 45
    TRUE        shift, and go to state 46
    NUMBER_VAL  shift, and go to state 47
    DOUBLE_VAL  shift, and go to state 48
    STRING_VAL  shift, and go to state 49
    CHAR_VAL    shift, and go to state 50
    ID          shift, and go to state 51
    '+'         shift, and go to state 52
    '-'         shift, and go to state 53
    '('         shift, and go to state 54

    expression        go to state 101
    function_call     go to state 56
    infix_expression  go to state 57
    if_expression     go to state 58
    value             go to state 59


state 80

   51 infix_expression: expression '&' . expression

    FALSE       shift, and go to state 45
    TRUE        shift, and go to state 46
    NUMBER_VAL  shift, and go to state 47
    DOUBLE_VAL  shift, and go to state 48
    STRING_VAL  shift, and go to state 49
    CHAR_VAL    shift, and go to state 50
    ID          shift, and go to state 51
    '+'         shift, and go to state 52
    '-'         shift, and go to state 53
    '('         shift, and go to state 54

    expression        go to state 102
    function_call     go to state 56
    infix_expression  go to state 57
    if_expression     go to state 58
    value             go to state 59


state 81

   55 if_expression: expression '<' . expression

    FALSE       shift, and go to state 45
    TRUE        shift, and go to state 46
    NUMBER_VAL  shift, and go to state 47
    DOUBLE_VAL  shift, and go to state 48
    STRING_VAL  shift, and go to state 49
    CHAR_VAL    shift, and go to state 50
    ID          shift, and go to state 51
    '+'         shift, and go to state 52
    '-'         shift, and go to state 53
    '('         shift, and go to state 54

    expression        go to state 103
    function_call     go to state 56
    infix_expression  go to state 57
    if_expression     go to state 58
    value             go to state 59


state 82

   54 if_expression: expression '>' . expression

    FALSE       shift, and go to state 45
    TRUE        shift, and go to state 46
    NUMBER_VAL  shift, and go to state 47
    DOUBLE_VAL  shift, and go to state 48
    STRING_VAL  shift, and go to state 49
    CHAR_VAL    shift, and go to state 50
    ID          shift, and go to state 51
    '+'         shift, and go to state 52
    '-'         shift, and go to state 53
    '('         shift, and go to state 54

    expression        go to state 104
    function_call     go to state 56
    infix_expression  go to state 57
    if_expression     go to state 58
    value             go to state 59


state 83

   12 function: scope STATIC type ID '(' . argument_list ')' code

    BOOLEAN  shift, and go to state 6
    CHAR     shift, and go to state 7
    DOUBLE   shift, and go to state 8
    INT      shift, and go to state 9
    STRING   shift, and go to state 13
    VOID     shift, and go to state 14

    argument_list  go to state 105
    argument       go to state 106
    type           go to state 107


state 84

    5 main: scope STATIC VOID MAIN '(' STRING . '[' ']' ARGS ')' code

    '['  shift, and go to state 108


state 85

   44 function_call: ID '(' ')' .

    $default  reduce using rule 44 (function_call)


state 86

   46 infix_expression: expression . '+' expression
   47                 | expression . '-' expression
   48                 | expression . '*' expression
   49                 | expression . '/' expression
   50                 | expression . '%' expression
   51                 | expression . '&' expression
   52                 | expression . LS expression
   53                 | expression . RS expression
   54 if_expression: expression . '>' expression
   55              | expression . '<' expression
   56              | expression . OP_EQ expression
   57              | expression . OP_LE expression
   58              | expression . OP_GE expression
   59              | expression . OP_NE expression
   60              | expression . OP_LOR expression
   61              | expression . OP_LAND expression
   62 parameter_list: expression .

    LS       shift, and go to state 67
    OP_GE    shift, and go to state 68
    OP_LE    shift, and go to state 69
    OP_EQ    shift, and go to state 70
    OP_NE    shift, and go to state 71
    OP_LAND  shift, and go to state 72
    OP_LOR   shift, and go to state 73
    RS       shift, and go to state 74
    '+'      shift, and go to state 75
    '-'      shift, and go to state 76
    '*'      shift, and go to state 77
    '/'      shift, and go to state 78
    '%'      shift, and go to state 79
    '&'      shift, and go to state 80
    '<'      shift, and go to state 81
    '>'      shift, and go to state 82

    $default  reduce using rule 62 (parameter_list)


state 87

   45 function_call: ID '(' parameter_list . ')'
   63 parameter_list: parameter_list . ',' expression

    ')'  shift, and go to state 109
    ','  shift, and go to state 110


state 88

   39 expression: '(' expression ')' .

    $default  reduce using rule 39 (expression)


state 89

   46 infix_expression: expression . '+' expression
   47                 | expression . '-' expression
   48                 | expression . '*' expression
   49                 | expression . '/' expression
   50                 | expression . '%' expression
   51                 | expression . '&' expression
   52                 | expression . LS expression
   52                 | expression LS expression .
   53                 | expression . RS expression
   54 if_expression: expression . '>' expression
   55              | expression . '<' expression
   56              | expression . OP_EQ expression
   57              | expression . OP_LE expression
   58              | expression . OP_GE expression
   59              | expression . OP_NE expression
   60              | expression . OP_LOR expression
   61              | expression . OP_LAND expression

    OP_GE    shift, and go to state 68
    OP_LE    shift, and go to state 69
    OP_EQ    shift, and go to state 70
    OP_NE    shift, and go to state 71
    OP_LAND  shift, and go to state 72
    OP_LOR   shift, and go to state 73
    '<'      shift, and go to state 81
    '>'      shift, and go to state 82

    $default  reduce using rule 52 (infix_expression)


state 90

   46 infix_expression: expression . '+' expression
   47                 | expression . '-' expression
   48                 | expression . '*' expression
   49                 | expression . '/' expression
   50                 | expression . '%' expression
   51                 | expression . '&' expression
   52                 | expression . LS expression
   53                 | expression . RS expression
   54 if_expression: expression . '>' expression
   55              | expression . '<' expression
   56              | expression . OP_EQ expression
   57              | expression . OP_LE expression
   58              | expression . OP_GE expression
   58              | expression OP_GE expression .
   59              | expression . OP_NE expression
   60              | expression . OP_LOR expression
   61              | expression . OP_LAND expression

    $default  reduce using rule 58 (if_expression)


state 91

   46 infix_expression: expression . '+' expression
   47                 | expression . '-' expression
   48                 | expression . '*' expression
   49                 | expression . '/' expression
   50                 | expression . '%' expression
   51                 | expression . '&' expression
   52                 | expression . LS expression
   53                 | expression . RS expression
   54 if_expression: expression . '>' expression
   55              | expression . '<' expression
   56              | expression . OP_EQ expression
   57              | expression . OP_LE expression
   57              | expression OP_LE expression .
   58              | expression . OP_GE expression
   59              | expression . OP_NE expression
   60              | expression . OP_LOR expression
   61              | expression . OP_LAND expression

    $default  reduce using rule 57 (if_expression)


state 92

   46 infix_expression: expression . '+' expression
   47                 | expression . '-' expression
   48                 | expression . '*' expression
   49                 | expression . '/' expression
   50                 | expression . '%' expression
   51                 | expression . '&' expression
   52                 | expression . LS expression
   53                 | expression . RS expression
   54 if_expression: expression . '>' expression
   55              | expression . '<' expression
   56              | expression . OP_EQ expression
   56              | expression OP_EQ expression .
   57              | expression . OP_LE expression
   58              | expression . OP_GE expression
   59              | expression . OP_NE expression
   60              | expression . OP_LOR expression
   61              | expression . OP_LAND expression

    $default  reduce using rule 56 (if_expression)


state 93

   46 infix_expression: expression . '+' expression
   47                 | expression . '-' expression
   48                 | expression . '*' expression
   49                 | expression . '/' expression
   50                 | expression . '%' expression
   51                 | expression . '&' expression
   52                 | expression . LS expression
   53                 | expression . RS expression
   54 if_expression: expression . '>' expression
   55              | expression . '<' expression
   56              | expression . OP_EQ expression
   57              | expression . OP_LE expression
   58              | expression . OP_GE expression
   59              | expression . OP_NE expression
   59              | expression OP_NE expression .
   60              | expression . OP_LOR expression
   61              | expression . OP_LAND expression

    $default  reduce using rule 59 (if_expression)


state 94

   46 infix_expression: expression . '+' expression
   47                 | expression . '-' expression
   48                 | expression . '*' expression
   49                 | expression . '/' expression
   50                 | expression . '%' expression
   51                 | expression . '&' expression
   52                 | expression . LS expression
   53                 | expression . RS expression
   54 if_expression: expression . '>' expression
   55              | expression . '<' expression
   56              | expression . OP_EQ expression
   57              | expression . OP_LE expression
   58              | expression . OP_GE expression
   59              | expression . OP_NE expression
   60              | expression . OP_LOR expression
   61              | expression . OP_LAND expression
   61              | expression OP_LAND expression .

    $default  reduce using rule 61 (if_expression)


state 95

   46 infix_expression: expression . '+' expression
   47                 | expression . '-' expression
   48                 | expression . '*' expression
   49                 | expression . '/' expression
   50                 | expression . '%' expression
   51                 | expression . '&' expression
   52                 | expression . LS expression
   53                 | expression . RS expression
   54 if_expression: expression . '>' expression
   55              | expression . '<' expression
   56              | expression . OP_EQ expression
   57              | expression . OP_LE expression
   58              | expression . OP_GE expression
   59              | expression . OP_NE expression
   60              | expression . OP_LOR expression
   60              | expression OP_LOR expression .
   61              | expression . OP_LAND expression

    $default  reduce using rule 60 (if_expression)


state 96

   46 infix_expression: expression . '+' expression
   47                 | expression . '-' expression
   48                 | expression . '*' expression
   49                 | expression . '/' expression
   50                 | expression . '%' expression
   51                 | expression . '&' expression
   52                 | expression . LS expression
   53                 | expression . RS expression
   53                 | expression RS expression .
   54 if_expression: expression . '>' expression
   55              | expression . '<' expression
   56              | expression . OP_EQ expression
   57              | expression . OP_LE expression
   58              | expression . OP_GE expression
   59              | expression . OP_NE expression
   60              | expression . OP_LOR expression
   61              | expression . OP_LAND expression

    OP_GE    shift, and go to state 68
    OP_LE    shift, and go to state 69
    OP_EQ    shift, and go to state 70
    OP_NE    shift, and go to state 71
    OP_LAND  shift, and go to state 72
    OP_LOR   shift, and go to state 73
    '<'      shift, and go to state 81
    '>'      shift, and go to state 82

    $default  reduce using rule 53 (infix_expression)


state 97

   46 infix_expression: expression . '+' expression
   46                 | expression '+' expression .
   47                 | expression . '-' expression
   48                 | expression . '*' expression
   49                 | expression . '/' expression
   50                 | expression . '%' expression
   51                 | expression . '&' expression
   52                 | expression . LS expression
   53                 | expression . RS expression
   54 if_expression: expression . '>' expression
   55              | expression . '<' expression
   56              | expression . OP_EQ expression
   57              | expression . OP_LE expression
   58              | expression . OP_GE expression
   59              | expression . OP_NE expression
   60              | expression . OP_LOR expression
   61              | expression . OP_LAND expression

    LS       shift, and go to state 67
    OP_GE    shift, and go to state 68
    OP_LE    shift, and go to state 69
    OP_EQ    shift, and go to state 70
    OP_NE    shift, and go to state 71
    OP_LAND  shift, and go to state 72
    OP_LOR   shift, and go to state 73
    RS       shift, and go to state 74
    '*'      shift, and go to state 77
    '/'      shift, and go to state 78
    '%'      shift, and go to state 79
    '&'      shift, and go to state 80
    '<'      shift, and go to state 81
    '>'      shift, and go to state 82

    $default  reduce using rule 46 (infix_expression)


state 98

   46 infix_expression: expression . '+' expression
   47                 | expression . '-' expression
   47                 | expression '-' expression .
   48                 | expression . '*' expression
   49                 | expression . '/' expression
   50                 | expression . '%' expression
   51                 | expression . '&' expression
   52                 | expression . LS expression
   53                 | expression . RS expression
   54 if_expression: expression . '>' expression
   55              | expression . '<' expression
   56              | expression . OP_EQ expression
   57              | expression . OP_LE expression
   58              | expression . OP_GE expression
   59              | expression . OP_NE expression
   60              | expression . OP_LOR expression
   61              | expression . OP_LAND expression

    LS       shift, and go to state 67
    OP_GE    shift, and go to state 68
    OP_LE    shift, and go to state 69
    OP_EQ    shift, and go to state 70
    OP_NE    shift, and go to state 71
    OP_LAND  shift, and go to state 72
    OP_LOR   shift, and go to state 73
    RS       shift, and go to state 74
    '*'      shift, and go to state 77
    '/'      shift, and go to state 78
    '%'      shift, and go to state 79
    '&'      shift, and go to state 80
    '<'      shift, and go to state 81
    '>'      shift, and go to state 82

    $default  reduce using rule 47 (infix_expression)


state 99

   46 infix_expression: expression . '+' expression
   47                 | expression . '-' expression
   48                 | expression . '*' expression
   48                 | expression '*' expression .
   49                 | expression . '/' expression
   50                 | expression . '%' expression
   51                 | expression . '&' expression
   52                 | expression . LS expression
   53                 | expression . RS expression
   54 if_expression: expression . '>' expression
   55              | expression . '<' expression
   56              | expression . OP_EQ expression
   57              | expression . OP_LE expression
   58              | expression . OP_GE expression
   59              | expression . OP_NE expression
   60              | expression . OP_LOR expression
   61              | expression . OP_LAND expression

    OP_GE    shift, and go to state 68
    OP_LE    shift, and go to state 69
    OP_EQ    shift, and go to state 70
    OP_NE    shift, and go to state 71
    OP_LAND  shift, and go to state 72
    OP_LOR   shift, and go to state 73
    '<'      shift, and go to state 81
    '>'      shift, and go to state 82

    $default  reduce using rule 48 (infix_expression)


state 100

   46 infix_expression: expression . '+' expression
   47                 | expression . '-' expression
   48                 | expression . '*' expression
   49                 | expression . '/' expression
   49                 | expression '/' expression .
   50                 | expression . '%' expression
   51                 | expression . '&' expression
   52                 | expression . LS expression
   53                 | expression . RS expression
   54 if_expression: expression . '>' expression
   55              | expression . '<' expression
   56              | expression . OP_EQ expression
   57              | expression . OP_LE expression
   58              | expression . OP_GE expression
   59              | expression . OP_NE expression
   60              | expression . OP_LOR expression
   61              | expression . OP_LAND expression

    OP_GE    shift, and go to state 68
    OP_LE    shift, and go to state 69
    OP_EQ    shift, and go to state 70
    OP_NE    shift, and go to state 71
    OP_LAND  shift, and go to state 72
    OP_LOR   shift, and go to state 73
    '<'      shift, and go to state 81
    '>'      shift, and go to state 82

    $default  reduce using rule 49 (infix_expression)


state 101

   46 infix_expression: expression . '+' expression
   47                 | expression . '-' expression
   48                 | expression . '*' expression
   49                 | expression . '/' expression
   50                 | expression . '%' expression
   50                 | expression '%' expression .
   51                 | expression . '&' expression
   52                 | expression . LS expression
   53                 | expression . RS expression
   54 if_expression: expression . '>' expression
   55              | expression . '<' expression
   56              | expression . OP_EQ expression
   57              | expression . OP_LE expression
   58              | expression . OP_GE expression
   59              | expression . OP_NE expression
   60              | expression . OP_LOR expression
   61              | expression . OP_LAND expression

    OP_GE    shift, and go to state 68
    OP_LE    shift, and go to state 69
    OP_EQ    shift, and go to state 70
    OP_NE    shift, and go to state 71
    OP_LAND  shift, and go to state 72
    OP_LOR   shift, and go to state 73
    '<'      shift, and go to state 81
    '>'      shift, and go to state 82

    $default  reduce using rule 50 (infix_expression)


state 102

   46 infix_expression: expression . '+' expression
   47                 | expression . '-' expression
   48                 | expression . '*' expression
   49                 | expression . '/' expression
   50                 | expression . '%' expression
   51                 | expression . '&' expression
   51                 | expression '&' expression .
   52                 | expression . LS expression
   53                 | expression . RS expression
   54 if_expression: expression . '>' expression
   55              | expression . '<' expression
   56              | expression . OP_EQ expression
   57              | expression . OP_LE expression
   58              | expression . OP_GE expression
   59              | expression . OP_NE expression
   60              | expression . OP_LOR expression
   61              | expression . OP_LAND expression

    OP_GE    shift, and go to state 68
    OP_LE    shift, and go to state 69
    OP_EQ    shift, and go to state 70
    OP_NE    shift, and go to state 71
    OP_LAND  shift, and go to state 72
    OP_LOR   shift, and go to state 73
    '<'      shift, and go to state 81
    '>'      shift, and go to state 82

    $default  reduce using rule 51 (infix_expression)


state 103

   46 infix_expression: expression . '+' expression
   47                 | expression . '-' expression
   48                 | expression . '*' expression
   49                 | expression . '/' expression
   50                 | expression . '%' expression
   51                 | expression . '&' expression
   52                 | expression . LS expression
   53                 | expression . RS expression
   54 if_expression: expression . '>' expression
   55              | expression . '<' expression
   55              | expression '<' expression .
   56              | expression . OP_EQ expression
   57              | expression . OP_LE expression
   58              | expression . OP_GE expression
   59              | expression . OP_NE expression
   60              | expression . OP_LOR expression
   61              | expression . OP_LAND expression

    $default  reduce using rule 55 (if_expression)


state 104

   46 infix_expression: expression . '+' expression
   47                 | expression . '-' expression
   48                 | expression . '*' expression
   49                 | expression . '/' expression
   50                 | expression . '%' expression
   51                 | expression . '&' expression
   52                 | expression . LS expression
   53                 | expression . RS expression
   54 if_expression: expression . '>' expression
   54              | expression '>' expression .
   55              | expression . '<' expression
   56              | expression . OP_EQ expression
   57              | expression . OP_LE expression
   58              | expression . OP_GE expression
   59              | expression . OP_NE expression
   60              | expression . OP_LOR expression
   61              | expression . OP_LAND expression

    $default  reduce using rule 54 (if_expression)


state 105

   12 function: scope STATIC type ID '(' argument_list . ')' code
   69 argument_list: argument_list . ',' argument

    ')'  shift, and go to state 111
    ','  shift, and go to state 112


state 106

   68 argument_list: argument .

    $default  reduce using rule 68 (argument_list)


state 107

   70 argument: type . ID

    ID  shift, and go to state 113


state 108

    5 main: scope STATIC VOID MAIN '(' STRING '[' . ']' ARGS ')' code

    ']'  shift, and go to state 114


state 109

   45 function_call: ID '(' parameter_list ')' .

    $default  reduce using rule 45 (function_call)


state 110

   63 parameter_list: parameter_list ',' . expression

    FALSE       shift, and go to state 45
    TRUE        shift, and go to state 46
    NUMBER_VAL  shift, and go to state 47
    DOUBLE_VAL  shift, and go to state 48
    STRING_VAL  shift, and go to state 49
    CHAR_VAL    shift, and go to state 50
    ID          shift, and go to state 51
    '+'         shift, and go to state 52
    '-'         shift, and go to state 53
    '('         shift, and go to state 54

    expression        go to state 115
    function_call     go to state 56
    infix_expression  go to state 57
    if_expression     go to state 58
    value             go to state 59


state 111

   12 function: scope STATIC type ID '(' argument_list ')' . code

    '{'  shift, and go to state 116

    code  go to state 117


state 112

   69 argument_list: argument_list ',' . argument

    BOOLEAN  shift, and go to state 6
    CHAR     shift, and go to state 7
    DOUBLE   shift, and go to state 8
    INT      shift, and go to state 9
    STRING   shift, and go to state 13
    VOID     shift, and go to state 14

    argument  go to state 118
    type      go to state 107


state 113

   70 argument: type ID .

    $default  reduce using rule 70 (argument)


state 114

    5 main: scope STATIC VOID MAIN '(' STRING '[' ']' . ARGS ')' code

    ARGS  shift, and go to state 119


state 115

   46 infix_expression: expression . '+' expression
   47                 | expression . '-' expression
   48                 | expression . '*' expression
   49                 | expression . '/' expression
   50                 | expression . '%' expression
   51                 | expression . '&' expression
   52                 | expression . LS expression
   53                 | expression . RS expression
   54 if_expression: expression . '>' expression
   55              | expression . '<' expression
   56              | expression . OP_EQ expression
   57              | expression . OP_LE expression
   58              | expression . OP_GE expression
   59              | expression . OP_NE expression
   60              | expression . OP_LOR expression
   61              | expression . OP_LAND expression
   63 parameter_list: parameter_list ',' expression .

    LS       shift, and go to state 67
    OP_GE    shift, and go to state 68
    OP_LE    shift, and go to state 69
    OP_EQ    shift, and go to state 70
    OP_NE    shift, and go to state 71
    OP_LAND  shift, and go to state 72
    OP_LOR   shift, and go to state 73
    RS       shift, and go to state 74
    '+'      shift, and go to state 75
    '-'      shift, and go to state 76
    '*'      shift, and go to state 77
    '/'      shift, and go to state 78
    '%'      shift, and go to state 79
    '&'      shift, and go to state 80
    '<'      shift, and go to state 81
    '>'      shift, and go to state 82

    $default  reduce using rule 63 (parameter_list)


state 116

   16 code: '{' . '}'
   17     | '{' . operation_list '}'

    BOOLEAN   shift, and go to state 6
    BREAK     shift, and go to state 120
    CHAR      shift, and go to state 7
    CONTINUE  shift, and go to state 121
    DO        shift, and go to state 122
    DOUBLE    shift, and go to state 8
    FOR       shift, and go to state 123
    IF        shift, and go to state 124
    INT       shift, and go to state 9
    OP_INC    shift, and go to state 125
    OP_DEC    shift, and go to state 126
    STRING    shift, and go to state 13
    SWITCH    shift, and go to state 127
    SYSTEM    shift, and go to state 128
    RETURN    shift, and go to state 129
    VOID      shift, and go to state 14
    WHILE     shift, and go to state 130
    ID        shift, and go to state 131
    '}'       shift, and go to state 132

    operation_list  go to state 133
    operation       go to state 134
    declaration     go to state 135
    assignment      go to state 136
    unary           go to state 137
    control         go to state 138
    function_call   go to state 139
    cycle           go to state 140
    if              go to state 141
    type            go to state 20


state 117

   12 function: scope STATIC type ID '(' argument_list ')' code .

    $default  reduce using rule 12 (function)


state 118

   69 argument_list: argument_list ',' argument .

    $default  reduce using rule 69 (argument_list)


state 119

    5 main: scope STATIC VOID MAIN '(' STRING '[' ']' ARGS . ')' code

    ')'  shift, and go to state 142


state 120

   33 control: BREAK .

    $default  reduce using rule 33 (control)


state 121

   34 control: CONTINUE .

    $default  reduce using rule 34 (control)


state 122

   76 cycle: DO . condition_code WHILE '(' expression ')' ';'

    BOOLEAN   shift, and go to state 6
    BREAK     shift, and go to state 120
    CHAR      shift, and go to state 7
    CONTINUE  shift, and go to state 121
    DO        shift, and go to state 122
    DOUBLE    shift, and go to state 8
    FOR       shift, and go to state 123
    IF        shift, and go to state 124
    INT       shift, and go to state 9
    OP_INC    shift, and go to state 125
    OP_DEC    shift, and go to state 126
    STRING    shift, and go to state 13
    SWITCH    shift, and go to state 127
    SYSTEM    shift, and go to state 128
    RETURN    shift, and go to state 129
    VOID      shift, and go to state 14
    WHILE     shift, and go to state 130
    ID        shift, and go to state 131
    '{'       shift, and go to state 143
    ';'       shift, and go to state 144

    operation       go to state 145
    declaration     go to state 135
    assignment      go to state 136
    unary           go to state 137
    control         go to state 138
    function_call   go to state 139
    cycle           go to state 140
    if              go to state 141
    condition_code  go to state 146
    type            go to state 20


state 123

   71 cycle: FOR . '(' forInit ';' expression ';' increase_list ')' condition_code
   72      | FOR . '(' ';' expression ';' increase_list ')' condition_code
   73      | FOR . '(' forInit ';' expression ';' ')' condition_code
   74      | FOR . '(' ';' expression ';' ')' condition_code

    '('  shift, and go to state 147


state 124

   77 if: IF . '(' expression ')' condition_code
   78   | IF . '(' expression ')' condition_code ELSE condition_code

    '('  shift, and go to state 148


state 125

   30 unary: OP_INC . ID

    ID  shift, and go to state 149


state 126

   32 unary: OP_DEC . ID

    ID  shift, and go to state 150


state 127

   79 if: SWITCH . '(' expression ')' '{' switch '}'

    '('  shift, and go to state 151


state 128

   37 control: SYSTEM . '.' OUT '.' PRINTLN '(' expression ')'
   38        | SYSTEM . '.' OUT '.' PRINT '(' expression ')'

    '.'  shift, and go to state 152


state 129

   35 control: RETURN .
   36        | RETURN . expression

    FALSE       shift, and go to state 45
    TRUE        shift, and go to state 46
    NUMBER_VAL  shift, and go to state 47
    DOUBLE_VAL  shift, and go to state 48
    STRING_VAL  shift, and go to state 49
    CHAR_VAL    shift, and go to state 50
    ID          shift, and go to state 51
    '+'         shift, and go to state 52
    '-'         shift, and go to state 53
    '('         shift, and go to state 54

    $default  reduce using rule 35 (control)

    expression        go to state 153
    function_call     go to state 56
    infix_expression  go to state 57
    if_expression     go to state 58
    value             go to state 59


state 130

   75 cycle: WHILE . '(' expression ')' condition_code

    '('  shift, and go to state 154


state 131

   28 assignment: ID . assign_operator expression
   29 unary: ID . OP_INC
   31      | ID . OP_DEC
   44 function_call: ID . '(' ')'
   45              | ID . '(' parameter_list ')'

    ASS_MUL   shift, and go to state 155
    ASS_DIV   shift, and go to state 156
    ASS_ADD   shift, and go to state 157
    ASS_SUB   shift, and go to state 158
    ASS_AND   shift, and go to state 159
    OP_INC    shift, and go to state 160
    OP_DEC    shift, and go to state 161
    '('       shift, and go to state 63
    '='       shift, and go to state 162
    ASS_PERC  shift, and go to state 163

    assign_operator  go to state 164


state 132

   16 code: '{' '}' .

    $default  reduce using rule 16 (code)


state 133

   17 code: '{' operation_list . '}'
   19 operation_list: operation_list . operation

    BOOLEAN   shift, and go to state 6
    BREAK     shift, and go to state 120
    CHAR      shift, and go to state 7
    CONTINUE  shift, and go to state 121
    DO        shift, and go to state 122
    DOUBLE    shift, and go to state 8
    FOR       shift, and go to state 123
    IF        shift, and go to state 124
    INT       shift, and go to state 9
    OP_INC    shift, and go to state 125
    OP_DEC    shift, and go to state 126
    STRING    shift, and go to state 13
    SWITCH    shift, and go to state 127
    SYSTEM    shift, and go to state 128
    RETURN    shift, and go to state 129
    VOID      shift, and go to state 14
    WHILE     shift, and go to state 130
    ID        shift, and go to state 131
    '}'       shift, and go to state 165

    operation      go to state 166
    declaration    go to state 135
    assignment     go to state 136
    unary          go to state 137
    control        go to state 138
    function_call  go to state 139
    cycle          go to state 140
    if             go to state 141
    type           go to state 20


state 134

   18 operation_list: operation .

    $default  reduce using rule 18 (operation_list)


state 135

   20 operation: declaration . ';'

    ';'  shift, and go to state 167


state 136

   21 operation: assignment . ';'

    ';'  shift, and go to state 168


state 137

   22 operation: unary . ';'

    ';'  shift, and go to state 169


state 138

   25 operation: control . ';'

    ';'  shift, and go to state 170


state 139

   26 operation: function_call . ';'

    ';'  shift, and go to state 171


state 140

   24 operation: cycle .

    $default  reduce using rule 24 (operation)


state 141

   23 operation: if .

    $default  reduce using rule 23 (operation)


state 142

    5 main: scope STATIC VOID MAIN '(' STRING '[' ']' ARGS ')' . code

    '{'  shift, and go to state 116

    code  go to state 172


state 143

   86 condition_code: '{' . operation_list '}'
   89               | '{' . '}'

    BOOLEAN   shift, and go to state 6
    BREAK     shift, and go to state 120
    CHAR      shift, and go to state 7
    CONTINUE  shift, and go to state 121
    DO        shift, and go to state 122
    DOUBLE    shift, and go to state 8
    FOR       shift, and go to state 123
    IF        shift, and go to state 124
    INT       shift, and go to state 9
    OP_INC    shift, and go to state 125
    OP_DEC    shift, and go to state 126
    STRING    shift, and go to state 13
    SWITCH    shift, and go to state 127
    SYSTEM    shift, and go to state 128
    RETURN    shift, and go to state 129
    VOID      shift, and go to state 14
    WHILE     shift, and go to state 130
    ID        shift, and go to state 131
    '}'       shift, and go to state 173

    operation_list  go to state 174
    operation       go to state 134
    declaration     go to state 135
    assignment      go to state 136
    unary           go to state 137
    control         go to state 138
    function_call   go to state 139
    cycle           go to state 140
    if              go to state 141
    type            go to state 20


state 144

   88 condition_code: ';' .

    $default  reduce using rule 88 (condition_code)


state 145

   87 condition_code: operation .

    $default  reduce using rule 87 (condition_code)


state 146

   76 cycle: DO condition_code . WHILE '(' expression ')' ';'

    WHILE  shift, and go to state 175


state 147

   71 cycle: FOR '(' . forInit ';' expression ';' increase_list ')' condition_code
   72      | FOR '(' . ';' expression ';' increase_list ')' condition_code
   73      | FOR '(' . forInit ';' expression ';' ')' condition_code
   74      | FOR '(' . ';' expression ';' ')' condition_code

    BOOLEAN  shift, and go to state 6
    CHAR     shift, and go to state 7
    DOUBLE   shift, and go to state 8
    INT      shift, and go to state 9
    STRING   shift, and go to state 13
    VOID     shift, and go to state 14
    ID       shift, and go to state 176
    ';'      shift, and go to state 177

    declaration  go to state 178
    assignment   go to state 179
    forInit      go to state 180
    type         go to state 20


state 148

   77 if: IF '(' . expression ')' condition_code
   78   | IF '(' . expression ')' condition_code ELSE condition_code

    FALSE       shift, and go to state 45
    TRUE        shift, and go to state 46
    NUMBER_VAL  shift, and go to state 47
    DOUBLE_VAL  shift, and go to state 48
    STRING_VAL  shift, and go to state 49
    CHAR_VAL    shift, and go to state 50
    ID          shift, and go to state 51
    '+'         shift, and go to state 52
    '-'         shift, and go to state 53
    '('         shift, and go to state 54

    expression        go to state 181
    function_call     go to state 56
    infix_expression  go to state 57
    if_expression     go to state 58
    value             go to state 59


state 149

   30 unary: OP_INC ID .

    $default  reduce using rule 30 (unary)


state 150

   32 unary: OP_DEC ID .

    $default  reduce using rule 32 (unary)


state 151

   79 if: SWITCH '(' . expression ')' '{' switch '}'

    FALSE       shift, and go to state 45
    TRUE        shift, and go to state 46
    NUMBER_VAL  shift, and go to state 47
    DOUBLE_VAL  shift, and go to state 48
    STRING_VAL  shift, and go to state 49
    CHAR_VAL    shift, and go to state 50
    ID          shift, and go to state 51
    '+'         shift, and go to state 52
    '-'         shift, and go to state 53
    '('         shift, and go to state 54

    expression        go to state 182
    function_call     go to state 56
    infix_expression  go to state 57
    if_expression     go to state 58
    value             go to state 59


state 152

   37 control: SYSTEM '.' . OUT '.' PRINTLN '(' expression ')'
   38        | SYSTEM '.' . OUT '.' PRINT '(' expression ')'

    OUT  shift, and go to state 183


state 153

   36 control: RETURN expression .
   46 infix_expression: expression . '+' expression
   47                 | expression . '-' expression
   48                 | expression . '*' expression
   49                 | expression . '/' expression
   50                 | expression . '%' expression
   51                 | expression . '&' expression
   52                 | expression . LS expression
   53                 | expression . RS expression
   54 if_expression: expression . '>' expression
   55              | expression . '<' expression
   56              | expression . OP_EQ expression
   57              | expression . OP_LE expression
   58              | expression . OP_GE expression
   59              | expression . OP_NE expression
   60              | expression . OP_LOR expression
   61              | expression . OP_LAND expression

    LS       shift, and go to state 67
    OP_GE    shift, and go to state 68
    OP_LE    shift, and go to state 69
    OP_EQ    shift, and go to state 70
    OP_NE    shift, and go to state 71
    OP_LAND  shift, and go to state 72
    OP_LOR   shift, and go to state 73
    RS       shift, and go to state 74
    '+'      shift, and go to state 75
    '-'      shift, and go to state 76
    '*'      shift, and go to state 77
    '/'      shift, and go to state 78
    '%'      shift, and go to state 79
    '&'      shift, and go to state 80
    '<'      shift, and go to state 81
    '>'      shift, and go to state 82

    $default  reduce using rule 36 (control)


state 154

   75 cycle: WHILE '(' . expression ')' condition_code

    FALSE       shift, and go to state 45
    TRUE        shift, and go to state 46
    NUMBER_VAL  shift, and go to state 47
    DOUBLE_VAL  shift, and go to state 48
    STRING_VAL  shift, and go to state 49
    CHAR_VAL    shift, and go to state 50
    ID          shift, and go to state 51
    '+'         shift, and go to state 52
    '-'         shift, and go to state 53
    '('         shift, and go to state 54

    expression        go to state 184
    function_call     go to state 56
    infix_expression  go to state 57
    if_expression     go to state 58
    value             go to state 59


state 155

   97 assign_operator: ASS_MUL .

    $default  reduce using rule 97 (assign_operator)


state 156

   98 assign_operator: ASS_DIV .

    $default  reduce using rule 98 (assign_operator)


state 157

   95 assign_operator: ASS_ADD .

    $default  reduce using rule 95 (assign_operator)


state 158

   96 assign_operator: ASS_SUB .

    $default  reduce using rule 96 (assign_operator)


state 159

  100 assign_operator: ASS_AND .

    $default  reduce using rule 100 (assign_operator)


state 160

   29 unary: ID OP_INC .

    $default  reduce using rule 29 (unary)


state 161

   31 unary: ID OP_DEC .

    $default  reduce using rule 31 (unary)


state 162

   94 assign_operator: '=' .

    $default  reduce using rule 94 (assign_operator)


state 163

   99 assign_operator: ASS_PERC .

    $default  reduce using rule 99 (assign_operator)


state 164

   28 assignment: ID assign_operator . expression

    FALSE       shift, and go to state 45
    TRUE        shift, and go to state 46
    NUMBER_VAL  shift, and go to state 47
    DOUBLE_VAL  shift, and go to state 48
    STRING_VAL  shift, and go to state 49
    CHAR_VAL    shift, and go to state 50
    ID          shift, and go to state 51
    '+'         shift, and go to state 52
    '-'         shift, and go to state 53
    '('         shift, and go to state 54

    expression        go to state 185
    function_call     go to state 56
    infix_expression  go to state 57
    if_expression     go to state 58
    value             go to state 59


state 165

   17 code: '{' operation_list '}' .

    $default  reduce using rule 17 (code)


state 166

   19 operation_list: operation_list operation .

    $default  reduce using rule 19 (operation_list)


state 167

   20 operation: declaration ';' .

    $default  reduce using rule 20 (operation)


state 168

   21 operation: assignment ';' .

    $default  reduce using rule 21 (operation)


state 169

   22 operation: unary ';' .

    $default  reduce using rule 22 (operation)


state 170

   25 operation: control ';' .

    $default  reduce using rule 25 (operation)


state 171

   26 operation: function_call ';' .

    $default  reduce using rule 26 (operation)


state 172

    5 main: scope STATIC VOID MAIN '(' STRING '[' ']' ARGS ')' code .

    $default  reduce using rule 5 (main)


state 173

   89 condition_code: '{' '}' .

    $default  reduce using rule 89 (condition_code)


state 174

   19 operation_list: operation_list . operation
   86 condition_code: '{' operation_list . '}'

    BOOLEAN   shift, and go to state 6
    BREAK     shift, and go to state 120
    CHAR      shift, and go to state 7
    CONTINUE  shift, and go to state 121
    DO        shift, and go to state 122
    DOUBLE    shift, and go to state 8
    FOR       shift, and go to state 123
    IF        shift, and go to state 124
    INT       shift, and go to state 9
    OP_INC    shift, and go to state 125
    OP_DEC    shift, and go to state 126
    STRING    shift, and go to state 13
    SWITCH    shift, and go to state 127
    SYSTEM    shift, and go to state 128
    RETURN    shift, and go to state 129
    VOID      shift, and go to state 14
    WHILE     shift, and go to state 130
    ID        shift, and go to state 131
    '}'       shift, and go to state 186

    operation      go to state 166
    declaration    go to state 135
    assignment     go to state 136
    unary          go to state 137
    control        go to state 138
    function_call  go to state 139
    cycle          go to state 140
    if             go to state 141
    type           go to state 20


state 175

   76 cycle: DO condition_code WHILE . '(' expression ')' ';'

    '('  shift, and go to state 187


state 176

   28 assignment: ID . assign_operator expression

    ASS_MUL   shift, and go to state 155
    ASS_DIV   shift, and go to state 156
    ASS_ADD   shift, and go to state 157
    ASS_SUB   shift, and go to state 158
    ASS_AND   shift, and go to state 159
    '='       shift, and go to state 162
    ASS_PERC  shift, and go to state 163

    assign_operator  go to state 164


state 177

   72 cycle: FOR '(' ';' . expression ';' increase_list ')' condition_code
   74      | FOR '(' ';' . expression ';' ')' condition_code

    FALSE       shift, and go to state 45
    TRUE        shift, and go to state 46
    NUMBER_VAL  shift, and go to state 47
    DOUBLE_VAL  shift, and go to state 48
    STRING_VAL  shift, and go to state 49
    CHAR_VAL    shift, and go to state 50
    ID          shift, and go to state 51
    '+'         shift, and go to state 52
    '-'         shift, and go to state 53
    '('         shift, and go to state 54

    expression        go to state 188
    function_call     go to state 56
    infix_expression  go to state 57
    if_expression     go to state 58
    value             go to state 59


state 178

   81 forInit: declaration .

    $default  reduce using rule 81 (forInit)


state 179

   80 forInit: assignment .

    $default  reduce using rule 80 (forInit)


state 180

   71 cycle: FOR '(' forInit . ';' expression ';' increase_list ')' condition_code
   73      | FOR '(' forInit . ';' expression ';' ')' condition_code

    ';'  shift, and go to state 189


state 181

   46 infix_expression: expression . '+' expression
   47                 | expression . '-' expression
   48                 | expression . '*' expression
   49                 | expression . '/' expression
   50                 | expression . '%' expression
   51                 | expression . '&' expression
   52                 | expression . LS expression
   53                 | expression . RS expression
   54 if_expression: expression . '>' expression
   55              | expression . '<' expression
   56              | expression . OP_EQ expression
   57              | expression . OP_LE expression
   58              | expression . OP_GE expression
   59              | expression . OP_NE expression
   60              | expression . OP_LOR expression
   61              | expression . OP_LAND expression
   77 if: IF '(' expression . ')' condition_code
   78   | IF '(' expression . ')' condition_code ELSE condition_code

    LS       shift, and go to state 67
    OP_GE    shift, and go to state 68
    OP_LE    shift, and go to state 69
    OP_EQ    shift, and go to state 70
    OP_NE    shift, and go to state 71
    OP_LAND  shift, and go to state 72
    OP_LOR   shift, and go to state 73
    RS       shift, and go to state 74
    '+'      shift, and go to state 75
    '-'      shift, and go to state 76
    '*'      shift, and go to state 77
    '/'      shift, and go to state 78
    '%'      shift, and go to state 79
    '&'      shift, and go to state 80
    ')'      shift, and go to state 190
    '<'      shift, and go to state 81
    '>'      shift, and go to state 82


state 182

   46 infix_expression: expression . '+' expression
   47                 | expression . '-' expression
   48                 | expression . '*' expression
   49                 | expression . '/' expression
   50                 | expression . '%' expression
   51                 | expression . '&' expression
   52                 | expression . LS expression
   53                 | expression . RS expression
   54 if_expression: expression . '>' expression
   55              | expression . '<' expression
   56              | expression . OP_EQ expression
   57              | expression . OP_LE expression
   58              | expression . OP_GE expression
   59              | expression . OP_NE expression
   60              | expression . OP_LOR expression
   61              | expression . OP_LAND expression
   79 if: SWITCH '(' expression . ')' '{' switch '}'

    LS       shift, and go to state 67
    OP_GE    shift, and go to state 68
    OP_LE    shift, and go to state 69
    OP_EQ    shift, and go to state 70
    OP_NE    shift, and go to state 71
    OP_LAND  shift, and go to state 72
    OP_LOR   shift, and go to state 73
    RS       shift, and go to state 74
    '+'      shift, and go to state 75
    '-'      shift, and go to state 76
    '*'      shift, and go to state 77
    '/'      shift, and go to state 78
    '%'      shift, and go to state 79
    '&'      shift, and go to state 80
    ')'      shift, and go to state 191
    '<'      shift, and go to state 81
    '>'      shift, and go to state 82


state 183

   37 control: SYSTEM '.' OUT . '.' PRINTLN '(' expression ')'
   38        | SYSTEM '.' OUT . '.' PRINT '(' expression ')'

    '.'  shift, and go to state 192


state 184

   46 infix_expression: expression . '+' expression
   47                 | expression . '-' expression
   48                 | expression . '*' expression
   49                 | expression . '/' expression
   50                 | expression . '%' expression
   51                 | expression . '&' expression
   52                 | expression . LS expression
   53                 | expression . RS expression
   54 if_expression: expression . '>' expression
   55              | expression . '<' expression
   56              | expression . OP_EQ expression
   57              | expression . OP_LE expression
   58              | expression . OP_GE expression
   59              | expression . OP_NE expression
   60              | expression . OP_LOR expression
   61              | expression . OP_LAND expression
   75 cycle: WHILE '(' expression . ')' condition_code

    LS       shift, and go to state 67
    OP_GE    shift, and go to state 68
    OP_LE    shift, and go to state 69
    OP_EQ    shift, and go to state 70
    OP_NE    shift, and go to state 71
    OP_LAND  shift, and go to state 72
    OP_LOR   shift, and go to state 73
    RS       shift, and go to state 74
    '+'      shift, and go to state 75
    '-'      shift, and go to state 76
    '*'      shift, and go to state 77
    '/'      shift, and go to state 78
    '%'      shift, and go to state 79
    '&'      shift, and go to state 80
    ')'      shift, and go to state 193
    '<'      shift, and go to state 81
    '>'      shift, and go to state 82


state 185

   28 assignment: ID assign_operator expression .
   46 infix_expression: expression . '+' expression
   47                 | expression . '-' expression
   48                 | expression . '*' expression
   49                 | expression . '/' expression
   50                 | expression . '%' expression
   51                 | expression . '&' expression
   52                 | expression . LS expression
   53                 | expression . RS expression
   54 if_expression: expression . '>' expression
   55              | expression . '<' expression
   56              | expression . OP_EQ expression
   57              | expression . OP_LE expression
   58              | expression . OP_GE expression
   59              | expression . OP_NE expression
   60              | expression . OP_LOR expression
   61              | expression . OP_LAND expression

    LS       shift, and go to state 67
    OP_GE    shift, and go to state 68
    OP_LE    shift, and go to state 69
    OP_EQ    shift, and go to state 70
    OP_NE    shift, and go to state 71
    OP_LAND  shift, and go to state 72
    OP_LOR   shift, and go to state 73
    RS       shift, and go to state 74
    '+'      shift, and go to state 75
    '-'      shift, and go to state 76
    '*'      shift, and go to state 77
    '/'      shift, and go to state 78
    '%'      shift, and go to state 79
    '&'      shift, and go to state 80
    '<'      shift, and go to state 81
    '>'      shift, and go to state 82

    $default  reduce using rule 28 (assignment)


state 186

   86 condition_code: '{' operation_list '}' .

    $default  reduce using rule 86 (condition_code)


state 187

   76 cycle: DO condition_code WHILE '(' . expression ')' ';'

    FALSE       shift, and go to state 45
    TRUE        shift, and go to state 46
    NUMBER_VAL  shift, and go to state 47
    DOUBLE_VAL  shift, and go to state 48
    STRING_VAL  shift, and go to state 49
    CHAR_VAL    shift, and go to state 50
    ID          shift, and go to state 51
    '+'         shift, and go to state 52
    '-'         shift, and go to state 53
    '('         shift, and go to state 54

    expression        go to state 194
    function_call     go to state 56
    infix_expression  go to state 57
    if_expression     go to state 58
    value             go to state 59


state 188

   46 infix_expression: expression . '+' expression
   47                 | expression . '-' expression
   48                 | expression . '*' expression
   49                 | expression . '/' expression
   50                 | expression . '%' expression
   51                 | expression . '&' expression
   52                 | expression . LS expression
   53                 | expression . RS expression
   54 if_expression: expression . '>' expression
   55              | expression . '<' expression
   56              | expression . OP_EQ expression
   57              | expression . OP_LE expression
   58              | expression . OP_GE expression
   59              | expression . OP_NE expression
   60              | expression . OP_LOR expression
   61              | expression . OP_LAND expression
   72 cycle: FOR '(' ';' expression . ';' increase_list ')' condition_code
   74      | FOR '(' ';' expression . ';' ')' condition_code

    LS       shift, and go to state 67
    OP_GE    shift, and go to state 68
    OP_LE    shift, and go to state 69
    OP_EQ    shift, and go to state 70
    OP_NE    shift, and go to state 71
    OP_LAND  shift, and go to state 72
    OP_LOR   shift, and go to state 73
    RS       shift, and go to state 74
    '+'      shift, and go to state 75
    '-'      shift, and go to state 76
    '*'      shift, and go to state 77
    '/'      shift, and go to state 78
    '%'      shift, and go to state 79
    '&'      shift, and go to state 80
    '<'      shift, and go to state 81
    '>'      shift, and go to state 82
    ';'      shift, and go to state 195


state 189

   71 cycle: FOR '(' forInit ';' . expression ';' increase_list ')' condition_code
   73      | FOR '(' forInit ';' . expression ';' ')' condition_code

    FALSE       shift, and go to state 45
    TRUE        shift, and go to state 46
    NUMBER_VAL  shift, and go to state 47
    DOUBLE_VAL  shift, and go to state 48
    STRING_VAL  shift, and go to state 49
    CHAR_VAL    shift, and go to state 50
    ID          shift, and go to state 51
    '+'         shift, and go to state 52
    '-'         shift, and go to state 53
    '('         shift, and go to state 54

    expression        go to state 196
    function_call     go to state 56
    infix_expression  go to state 57
    if_expression     go to state 58
    value             go to state 59


state 190

   77 if: IF '(' expression ')' . condition_code
   78   | IF '(' expression ')' . condition_code ELSE condition_code

    BOOLEAN   shift, and go to state 6
    BREAK     shift, and go to state 120
    CHAR      shift, and go to state 7
    CONTINUE  shift, and go to state 121
    DO        shift, and go to state 122
    DOUBLE    shift, and go to state 8
    FOR       shift, and go to state 123
    IF        shift, and go to state 124
    INT       shift, and go to state 9
    OP_INC    shift, and go to state 125
    OP_DEC    shift, and go to state 126
    STRING    shift, and go to state 13
    SWITCH    shift, and go to state 127
    SYSTEM    shift, and go to state 128
    RETURN    shift, and go to state 129
    VOID      shift, and go to state 14
    WHILE     shift, and go to state 130
    ID        shift, and go to state 131
    '{'       shift, and go to state 143
    ';'       shift, and go to state 144

    operation       go to state 145
    declaration     go to state 135
    assignment      go to state 136
    unary           go to state 137
    control         go to state 138
    function_call   go to state 139
    cycle           go to state 140
    if              go to state 141
    condition_code  go to state 197
    type            go to state 20


state 191

   79 if: SWITCH '(' expression ')' . '{' switch '}'

    '{'  shift, and go to state 198


state 192

   37 control: SYSTEM '.' OUT '.' . PRINTLN '(' expression ')'
   38        | SYSTEM '.' OUT '.' . PRINT '(' expression ')'

    PRINT    shift, and go to state 199
    PRINTLN  shift, and go to state 200


state 193

   75 cycle: WHILE '(' expression ')' . condition_code

    BOOLEAN   shift, and go to state 6
    BREAK     shift, and go to state 120
    CHAR      shift, and go to state 7
    CONTINUE  shift, and go to state 121
    DO        shift, and go to state 122
    DOUBLE    shift, and go to state 8
    FOR       shift, and go to state 123
    IF        shift, and go to state 124
    INT       shift, and go to state 9
    OP_INC    shift, and go to state 125
    OP_DEC    shift, and go to state 126
    STRING    shift, and go to state 13
    SWITCH    shift, and go to state 127
    SYSTEM    shift, and go to state 128
    RETURN    shift, and go to state 129
    VOID      shift, and go to state 14
    WHILE     shift, and go to state 130
    ID        shift, and go to state 131
    '{'       shift, and go to state 143
    ';'       shift, and go to state 144

    operation       go to state 145
    declaration     go to state 135
    assignment      go to state 136
    unary           go to state 137
    control         go to state 138
    function_call   go to state 139
    cycle           go to state 140
    if              go to state 141
    condition_code  go to state 201
    type            go to state 20


state 194

   46 infix_expression: expression . '+' expression
   47                 | expression . '-' expression
   48                 | expression . '*' expression
   49                 | expression . '/' expression
   50                 | expression . '%' expression
   51                 | expression . '&' expression
   52                 | expression . LS expression
   53                 | expression . RS expression
   54 if_expression: expression . '>' expression
   55              | expression . '<' expression
   56              | expression . OP_EQ expression
   57              | expression . OP_LE expression
   58              | expression . OP_GE expression
   59              | expression . OP_NE expression
   60              | expression . OP_LOR expression
   61              | expression . OP_LAND expression
   76 cycle: DO condition_code WHILE '(' expression . ')' ';'

    LS       shift, and go to state 67
    OP_GE    shift, and go to state 68
    OP_LE    shift, and go to state 69
    OP_EQ    shift, and go to state 70
    OP_NE    shift, and go to state 71
    OP_LAND  shift, and go to state 72
    OP_LOR   shift, and go to state 73
    RS       shift, and go to state 74
    '+'      shift, and go to state 75
    '-'      shift, and go to state 76
    '*'      shift, and go to state 77
    '/'      shift, and go to state 78
    '%'      shift, and go to state 79
    '&'      shift, and go to state 80
    ')'      shift, and go to state 202
    '<'      shift, and go to state 81
    '>'      shift, and go to state 82


state 195

   72 cycle: FOR '(' ';' expression ';' . increase_list ')' condition_code
   74      | FOR '(' ';' expression ';' . ')' condition_code

    OP_INC  shift, and go to state 125
    OP_DEC  shift, and go to state 126
    ID      shift, and go to state 203
    ')'     shift, and go to state 204

    assignment     go to state 205
    unary          go to state 206
    increase_list  go to state 207
    increase       go to state 208


state 196

   46 infix_expression: expression . '+' expression
   47                 | expression . '-' expression
   48                 | expression . '*' expression
   49                 | expression . '/' expression
   50                 | expression . '%' expression
   51                 | expression . '&' expression
   52                 | expression . LS expression
   53                 | expression . RS expression
   54 if_expression: expression . '>' expression
   55              | expression . '<' expression
   56              | expression . OP_EQ expression
   57              | expression . OP_LE expression
   58              | expression . OP_GE expression
   59              | expression . OP_NE expression
   60              | expression . OP_LOR expression
   61              | expression . OP_LAND expression
   71 cycle: FOR '(' forInit ';' expression . ';' increase_list ')' condition_code
   73      | FOR '(' forInit ';' expression . ';' ')' condition_code

    LS       shift, and go to state 67
    OP_GE    shift, and go to state 68
    OP_LE    shift, and go to state 69
    OP_EQ    shift, and go to state 70
    OP_NE    shift, and go to state 71
    OP_LAND  shift, and go to state 72
    OP_LOR   shift, and go to state 73
    RS       shift, and go to state 74
    '+'      shift, and go to state 75
    '-'      shift, and go to state 76
    '*'      shift, and go to state 77
    '/'      shift, and go to state 78
    '%'      shift, and go to state 79
    '&'      shift, and go to state 80
    '<'      shift, and go to state 81
    '>'      shift, and go to state 82
    ';'      shift, and go to state 209


state 197

   77 if: IF '(' expression ')' condition_code .
   78   | IF '(' expression ')' condition_code . ELSE condition_code

    ELSE  shift, and go to state 210

    $default  reduce using rule 77 (if)


state 198

   79 if: SWITCH '(' expression ')' '{' . switch '}'

    CASE     shift, and go to state 211
    DEFAULT  shift, and go to state 212

    switch  go to state 213


state 199

   38 control: SYSTEM '.' OUT '.' PRINT . '(' expression ')'

    '('  shift, and go to state 214


state 200

   37 control: SYSTEM '.' OUT '.' PRINTLN . '(' expression ')'

    '('  shift, and go to state 215


state 201

   75 cycle: WHILE '(' expression ')' condition_code .

    $default  reduce using rule 75 (cycle)


state 202

   76 cycle: DO condition_code WHILE '(' expression ')' . ';'

    ';'  shift, and go to state 216


state 203

   28 assignment: ID . assign_operator expression
   29 unary: ID . OP_INC
   31      | ID . OP_DEC

    ASS_MUL   shift, and go to state 155
    ASS_DIV   shift, and go to state 156
    ASS_ADD   shift, and go to state 157
    ASS_SUB   shift, and go to state 158
    ASS_AND   shift, and go to state 159
    OP_INC    shift, and go to state 160
    OP_DEC    shift, and go to state 161
    '='       shift, and go to state 162
    ASS_PERC  shift, and go to state 163

    assign_operator  go to state 164


state 204

   74 cycle: FOR '(' ';' expression ';' ')' . condition_code

    BOOLEAN   shift, and go to state 6
    BREAK     shift, and go to state 120
    CHAR      shift, and go to state 7
    CONTINUE  shift, and go to state 121
    DO        shift, and go to state 122
    DOUBLE    shift, and go to state 8
    FOR       shift, and go to state 123
    IF        shift, and go to state 124
    INT       shift, and go to state 9
    OP_INC    shift, and go to state 125
    OP_DEC    shift, and go to state 126
    STRING    shift, and go to state 13
    SWITCH    shift, and go to state 127
    SYSTEM    shift, and go to state 128
    RETURN    shift, and go to state 129
    VOID      shift, and go to state 14
    WHILE     shift, and go to state 130
    ID        shift, and go to state 131
    '{'       shift, and go to state 143
    ';'       shift, and go to state 144

    operation       go to state 145
    declaration     go to state 135
    assignment      go to state 136
    unary           go to state 137
    control         go to state 138
    function_call   go to state 139
    cycle           go to state 140
    if              go to state 141
    condition_code  go to state 217
    type            go to state 20


state 205

   84 increase: assignment .

    $default  reduce using rule 84 (increase)


state 206

   85 increase: unary .

    $default  reduce using rule 85 (increase)


state 207

   72 cycle: FOR '(' ';' expression ';' increase_list . ')' condition_code
   83 increase_list: increase_list . ',' increase

    ')'  shift, and go to state 218
    ','  shift, and go to state 219


state 208

   82 increase_list: increase .

    $default  reduce using rule 82 (increase_list)


state 209

   71 cycle: FOR '(' forInit ';' expression ';' . increase_list ')' condition_code
   73      | FOR '(' forInit ';' expression ';' . ')' condition_code

    OP_INC  shift, and go to state 125
    OP_DEC  shift, and go to state 126
    ID      shift, and go to state 203
    ')'     shift, and go to state 220

    assignment     go to state 205
    unary          go to state 206
    increase_list  go to state 221
    increase       go to state 208


state 210

   78 if: IF '(' expression ')' condition_code ELSE . condition_code

    BOOLEAN   shift, and go to state 6
    BREAK     shift, and go to state 120
    CHAR      shift, and go to state 7
    CONTINUE  shift, and go to state 121
    DO        shift, and go to state 122
    DOUBLE    shift, and go to state 8
    FOR       shift, and go to state 123
    IF        shift, and go to state 124
    INT       shift, and go to state 9
    OP_INC    shift, and go to state 125
    OP_DEC    shift, and go to state 126
    STRING    shift, and go to state 13
    SWITCH    shift, and go to state 127
    SYSTEM    shift, and go to state 128
    RETURN    shift, and go to state 129
    VOID      shift, and go to state 14
    WHILE     shift, and go to state 130
    ID        shift, and go to state 131
    '{'       shift, and go to state 143
    ';'       shift, and go to state 144

    operation       go to state 145
    declaration     go to state 135
    assignment      go to state 136
    unary           go to state 137
    control         go to state 138
    function_call   go to state 139
    cycle           go to state 140
    if              go to state 141
    condition_code  go to state 222
    type            go to state 20


state 211

   90 switch: CASE . value ':' operation_list switch
   92       | CASE . value ':' operation_list

    FALSE       shift, and go to state 45
    TRUE        shift, and go to state 46
    NUMBER_VAL  shift, and go to state 47
    DOUBLE_VAL  shift, and go to state 48
    STRING_VAL  shift, and go to state 49
    CHAR_VAL    shift, and go to state 50
    ID          shift, and go to state 223
    '+'         shift, and go to state 52
    '-'         shift, and go to state 53

    value  go to state 224


state 212

   91 switch: DEFAULT . ':' operation_list switch
   93       | DEFAULT . ':' operation_list

    ':'  shift, and go to state 225


state 213

   79 if: SWITCH '(' expression ')' '{' switch . '}'

    '}'  shift, and go to state 226


state 214

   38 control: SYSTEM '.' OUT '.' PRINT '(' . expression ')'

    FALSE       shift, and go to state 45
    TRUE        shift, and go to state 46
    NUMBER_VAL  shift, and go to state 47
    DOUBLE_VAL  shift, and go to state 48
    STRING_VAL  shift, and go to state 49
    CHAR_VAL    shift, and go to state 50
    ID          shift, and go to state 51
    '+'         shift, and go to state 52
    '-'         shift, and go to state 53
    '('         shift, and go to state 54

    expression        go to state 227
    function_call     go to state 56
    infix_expression  go to state 57
    if_expression     go to state 58
    value             go to state 59


state 215

   37 control: SYSTEM '.' OUT '.' PRINTLN '(' . expression ')'

    FALSE       shift, and go to state 45
    TRUE        shift, and go to state 46
    NUMBER_VAL  shift, and go to state 47
    DOUBLE_VAL  shift, and go to state 48
    STRING_VAL  shift, and go to state 49
    CHAR_VAL    shift, and go to state 50
    ID          shift, and go to state 51
    '+'         shift, and go to state 52
    '-'         shift, and go to state 53
    '('         shift, and go to state 54

    expression        go to state 228
    function_call     go to state 56
    infix_expression  go to state 57
    if_expression     go to state 58
    value             go to state 59


state 216

   76 cycle: DO condition_code WHILE '(' expression ')' ';' .

    $default  reduce using rule 76 (cycle)


state 217

   74 cycle: FOR '(' ';' expression ';' ')' condition_code .

    $default  reduce using rule 74 (cycle)


state 218

   72 cycle: FOR '(' ';' expression ';' increase_list ')' . condition_code

    BOOLEAN   shift, and go to state 6
    BREAK     shift, and go to state 120
    CHAR      shift, and go to state 7
    CONTINUE  shift, and go to state 121
    DO        shift, and go to state 122
    DOUBLE    shift, and go to state 8
    FOR       shift, and go to state 123
    IF        shift, and go to state 124
    INT       shift, and go to state 9
    OP_INC    shift, and go to state 125
    OP_DEC    shift, and go to state 126
    STRING    shift, and go to state 13
    SWITCH    shift, and go to state 127
    SYSTEM    shift, and go to state 128
    RETURN    shift, and go to state 129
    VOID      shift, and go to state 14
    WHILE     shift, and go to state 130
    ID        shift, and go to state 131
    '{'       shift, and go to state 143
    ';'       shift, and go to state 144

    operation       go to state 145
    declaration     go to state 135
    assignment      go to state 136
    unary           go to state 137
    control         go to state 138
    function_call   go to state 139
    cycle           go to state 140
    if              go to state 141
    condition_code  go to state 229
    type            go to state 20


state 219

   83 increase_list: increase_list ',' . increase

    OP_INC  shift, and go to state 125
    OP_DEC  shift, and go to state 126
    ID      shift, and go to state 203

    assignment  go to state 205
    unary       go to state 206
    increase    go to state 230


state 220

   73 cycle: FOR '(' forInit ';' expression ';' ')' . condition_code

    BOOLEAN   shift, and go to state 6
    BREAK     shift, and go to state 120
    CHAR      shift, and go to state 7
    CONTINUE  shift, and go to state 121
    DO        shift, and go to state 122
    DOUBLE    shift, and go to state 8
    FOR       shift, and go to state 123
    IF        shift, and go to state 124
    INT       shift, and go to state 9
    OP_INC    shift, and go to state 125
    OP_DEC    shift, and go to state 126
    STRING    shift, and go to state 13
    SWITCH    shift, and go to state 127
    SYSTEM    shift, and go to state 128
    RETURN    shift, and go to state 129
    VOID      shift, and go to state 14
    WHILE     shift, and go to state 130
    ID        shift, and go to state 131
    '{'       shift, and go to state 143
    ';'       shift, and go to state 144

    operation       go to state 145
    declaration     go to state 135
    assignment      go to state 136
    unary           go to state 137
    control         go to state 138
    function_call   go to state 139
    cycle           go to state 140
    if              go to state 141
    condition_code  go to state 231
    type            go to state 20


state 221

   71 cycle: FOR '(' forInit ';' expression ';' increase_list . ')' condition_code
   83 increase_list: increase_list . ',' increase

    ')'  shift, and go to state 232
    ','  shift, and go to state 219


state 222

   78 if: IF '(' expression ')' condition_code ELSE condition_code .

    $default  reduce using rule 78 (if)


state 223

  101 value: ID .

    $default  reduce using rule 101 (value)


state 224

   90 switch: CASE value . ':' operation_list switch
   92       | CASE value . ':' operation_list

    ':'  shift, and go to state 233


state 225

   91 switch: DEFAULT ':' . operation_list switch
   93       | DEFAULT ':' . operation_list

    BOOLEAN   shift, and go to state 6
    BREAK     shift, and go to state 120
    CHAR      shift, and go to state 7
    CONTINUE  shift, and go to state 121
    DO        shift, and go to state 122
    DOUBLE    shift, and go to state 8
    FOR       shift, and go to state 123
    IF        shift, and go to state 124
    INT       shift, and go to state 9
    OP_INC    shift, and go to state 125
    OP_DEC    shift, and go to state 126
    STRING    shift, and go to state 13
    SWITCH    shift, and go to state 127
    SYSTEM    shift, and go to state 128
    RETURN    shift, and go to state 129
    VOID      shift, and go to state 14
    WHILE     shift, and go to state 130
    ID        shift, and go to state 131

    operation_list  go to state 234
    operation       go to state 134
    declaration     go to state 135
    assignment      go to state 136
    unary           go to state 137
    control         go to state 138
    function_call   go to state 139
    cycle           go to state 140
    if              go to state 141
    type            go to state 20


state 226

   79 if: SWITCH '(' expression ')' '{' switch '}' .

    $default  reduce using rule 79 (if)


state 227

   38 control: SYSTEM '.' OUT '.' PRINT '(' expression . ')'
   46 infix_expression: expression . '+' expression
   47                 | expression . '-' expression
   48                 | expression . '*' expression
   49                 | expression . '/' expression
   50                 | expression . '%' expression
   51                 | expression . '&' expression
   52                 | expression . LS expression
   53                 | expression . RS expression
   54 if_expression: expression . '>' expression
   55              | expression . '<' expression
   56              | expression . OP_EQ expression
   57              | expression . OP_LE expression
   58              | expression . OP_GE expression
   59              | expression . OP_NE expression
   60              | expression . OP_LOR expression
   61              | expression . OP_LAND expression

    LS       shift, and go to state 67
    OP_GE    shift, and go to state 68
    OP_LE    shift, and go to state 69
    OP_EQ    shift, and go to state 70
    OP_NE    shift, and go to state 71
    OP_LAND  shift, and go to state 72
    OP_LOR   shift, and go to state 73
    RS       shift, and go to state 74
    '+'      shift, and go to state 75
    '-'      shift, and go to state 76
    '*'      shift, and go to state 77
    '/'      shift, and go to state 78
    '%'      shift, and go to state 79
    '&'      shift, and go to state 80
    ')'      shift, and go to state 235
    '<'      shift, and go to state 81
    '>'      shift, and go to state 82


state 228

   37 control: SYSTEM '.' OUT '.' PRINTLN '(' expression . ')'
   46 infix_expression: expression . '+' expression
   47                 | expression . '-' expression
   48                 | expression . '*' expression
   49                 | expression . '/' expression
   50                 | expression . '%' expression
   51                 | expression . '&' expression
   52                 | expression . LS expression
   53                 | expression . RS expression
   54 if_expression: expression . '>' expression
   55              | expression . '<' expression
   56              | expression . OP_EQ expression
   57              | expression . OP_LE expression
   58              | expression . OP_GE expression
   59              | expression . OP_NE expression
   60              | expression . OP_LOR expression
   61              | expression . OP_LAND expression

    LS       shift, and go to state 67
    OP_GE    shift, and go to state 68
    OP_LE    shift, and go to state 69
    OP_EQ    shift, and go to state 70
    OP_NE    shift, and go to state 71
    OP_LAND  shift, and go to state 72
    OP_LOR   shift, and go to state 73
    RS       shift, and go to state 74
    '+'      shift, and go to state 75
    '-'      shift, and go to state 76
    '*'      shift, and go to state 77
    '/'      shift, and go to state 78
    '%'      shift, and go to state 79
    '&'      shift, and go to state 80
    ')'      shift, and go to state 236
    '<'      shift, and go to state 81
    '>'      shift, and go to state 82


state 229

   72 cycle: FOR '(' ';' expression ';' increase_list ')' condition_code .

    $default  reduce using rule 72 (cycle)


state 230

   83 increase_list: increase_list ',' increase .

    $default  reduce using rule 83 (increase_list)


state 231

   73 cycle: FOR '(' forInit ';' expression ';' ')' condition_code .

    $default  reduce using rule 73 (cycle)


state 232

   71 cycle: FOR '(' forInit ';' expression ';' increase_list ')' . condition_code

    BOOLEAN   shift, and go to state 6
    BREAK     shift, and go to state 120
    CHAR      shift, and go to state 7
    CONTINUE  shift, and go to state 121
    DO        shift, and go to state 122
    DOUBLE    shift, and go to state 8
    FOR       shift, and go to state 123
    IF        shift, and go to state 124
    INT       shift, and go to state 9
    OP_INC    shift, and go to state 125
    OP_DEC    shift, and go to state 126
    STRING    shift, and go to state 13
    SWITCH    shift, and go to state 127
    SYSTEM    shift, and go to state 128
    RETURN    shift, and go to state 129
    VOID      shift, and go to state 14
    WHILE     shift, and go to state 130
    ID        shift, and go to state 131
    '{'       shift, and go to state 143
    ';'       shift, and go to state 144

    operation       go to state 145
    declaration     go to state 135
    assignment      go to state 136
    unary           go to state 137
    control         go to state 138
    function_call   go to state 139
    cycle           go to state 140
    if              go to state 141
    condition_code  go to state 237
    type            go to state 20


state 233

   90 switch: CASE value ':' . operation_list switch
   92       | CASE value ':' . operation_list

    BOOLEAN   shift, and go to state 6
    BREAK     shift, and go to state 120
    CHAR      shift, and go to state 7
    CONTINUE  shift, and go to state 121
    DO        shift, and go to state 122
    DOUBLE    shift, and go to state 8
    FOR       shift, and go to state 123
    IF        shift, and go to state 124
    INT       shift, and go to state 9
    OP_INC    shift, and go to state 125
    OP_DEC    shift, and go to state 126
    STRING    shift, and go to state 13
    SWITCH    shift, and go to state 127
    SYSTEM    shift, and go to state 128
    RETURN    shift, and go to state 129
    VOID      shift, and go to state 14
    WHILE     shift, and go to state 130
    ID        shift, and go to state 131

    operation_list  go to state 238
    operation       go to state 134
    declaration     go to state 135
    assignment      go to state 136
    unary           go to state 137
    control         go to state 138
    function_call   go to state 139
    cycle           go to state 140
    if              go to state 141
    type            go to state 20


state 234

   19 operation_list: operation_list . operation
   91 switch: DEFAULT ':' operation_list . switch
   93       | DEFAULT ':' operation_list .

    BOOLEAN   shift, and go to state 6
    BREAK     shift, and go to state 120
    CASE      shift, and go to state 211
    CHAR      shift, and go to state 7
    CONTINUE  shift, and go to state 121
    DEFAULT   shift, and go to state 212
    DO        shift, and go to state 122
    DOUBLE    shift, and go to state 8
    FOR       shift, and go to state 123
    IF        shift, and go to state 124
    INT       shift, and go to state 9
    OP_INC    shift, and go to state 125
    OP_DEC    shift, and go to state 126
    STRING    shift, and go to state 13
    SWITCH    shift, and go to state 127
    SYSTEM    shift, and go to state 128
    RETURN    shift, and go to state 129
    VOID      shift, and go to state 14
    WHILE     shift, and go to state 130
    ID        shift, and go to state 131

    $default  reduce using rule 93 (switch)

    operation      go to state 166
    declaration    go to state 135
    assignment     go to state 136
    unary          go to state 137
    control        go to state 138
    function_call  go to state 139
    cycle          go to state 140
    if             go to state 141
    switch         go to state 239
    type           go to state 20


state 235

   38 control: SYSTEM '.' OUT '.' PRINT '(' expression ')' .

    $default  reduce using rule 38 (control)


state 236

   37 control: SYSTEM '.' OUT '.' PRINTLN '(' expression ')' .

    $default  reduce using rule 37 (control)


state 237

   71 cycle: FOR '(' forInit ';' expression ';' increase_list ')' condition_code .

    $default  reduce using rule 71 (cycle)


state 238

   19 operation_list: operation_list . operation
   90 switch: CASE value ':' operation_list . switch
   92       | CASE value ':' operation_list .

    BOOLEAN   shift, and go to state 6
    BREAK     shift, and go to state 120
    CASE      shift, and go to state 211
    CHAR      shift, and go to state 7
    CONTINUE  shift, and go to state 121
    DEFAULT   shift, and go to state 212
    DO        shift, and go to state 122
    DOUBLE    shift, and go to state 8
    FOR       shift, and go to state 123
    IF        shift, and go to state 124
    INT       shift, and go to state 9
    OP_INC    shift, and go to state 125
    OP_DEC    shift, and go to state 126
    STRING    shift, and go to state 13
    SWITCH    shift, and go to state 127
    SYSTEM    shift, and go to state 128
    RETURN    shift, and go to state 129
    VOID      shift, and go to state 14
    WHILE     shift, and go to state 130
    ID        shift, and go to state 131

    $default  reduce using rule 92 (switch)

    operation      go to state 166
    declaration    go to state 135
    assignment     go to state 136
    unary          go to state 137
    control        go to state 138
    function_call  go to state 139
    cycle          go to state 140
    if             go to state 141
    switch         go to state 240
    type           go to state 20


state 239

   91 switch: DEFAULT ':' operation_list switch .

    $default  reduce using rule 91 (switch)


state 240

   90 switch: CASE value ':' operation_list switch .

    $default  reduce using rule 90 (switch)
