Terminals unused in grammar

   ASS_EQ
   ASS_LS
   ASS_RS
   BYTE
   DOUBLE
   IFELSE
   LONG
   NEW
   JNULL
   OP_SHL
   OP_SHR
   OP_SHRR
   OP_DIM
   SHORT
   THIS
   ASS_SUM


Grammar

    0 $accept: init $end

    1 init: CLASS ID '{' main function_list '}'
    2     | CLASS ID '{' main '}'
    3     | CLASS ID '{' global_list main '}'
    4     | CLASS ID '{' global_list main function_list '}'

    5 main: scope STATIC VOID MAIN '(' STRING '[' ']' ARGS ')' code

    6 global_list: global_variable
    7            | global_list global_variable

    8 global_variable: scope STATIC declaration ';'
    9                | declaration ';'

   10 function_list: function
   11              | function_list function

   12 function: scope STATIC type ID '(' argument_list ')' code

   13 scope: PRIVATE
   14      | PROTECTED
   15      | PUBLIC

   16 code: '{' '}'
   17     | '{' operation_list '}'

   18 operation_list: operation
   19               | operation_list operation

   20 operation: declaration ';'
   21          | assignment ';'
   22          | unary ';'
   23          | if
   24          | cycle
   25          | control ';'
   26          | function_call ';'

   27 declaration: type var_list

   28 assignment: ID assign_operator expression

   29 unary: ID OP_INC
   30      | OP_INC ID
   31      | ID OP_DEC
   32      | OP_DEC ID

   33 control: BREAK
   34        | CONTINUE
   35        | RETURN
   36        | RETURN expression

   37 expression: '(' expression ')'
   38           | value
   39           | function_call
   40           | infix_expression
   41           | if_expression

   42 function_call: ID '(' ')'
   43              | ID '(' parameter_list ')'

   44 infix_expression: expression '+' expression
   45                 | expression '-' expression
   46                 | expression '*' expression
   47                 | expression '/' expression
   48                 | expression '%' expression
   49                 | expression '&' expression
   50                 | expression LS expression
   51                 | expression RS expression

   52 if_expression: expression '>' expression
   53              | expression '<' expression
   54              | expression OP_EQ expression
   55              | expression OP_LE expression
   56              | expression OP_GE expression
   57              | expression OP_NE expression
   58              | expression OP_LOR expression
   59              | expression OP_LAND expression

   60 parameter_list: expression
   61               | parameter_list ',' expression

   62 var_list: var
   63         | var_list ',' var

   64 var: ID
   65    | ID '=' expression

   66 argument_list: argument
   67              | argument_list ',' argument

   68 argument: type ID

   69 cycle: FOR '(' assignment ';' if_expression ';' increase_list ')' condition_code
   70      | WHILE '(' if_expression ')' condition_code
   71      | DO condition_code WHILE '(' if_expression ')' ';'

   72 if: IF '(' expression ')' condition_code
   73   | IF '(' expression ')' condition_code ELSE condition_code
   74   | SWITCH '(' expression ')' '{' switch '}'

   75 increase_list: increase
   76              | increase_list ',' increase

   77 increase: assignment
   78         | unary

   79 condition_code: '{' operation_list '}'
   80               | operation
   81               | ';'
   82               | '{' '}'

   83 switch: CASE value ':' operation_list switch
   84       | DEFAULT ':' operation_list switch
   85       | CASE value ':' operation_list
   86       | DEFAULT ':' operation_list

   87 assign_operator: '='
   88                | ASS_ADD
   89                | ASS_SUB
   90                | ASS_MUL
   91                | ASS_DIV
   92                | ASS_PERC
   93                | ASS_AND

   94 value: ID
   95      | STRING_VAL
   96      | NUMBER_VAL
   97      | '+' NUMBER_VAL
   98      | '-' NUMBER_VAL
   99      | DOUBLE_VAL
  100      | CHAR_VAL
  101      | TRUE
  102      | FALSE

  103 type: CHAR
  104     | INT
  105     | STRING
  106     | BOOLEAN
  107     | FLOAT
  108     | VOID


Terminals, with rules where they appear

$end (0) 0
'%' (37) 48
'&' (38) 49
'(' (40) 5 12 37 42 43 69 70 71 72 73 74
')' (41) 5 12 37 42 43 69 70 71 72 73 74
'*' (42) 46
'+' (43) 44 97
',' (44) 61 63 67 76
'-' (45) 45 98
'/' (47) 47
':' (58) 83 84 85 86
';' (59) 8 9 20 21 22 25 26 69 71 81
'<' (60) 53
'=' (61) 65 87
'>' (62) 52
'[' (91) 5
']' (93) 5
'{' (123) 1 2 3 4 16 17 74 79 82
'}' (125) 1 2 3 4 16 17 74 79 82
error (256)
ARGS (258) 5
ASS_MUL (259) 90
ASS_DIV (260) 91
ASS_ADD (261) 88
ASS_SUB (262) 89
ASS_EQ (263)
ASS_AND (264) 93
ASS_LS (265)
ASS_RS (266)
BOOLEAN (267) 106
BREAK (268) 33
BYTE (269)
CASE (270) 83 85
CHAR (271) 103
CLASS (272) 1 2 3 4
CONTINUE (273) 34
DEFAULT (274) 84 86
DO (275) 71
DOUBLE (276)
ELSE (277) 73
FALSE (278) 102
FLOAT (279) 107
FOR (280) 69
IF (281) 72 73
IFELSE (282)
INT (283) 104
LONG (284)
LS (285) 50
MAIN (286) 5
NEW (287)
JNULL (288)
OP_INC (289) 29 30
OP_DEC (290) 31 32
OP_SHL (291)
OP_SHR (292)
OP_SHRR (293)
OP_GE (294) 56
OP_LE (295) 55
OP_EQ (296) 54
OP_NE (297) 57
OP_LAND (298) 59
OP_LOR (299) 58
OP_DIM (300)
PRIVATE (301) 13
PROTECTED (302) 14
PUBLIC (303) 15
SHORT (304)
STATIC (305) 5 8 12
STRING (306) 5 105
SWITCH (307) 74
RETURN (308) 35 36
RS (309) 51
TRUE (310) 101
THIS (311)
VOID (312) 5 108
WHILE (313) 70 71
NUMBER_VAL (314) 96 97 98
DOUBLE_VAL (315) 99
STRING_VAL (316) 95
CHAR_VAL (317) 100
ID (318) 1 2 3 4 12 28 29 30 31 32 42 43 64 65 68 94
IFPREC (319)
ASS_PERC (320) 92
ASS_SUM (321)


Nonterminals, with rules where they appear

$accept (85)
    on left: 0
init (86)
    on left: 1 2 3 4, on right: 0
main (87)
    on left: 5, on right: 1 2 3 4
global_list (88)
    on left: 6 7, on right: 3 4 7
global_variable (89)
    on left: 8 9, on right: 6 7
function_list (90)
    on left: 10 11, on right: 1 4 11
function (91)
    on left: 12, on right: 10 11
scope (92)
    on left: 13 14 15, on right: 5 8 12
code (93)
    on left: 16 17, on right: 5 12
operation_list (94)
    on left: 18 19, on right: 17 19 79 83 84 85 86
operation (95)
    on left: 20 21 22 23 24 25 26, on right: 18 19 80
declaration (96)
    on left: 27, on right: 8 9 20
assignment (97)
    on left: 28, on right: 21 69 77
unary (98)
    on left: 29 30 31 32, on right: 22 78
control (99)
    on left: 33 34 35 36, on right: 25
expression (100)
    on left: 37 38 39 40 41, on right: 28 36 37 44 45 46 47 48 49 50
    51 52 53 54 55 56 57 58 59 60 61 65 72 73 74
function_call (101)
    on left: 42 43, on right: 26 39
infix_expression (102)
    on left: 44 45 46 47 48 49 50 51, on right: 40
if_expression (103)
    on left: 52 53 54 55 56 57 58 59, on right: 41 69 70 71
parameter_list (104)
    on left: 60 61, on right: 43 61
var_list (105)
    on left: 62 63, on right: 27 63
var (106)
    on left: 64 65, on right: 62 63
argument_list (107)
    on left: 66 67, on right: 12 67
argument (108)
    on left: 68, on right: 66 67
cycle (109)
    on left: 69 70 71, on right: 24
if (110)
    on left: 72 73 74, on right: 23
increase_list (111)
    on left: 75 76, on right: 69 76
increase (112)
    on left: 77 78, on right: 75 76
condition_code (113)
    on left: 79 80 81 82, on right: 69 70 71 72 73
switch (114)
    on left: 83 84 85 86, on right: 74 83 84
assign_operator (115)
    on left: 87 88 89 90 91 92 93, on right: 28
value (116)
    on left: 94 95 96 97 98 99 100 101 102, on right: 38 83 85
type (117)
    on left: 103 104 105 106 107 108, on right: 12 27 68


state 0

    0 $accept: . init $end
    1 init: . CLASS ID '{' main function_list '}'
    2     | . CLASS ID '{' main '}'
    3     | . CLASS ID '{' global_list main '}'
    4     | . CLASS ID '{' global_list main function_list '}'

    CLASS  shift, and go to state 1

    init  go to state 2


state 1

    1 init: CLASS . ID '{' main function_list '}'
    2     | CLASS . ID '{' main '}'
    3     | CLASS . ID '{' global_list main '}'
    4     | CLASS . ID '{' global_list main function_list '}'

    ID  shift, and go to state 3


state 2

    0 $accept: init . $end

    $end  shift, and go to state 4


state 3

    1 init: CLASS ID . '{' main function_list '}'
    2     | CLASS ID . '{' main '}'
    3     | CLASS ID . '{' global_list main '}'
    4     | CLASS ID . '{' global_list main function_list '}'

    '{'  shift, and go to state 5


state 4

    0 $accept: init $end .

    $default  accept


state 5

    1 init: CLASS ID '{' . main function_list '}'
    2     | CLASS ID '{' . main '}'
    3     | CLASS ID '{' . global_list main '}'
    4     | CLASS ID '{' . global_list main function_list '}'
    5 main: . scope STATIC VOID MAIN '(' STRING '[' ']' ARGS ')' code
    6 global_list: . global_variable
    7            | . global_list global_variable
    8 global_variable: . scope STATIC declaration ';'
    9                | . declaration ';'
   13 scope: . PRIVATE
   14      | . PROTECTED
   15      | . PUBLIC
   27 declaration: . type var_list
  103 type: . CHAR
  104     | . INT
  105     | . STRING
  106     | . BOOLEAN
  107     | . FLOAT
  108     | . VOID

    BOOLEAN    shift, and go to state 6
    CHAR       shift, and go to state 7
    FLOAT      shift, and go to state 8
    INT        shift, and go to state 9
    PRIVATE    shift, and go to state 10
    PROTECTED  shift, and go to state 11
    PUBLIC     shift, and go to state 12
    STRING     shift, and go to state 13
    VOID       shift, and go to state 14

    main             go to state 15
    global_list      go to state 16
    global_variable  go to state 17
    scope            go to state 18
    declaration      go to state 19
    type             go to state 20


state 6

  106 type: BOOLEAN .

    $default  reduce using rule 106 (type)


state 7

  103 type: CHAR .

    $default  reduce using rule 103 (type)


state 8

  107 type: FLOAT .

    $default  reduce using rule 107 (type)


state 9

  104 type: INT .

    $default  reduce using rule 104 (type)


state 10

   13 scope: PRIVATE .

    $default  reduce using rule 13 (scope)


state 11

   14 scope: PROTECTED .

    $default  reduce using rule 14 (scope)


state 12

   15 scope: PUBLIC .

    $default  reduce using rule 15 (scope)


state 13

  105 type: STRING .

    $default  reduce using rule 105 (type)


state 14

  108 type: VOID .

    $default  reduce using rule 108 (type)


state 15

    1 init: CLASS ID '{' main . function_list '}'
    2     | CLASS ID '{' main . '}'
   10 function_list: . function
   11              | . function_list function
   12 function: . scope STATIC type ID '(' argument_list ')' code
   13 scope: . PRIVATE
   14      | . PROTECTED
   15      | . PUBLIC

    PRIVATE    shift, and go to state 10
    PROTECTED  shift, and go to state 11
    PUBLIC     shift, and go to state 12
    '}'        shift, and go to state 21

    function_list  go to state 22
    function       go to state 23
    scope          go to state 24


state 16

    3 init: CLASS ID '{' global_list . main '}'
    4     | CLASS ID '{' global_list . main function_list '}'
    5 main: . scope STATIC VOID MAIN '(' STRING '[' ']' ARGS ')' code
    7 global_list: global_list . global_variable
    8 global_variable: . scope STATIC declaration ';'
    9                | . declaration ';'
   13 scope: . PRIVATE
   14      | . PROTECTED
   15      | . PUBLIC
   27 declaration: . type var_list
  103 type: . CHAR
  104     | . INT
  105     | . STRING
  106     | . BOOLEAN
  107     | . FLOAT
  108     | . VOID

    BOOLEAN    shift, and go to state 6
    CHAR       shift, and go to state 7
    FLOAT      shift, and go to state 8
    INT        shift, and go to state 9
    PRIVATE    shift, and go to state 10
    PROTECTED  shift, and go to state 11
    PUBLIC     shift, and go to state 12
    STRING     shift, and go to state 13
    VOID       shift, and go to state 14

    main             go to state 25
    global_variable  go to state 26
    scope            go to state 18
    declaration      go to state 19
    type             go to state 20


state 17

    6 global_list: global_variable .

    $default  reduce using rule 6 (global_list)


state 18

    5 main: scope . STATIC VOID MAIN '(' STRING '[' ']' ARGS ')' code
    8 global_variable: scope . STATIC declaration ';'

    STATIC  shift, and go to state 27


state 19

    9 global_variable: declaration . ';'

    ';'  shift, and go to state 28


state 20

   27 declaration: type . var_list
   62 var_list: . var
   63         | . var_list ',' var
   64 var: . ID
   65    | . ID '=' expression

    ID  shift, and go to state 29

    var_list  go to state 30
    var       go to state 31


state 21

    2 init: CLASS ID '{' main '}' .

    $default  reduce using rule 2 (init)


state 22

    1 init: CLASS ID '{' main function_list . '}'
   11 function_list: function_list . function
   12 function: . scope STATIC type ID '(' argument_list ')' code
   13 scope: . PRIVATE
   14      | . PROTECTED
   15      | . PUBLIC

    PRIVATE    shift, and go to state 10
    PROTECTED  shift, and go to state 11
    PUBLIC     shift, and go to state 12
    '}'        shift, and go to state 32

    function  go to state 33
    scope     go to state 24


state 23

   10 function_list: function .

    $default  reduce using rule 10 (function_list)


state 24

   12 function: scope . STATIC type ID '(' argument_list ')' code

    STATIC  shift, and go to state 34


state 25

    3 init: CLASS ID '{' global_list main . '}'
    4     | CLASS ID '{' global_list main . function_list '}'
   10 function_list: . function
   11              | . function_list function
   12 function: . scope STATIC type ID '(' argument_list ')' code
   13 scope: . PRIVATE
   14      | . PROTECTED
   15      | . PUBLIC

    PRIVATE    shift, and go to state 10
    PROTECTED  shift, and go to state 11
    PUBLIC     shift, and go to state 12
    '}'        shift, and go to state 35

    function_list  go to state 36
    function       go to state 23
    scope          go to state 24


state 26

    7 global_list: global_list global_variable .

    $default  reduce using rule 7 (global_list)


state 27

    5 main: scope STATIC . VOID MAIN '(' STRING '[' ']' ARGS ')' code
    8 global_variable: scope STATIC . declaration ';'
   27 declaration: . type var_list
  103 type: . CHAR
  104     | . INT
  105     | . STRING
  106     | . BOOLEAN
  107     | . FLOAT
  108     | . VOID

    BOOLEAN  shift, and go to state 6
    CHAR     shift, and go to state 7
    FLOAT    shift, and go to state 8
    INT      shift, and go to state 9
    STRING   shift, and go to state 13
    VOID     shift, and go to state 37

    declaration  go to state 38
    type         go to state 20


state 28

    9 global_variable: declaration ';' .

    $default  reduce using rule 9 (global_variable)


state 29

   64 var: ID .  [';', ',']
   65    | ID . '=' expression

    '='  shift, and go to state 39

    $default  reduce using rule 64 (var)


state 30

   27 declaration: type var_list .  [';']
   63 var_list: var_list . ',' var

    ','  shift, and go to state 40

    $default  reduce using rule 27 (declaration)


state 31

   62 var_list: var .

    $default  reduce using rule 62 (var_list)


state 32

    1 init: CLASS ID '{' main function_list '}' .

    $default  reduce using rule 1 (init)


state 33

   11 function_list: function_list function .

    $default  reduce using rule 11 (function_list)


state 34

   12 function: scope STATIC . type ID '(' argument_list ')' code
  103 type: . CHAR
  104     | . INT
  105     | . STRING
  106     | . BOOLEAN
  107     | . FLOAT
  108     | . VOID

    BOOLEAN  shift, and go to state 6
    CHAR     shift, and go to state 7
    FLOAT    shift, and go to state 8
    INT      shift, and go to state 9
    STRING   shift, and go to state 13
    VOID     shift, and go to state 14

    type  go to state 41


state 35

    3 init: CLASS ID '{' global_list main '}' .

    $default  reduce using rule 3 (init)


state 36

    4 init: CLASS ID '{' global_list main function_list . '}'
   11 function_list: function_list . function
   12 function: . scope STATIC type ID '(' argument_list ')' code
   13 scope: . PRIVATE
   14      | . PROTECTED
   15      | . PUBLIC

    PRIVATE    shift, and go to state 10
    PROTECTED  shift, and go to state 11
    PUBLIC     shift, and go to state 12
    '}'        shift, and go to state 42

    function  go to state 33
    scope     go to state 24


state 37

    5 main: scope STATIC VOID . MAIN '(' STRING '[' ']' ARGS ')' code
  108 type: VOID .  [ID]

    MAIN  shift, and go to state 43

    $default  reduce using rule 108 (type)


state 38

    8 global_variable: scope STATIC declaration . ';'

    ';'  shift, and go to state 44


state 39

   37 expression: . '(' expression ')'
   38           | . value
   39           | . function_call
   40           | . infix_expression
   41           | . if_expression
   42 function_call: . ID '(' ')'
   43              | . ID '(' parameter_list ')'
   44 infix_expression: . expression '+' expression
   45                 | . expression '-' expression
   46                 | . expression '*' expression
   47                 | . expression '/' expression
   48                 | . expression '%' expression
   49                 | . expression '&' expression
   50                 | . expression LS expression
   51                 | . expression RS expression
   52 if_expression: . expression '>' expression
   53              | . expression '<' expression
   54              | . expression OP_EQ expression
   55              | . expression OP_LE expression
   56              | . expression OP_GE expression
   57              | . expression OP_NE expression
   58              | . expression OP_LOR expression
   59              | . expression OP_LAND expression
   65 var: ID '=' . expression
   94 value: . ID
   95      | . STRING_VAL
   96      | . NUMBER_VAL
   97      | . '+' NUMBER_VAL
   98      | . '-' NUMBER_VAL
   99      | . DOUBLE_VAL
  100      | . CHAR_VAL
  101      | . TRUE
  102      | . FALSE

    FALSE       shift, and go to state 45
    TRUE        shift, and go to state 46
    NUMBER_VAL  shift, and go to state 47
    DOUBLE_VAL  shift, and go to state 48
    STRING_VAL  shift, and go to state 49
    CHAR_VAL    shift, and go to state 50
    ID          shift, and go to state 51
    '+'         shift, and go to state 52
    '-'         shift, and go to state 53
    '('         shift, and go to state 54

    expression        go to state 55
    function_call     go to state 56
    infix_expression  go to state 57
    if_expression     go to state 58
    value             go to state 59


state 40

   63 var_list: var_list ',' . var
   64 var: . ID
   65    | . ID '=' expression

    ID  shift, and go to state 29

    var  go to state 60


state 41

   12 function: scope STATIC type . ID '(' argument_list ')' code

    ID  shift, and go to state 61


state 42

    4 init: CLASS ID '{' global_list main function_list '}' .

    $default  reduce using rule 4 (init)


state 43

    5 main: scope STATIC VOID MAIN . '(' STRING '[' ']' ARGS ')' code

    '('  shift, and go to state 62


state 44

    8 global_variable: scope STATIC declaration ';' .

    $default  reduce using rule 8 (global_variable)


state 45

  102 value: FALSE .

    $default  reduce using rule 102 (value)


state 46

  101 value: TRUE .

    $default  reduce using rule 101 (value)


state 47

   96 value: NUMBER_VAL .

    $default  reduce using rule 96 (value)


state 48

   99 value: DOUBLE_VAL .

    $default  reduce using rule 99 (value)


state 49

   95 value: STRING_VAL .

    $default  reduce using rule 95 (value)


state 50

  100 value: CHAR_VAL .

    $default  reduce using rule 100 (value)


state 51

   42 function_call: ID . '(' ')'
   43              | ID . '(' parameter_list ')'
   94 value: ID .  [LS, OP_GE, OP_LE, OP_EQ, OP_NE, OP_LAND, OP_LOR, RS, '+', '-', '*', '/', '%', '&', ')', '<', '>', ';', ',']

    '('  shift, and go to state 63

    $default  reduce using rule 94 (value)


state 52

   97 value: '+' . NUMBER_VAL

    NUMBER_VAL  shift, and go to state 64


state 53

   98 value: '-' . NUMBER_VAL

    NUMBER_VAL  shift, and go to state 65


state 54

   37 expression: . '(' expression ')'
   37           | '(' . expression ')'
   38           | . value
   39           | . function_call
   40           | . infix_expression
   41           | . if_expression
   42 function_call: . ID '(' ')'
   43              | . ID '(' parameter_list ')'
   44 infix_expression: . expression '+' expression
   45                 | . expression '-' expression
   46                 | . expression '*' expression
   47                 | . expression '/' expression
   48                 | . expression '%' expression
   49                 | . expression '&' expression
   50                 | . expression LS expression
   51                 | . expression RS expression
   52 if_expression: . expression '>' expression
   53              | . expression '<' expression
   54              | . expression OP_EQ expression
   55              | . expression OP_LE expression
   56              | . expression OP_GE expression
   57              | . expression OP_NE expression
   58              | . expression OP_LOR expression
   59              | . expression OP_LAND expression
   94 value: . ID
   95      | . STRING_VAL
   96      | . NUMBER_VAL
   97      | . '+' NUMBER_VAL
   98      | . '-' NUMBER_VAL
   99      | . DOUBLE_VAL
  100      | . CHAR_VAL
  101      | . TRUE
  102      | . FALSE

    FALSE       shift, and go to state 45
    TRUE        shift, and go to state 46
    NUMBER_VAL  shift, and go to state 47
    DOUBLE_VAL  shift, and go to state 48
    STRING_VAL  shift, and go to state 49
    CHAR_VAL    shift, and go to state 50
    ID          shift, and go to state 51
    '+'         shift, and go to state 52
    '-'         shift, and go to state 53
    '('         shift, and go to state 54

    expression        go to state 66
    function_call     go to state 56
    infix_expression  go to state 57
    if_expression     go to state 58
    value             go to state 59


state 55

   44 infix_expression: expression . '+' expression
   45                 | expression . '-' expression
   46                 | expression . '*' expression
   47                 | expression . '/' expression
   48                 | expression . '%' expression
   49                 | expression . '&' expression
   50                 | expression . LS expression
   51                 | expression . RS expression
   52 if_expression: expression . '>' expression
   53              | expression . '<' expression
   54              | expression . OP_EQ expression
   55              | expression . OP_LE expression
   56              | expression . OP_GE expression
   57              | expression . OP_NE expression
   58              | expression . OP_LOR expression
   59              | expression . OP_LAND expression
   65 var: ID '=' expression .  [';', ',']

    LS       shift, and go to state 67
    OP_GE    shift, and go to state 68
    OP_LE    shift, and go to state 69
    OP_EQ    shift, and go to state 70
    OP_NE    shift, and go to state 71
    OP_LAND  shift, and go to state 72
    OP_LOR   shift, and go to state 73
    RS       shift, and go to state 74
    '+'      shift, and go to state 75
    '-'      shift, and go to state 76
    '*'      shift, and go to state 77
    '/'      shift, and go to state 78
    '%'      shift, and go to state 79
    '&'      shift, and go to state 80
    '<'      shift, and go to state 81
    '>'      shift, and go to state 82

    $default  reduce using rule 65 (var)


state 56

   39 expression: function_call .

    $default  reduce using rule 39 (expression)


state 57

   40 expression: infix_expression .

    $default  reduce using rule 40 (expression)


state 58

   41 expression: if_expression .

    $default  reduce using rule 41 (expression)


state 59

   38 expression: value .

    $default  reduce using rule 38 (expression)


state 60

   63 var_list: var_list ',' var .

    $default  reduce using rule 63 (var_list)


state 61

   12 function: scope STATIC type ID . '(' argument_list ')' code

    '('  shift, and go to state 83


state 62

    5 main: scope STATIC VOID MAIN '(' . STRING '[' ']' ARGS ')' code

    STRING  shift, and go to state 84


state 63

   37 expression: . '(' expression ')'
   38           | . value
   39           | . function_call
   40           | . infix_expression
   41           | . if_expression
   42 function_call: . ID '(' ')'
   42              | ID '(' . ')'
   43              | . ID '(' parameter_list ')'
   43              | ID '(' . parameter_list ')'
   44 infix_expression: . expression '+' expression
   45                 | . expression '-' expression
   46                 | . expression '*' expression
   47                 | . expression '/' expression
   48                 | . expression '%' expression
   49                 | . expression '&' expression
   50                 | . expression LS expression
   51                 | . expression RS expression
   52 if_expression: . expression '>' expression
   53              | . expression '<' expression
   54              | . expression OP_EQ expression
   55              | . expression OP_LE expression
   56              | . expression OP_GE expression
   57              | . expression OP_NE expression
   58              | . expression OP_LOR expression
   59              | . expression OP_LAND expression
   60 parameter_list: . expression
   61               | . parameter_list ',' expression
   94 value: . ID
   95      | . STRING_VAL
   96      | . NUMBER_VAL
   97      | . '+' NUMBER_VAL
   98      | . '-' NUMBER_VAL
   99      | . DOUBLE_VAL
  100      | . CHAR_VAL
  101      | . TRUE
  102      | . FALSE

    FALSE       shift, and go to state 45
    TRUE        shift, and go to state 46
    NUMBER_VAL  shift, and go to state 47
    DOUBLE_VAL  shift, and go to state 48
    STRING_VAL  shift, and go to state 49
    CHAR_VAL    shift, and go to state 50
    ID          shift, and go to state 51
    '+'         shift, and go to state 52
    '-'         shift, and go to state 53
    '('         shift, and go to state 54
    ')'         shift, and go to state 85

    expression        go to state 86
    function_call     go to state 56
    infix_expression  go to state 57
    if_expression     go to state 58
    parameter_list    go to state 87
    value             go to state 59


state 64

   97 value: '+' NUMBER_VAL .

    $default  reduce using rule 97 (value)


state 65

   98 value: '-' NUMBER_VAL .

    $default  reduce using rule 98 (value)


state 66

   37 expression: '(' expression . ')'
   44 infix_expression: expression . '+' expression
   45                 | expression . '-' expression
   46                 | expression . '*' expression
   47                 | expression . '/' expression
   48                 | expression . '%' expression
   49                 | expression . '&' expression
   50                 | expression . LS expression
   51                 | expression . RS expression
   52 if_expression: expression . '>' expression
   53              | expression . '<' expression
   54              | expression . OP_EQ expression
   55              | expression . OP_LE expression
   56              | expression . OP_GE expression
   57              | expression . OP_NE expression
   58              | expression . OP_LOR expression
   59              | expression . OP_LAND expression

    LS       shift, and go to state 67
    OP_GE    shift, and go to state 68
    OP_LE    shift, and go to state 69
    OP_EQ    shift, and go to state 70
    OP_NE    shift, and go to state 71
    OP_LAND  shift, and go to state 72
    OP_LOR   shift, and go to state 73
    RS       shift, and go to state 74
    '+'      shift, and go to state 75
    '-'      shift, and go to state 76
    '*'      shift, and go to state 77
    '/'      shift, and go to state 78
    '%'      shift, and go to state 79
    '&'      shift, and go to state 80
    ')'      shift, and go to state 88
    '<'      shift, and go to state 81
    '>'      shift, and go to state 82


state 67

   37 expression: . '(' expression ')'
   38           | . value
   39           | . function_call
   40           | . infix_expression
   41           | . if_expression
   42 function_call: . ID '(' ')'
   43              | . ID '(' parameter_list ')'
   44 infix_expression: . expression '+' expression
   45                 | . expression '-' expression
   46                 | . expression '*' expression
   47                 | . expression '/' expression
   48                 | . expression '%' expression
   49                 | . expression '&' expression
   50                 | . expression LS expression
   50                 | expression LS . expression
   51                 | . expression RS expression
   52 if_expression: . expression '>' expression
   53              | . expression '<' expression
   54              | . expression OP_EQ expression
   55              | . expression OP_LE expression
   56              | . expression OP_GE expression
   57              | . expression OP_NE expression
   58              | . expression OP_LOR expression
   59              | . expression OP_LAND expression
   94 value: . ID
   95      | . STRING_VAL
   96      | . NUMBER_VAL
   97      | . '+' NUMBER_VAL
   98      | . '-' NUMBER_VAL
   99      | . DOUBLE_VAL
  100      | . CHAR_VAL
  101      | . TRUE
  102      | . FALSE

    FALSE       shift, and go to state 45
    TRUE        shift, and go to state 46
    NUMBER_VAL  shift, and go to state 47
    DOUBLE_VAL  shift, and go to state 48
    STRING_VAL  shift, and go to state 49
    CHAR_VAL    shift, and go to state 50
    ID          shift, and go to state 51
    '+'         shift, and go to state 52
    '-'         shift, and go to state 53
    '('         shift, and go to state 54

    expression        go to state 89
    function_call     go to state 56
    infix_expression  go to state 57
    if_expression     go to state 58
    value             go to state 59


state 68

   37 expression: . '(' expression ')'
   38           | . value
   39           | . function_call
   40           | . infix_expression
   41           | . if_expression
   42 function_call: . ID '(' ')'
   43              | . ID '(' parameter_list ')'
   44 infix_expression: . expression '+' expression
   45                 | . expression '-' expression
   46                 | . expression '*' expression
   47                 | . expression '/' expression
   48                 | . expression '%' expression
   49                 | . expression '&' expression
   50                 | . expression LS expression
   51                 | . expression RS expression
   52 if_expression: . expression '>' expression
   53              | . expression '<' expression
   54              | . expression OP_EQ expression
   55              | . expression OP_LE expression
   56              | . expression OP_GE expression
   56              | expression OP_GE . expression
   57              | . expression OP_NE expression
   58              | . expression OP_LOR expression
   59              | . expression OP_LAND expression
   94 value: . ID
   95      | . STRING_VAL
   96      | . NUMBER_VAL
   97      | . '+' NUMBER_VAL
   98      | . '-' NUMBER_VAL
   99      | . DOUBLE_VAL
  100      | . CHAR_VAL
  101      | . TRUE
  102      | . FALSE

    FALSE       shift, and go to state 45
    TRUE        shift, and go to state 46
    NUMBER_VAL  shift, and go to state 47
    DOUBLE_VAL  shift, and go to state 48
    STRING_VAL  shift, and go to state 49
    CHAR_VAL    shift, and go to state 50
    ID          shift, and go to state 51
    '+'         shift, and go to state 52
    '-'         shift, and go to state 53
    '('         shift, and go to state 54

    expression        go to state 90
    function_call     go to state 56
    infix_expression  go to state 57
    if_expression     go to state 58
    value             go to state 59


state 69

   37 expression: . '(' expression ')'
   38           | . value
   39           | . function_call
   40           | . infix_expression
   41           | . if_expression
   42 function_call: . ID '(' ')'
   43              | . ID '(' parameter_list ')'
   44 infix_expression: . expression '+' expression
   45                 | . expression '-' expression
   46                 | . expression '*' expression
   47                 | . expression '/' expression
   48                 | . expression '%' expression
   49                 | . expression '&' expression
   50                 | . expression LS expression
   51                 | . expression RS expression
   52 if_expression: . expression '>' expression
   53              | . expression '<' expression
   54              | . expression OP_EQ expression
   55              | . expression OP_LE expression
   55              | expression OP_LE . expression
   56              | . expression OP_GE expression
   57              | . expression OP_NE expression
   58              | . expression OP_LOR expression
   59              | . expression OP_LAND expression
   94 value: . ID
   95      | . STRING_VAL
   96      | . NUMBER_VAL
   97      | . '+' NUMBER_VAL
   98      | . '-' NUMBER_VAL
   99      | . DOUBLE_VAL
  100      | . CHAR_VAL
  101      | . TRUE
  102      | . FALSE

    FALSE       shift, and go to state 45
    TRUE        shift, and go to state 46
    NUMBER_VAL  shift, and go to state 47
    DOUBLE_VAL  shift, and go to state 48
    STRING_VAL  shift, and go to state 49
    CHAR_VAL    shift, and go to state 50
    ID          shift, and go to state 51
    '+'         shift, and go to state 52
    '-'         shift, and go to state 53
    '('         shift, and go to state 54

    expression        go to state 91
    function_call     go to state 56
    infix_expression  go to state 57
    if_expression     go to state 58
    value             go to state 59


state 70

   37 expression: . '(' expression ')'
   38           | . value
   39           | . function_call
   40           | . infix_expression
   41           | . if_expression
   42 function_call: . ID '(' ')'
   43              | . ID '(' parameter_list ')'
   44 infix_expression: . expression '+' expression
   45                 | . expression '-' expression
   46                 | . expression '*' expression
   47                 | . expression '/' expression
   48                 | . expression '%' expression
   49                 | . expression '&' expression
   50                 | . expression LS expression
   51                 | . expression RS expression
   52 if_expression: . expression '>' expression
   53              | . expression '<' expression
   54              | . expression OP_EQ expression
   54              | expression OP_EQ . expression
   55              | . expression OP_LE expression
   56              | . expression OP_GE expression
   57              | . expression OP_NE expression
   58              | . expression OP_LOR expression
   59              | . expression OP_LAND expression
   94 value: . ID
   95      | . STRING_VAL
   96      | . NUMBER_VAL
   97      | . '+' NUMBER_VAL
   98      | . '-' NUMBER_VAL
   99      | . DOUBLE_VAL
  100      | . CHAR_VAL
  101      | . TRUE
  102      | . FALSE

    FALSE       shift, and go to state 45
    TRUE        shift, and go to state 46
    NUMBER_VAL  shift, and go to state 47
    DOUBLE_VAL  shift, and go to state 48
    STRING_VAL  shift, and go to state 49
    CHAR_VAL    shift, and go to state 50
    ID          shift, and go to state 51
    '+'         shift, and go to state 52
    '-'         shift, and go to state 53
    '('         shift, and go to state 54

    expression        go to state 92
    function_call     go to state 56
    infix_expression  go to state 57
    if_expression     go to state 58
    value             go to state 59


state 71

   37 expression: . '(' expression ')'
   38           | . value
   39           | . function_call
   40           | . infix_expression
   41           | . if_expression
   42 function_call: . ID '(' ')'
   43              | . ID '(' parameter_list ')'
   44 infix_expression: . expression '+' expression
   45                 | . expression '-' expression
   46                 | . expression '*' expression
   47                 | . expression '/' expression
   48                 | . expression '%' expression
   49                 | . expression '&' expression
   50                 | . expression LS expression
   51                 | . expression RS expression
   52 if_expression: . expression '>' expression
   53              | . expression '<' expression
   54              | . expression OP_EQ expression
   55              | . expression OP_LE expression
   56              | . expression OP_GE expression
   57              | . expression OP_NE expression
   57              | expression OP_NE . expression
   58              | . expression OP_LOR expression
   59              | . expression OP_LAND expression
   94 value: . ID
   95      | . STRING_VAL
   96      | . NUMBER_VAL
   97      | . '+' NUMBER_VAL
   98      | . '-' NUMBER_VAL
   99      | . DOUBLE_VAL
  100      | . CHAR_VAL
  101      | . TRUE
  102      | . FALSE

    FALSE       shift, and go to state 45
    TRUE        shift, and go to state 46
    NUMBER_VAL  shift, and go to state 47
    DOUBLE_VAL  shift, and go to state 48
    STRING_VAL  shift, and go to state 49
    CHAR_VAL    shift, and go to state 50
    ID          shift, and go to state 51
    '+'         shift, and go to state 52
    '-'         shift, and go to state 53
    '('         shift, and go to state 54

    expression        go to state 93
    function_call     go to state 56
    infix_expression  go to state 57
    if_expression     go to state 58
    value             go to state 59


state 72

   37 expression: . '(' expression ')'
   38           | . value
   39           | . function_call
   40           | . infix_expression
   41           | . if_expression
   42 function_call: . ID '(' ')'
   43              | . ID '(' parameter_list ')'
   44 infix_expression: . expression '+' expression
   45                 | . expression '-' expression
   46                 | . expression '*' expression
   47                 | . expression '/' expression
   48                 | . expression '%' expression
   49                 | . expression '&' expression
   50                 | . expression LS expression
   51                 | . expression RS expression
   52 if_expression: . expression '>' expression
   53              | . expression '<' expression
   54              | . expression OP_EQ expression
   55              | . expression OP_LE expression
   56              | . expression OP_GE expression
   57              | . expression OP_NE expression
   58              | . expression OP_LOR expression
   59              | . expression OP_LAND expression
   59              | expression OP_LAND . expression
   94 value: . ID
   95      | . STRING_VAL
   96      | . NUMBER_VAL
   97      | . '+' NUMBER_VAL
   98      | . '-' NUMBER_VAL
   99      | . DOUBLE_VAL
  100      | . CHAR_VAL
  101      | . TRUE
  102      | . FALSE

    FALSE       shift, and go to state 45
    TRUE        shift, and go to state 46
    NUMBER_VAL  shift, and go to state 47
    DOUBLE_VAL  shift, and go to state 48
    STRING_VAL  shift, and go to state 49
    CHAR_VAL    shift, and go to state 50
    ID          shift, and go to state 51
    '+'         shift, and go to state 52
    '-'         shift, and go to state 53
    '('         shift, and go to state 54

    expression        go to state 94
    function_call     go to state 56
    infix_expression  go to state 57
    if_expression     go to state 58
    value             go to state 59


state 73

   37 expression: . '(' expression ')'
   38           | . value
   39           | . function_call
   40           | . infix_expression
   41           | . if_expression
   42 function_call: . ID '(' ')'
   43              | . ID '(' parameter_list ')'
   44 infix_expression: . expression '+' expression
   45                 | . expression '-' expression
   46                 | . expression '*' expression
   47                 | . expression '/' expression
   48                 | . expression '%' expression
   49                 | . expression '&' expression
   50                 | . expression LS expression
   51                 | . expression RS expression
   52 if_expression: . expression '>' expression
   53              | . expression '<' expression
   54              | . expression OP_EQ expression
   55              | . expression OP_LE expression
   56              | . expression OP_GE expression
   57              | . expression OP_NE expression
   58              | . expression OP_LOR expression
   58              | expression OP_LOR . expression
   59              | . expression OP_LAND expression
   94 value: . ID
   95      | . STRING_VAL
   96      | . NUMBER_VAL
   97      | . '+' NUMBER_VAL
   98      | . '-' NUMBER_VAL
   99      | . DOUBLE_VAL
  100      | . CHAR_VAL
  101      | . TRUE
  102      | . FALSE

    FALSE       shift, and go to state 45
    TRUE        shift, and go to state 46
    NUMBER_VAL  shift, and go to state 47
    DOUBLE_VAL  shift, and go to state 48
    STRING_VAL  shift, and go to state 49
    CHAR_VAL    shift, and go to state 50
    ID          shift, and go to state 51
    '+'         shift, and go to state 52
    '-'         shift, and go to state 53
    '('         shift, and go to state 54

    expression        go to state 95
    function_call     go to state 56
    infix_expression  go to state 57
    if_expression     go to state 58
    value             go to state 59


state 74

   37 expression: . '(' expression ')'
   38           | . value
   39           | . function_call
   40           | . infix_expression
   41           | . if_expression
   42 function_call: . ID '(' ')'
   43              | . ID '(' parameter_list ')'
   44 infix_expression: . expression '+' expression
   45                 | . expression '-' expression
   46                 | . expression '*' expression
   47                 | . expression '/' expression
   48                 | . expression '%' expression
   49                 | . expression '&' expression
   50                 | . expression LS expression
   51                 | . expression RS expression
   51                 | expression RS . expression
   52 if_expression: . expression '>' expression
   53              | . expression '<' expression
   54              | . expression OP_EQ expression
   55              | . expression OP_LE expression
   56              | . expression OP_GE expression
   57              | . expression OP_NE expression
   58              | . expression OP_LOR expression
   59              | . expression OP_LAND expression
   94 value: . ID
   95      | . STRING_VAL
   96      | . NUMBER_VAL
   97      | . '+' NUMBER_VAL
   98      | . '-' NUMBER_VAL
   99      | . DOUBLE_VAL
  100      | . CHAR_VAL
  101      | . TRUE
  102      | . FALSE

    FALSE       shift, and go to state 45
    TRUE        shift, and go to state 46
    NUMBER_VAL  shift, and go to state 47
    DOUBLE_VAL  shift, and go to state 48
    STRING_VAL  shift, and go to state 49
    CHAR_VAL    shift, and go to state 50
    ID          shift, and go to state 51
    '+'         shift, and go to state 52
    '-'         shift, and go to state 53
    '('         shift, and go to state 54

    expression        go to state 96
    function_call     go to state 56
    infix_expression  go to state 57
    if_expression     go to state 58
    value             go to state 59


state 75

   37 expression: . '(' expression ')'
   38           | . value
   39           | . function_call
   40           | . infix_expression
   41           | . if_expression
   42 function_call: . ID '(' ')'
   43              | . ID '(' parameter_list ')'
   44 infix_expression: . expression '+' expression
   44                 | expression '+' . expression
   45                 | . expression '-' expression
   46                 | . expression '*' expression
   47                 | . expression '/' expression
   48                 | . expression '%' expression
   49                 | . expression '&' expression
   50                 | . expression LS expression
   51                 | . expression RS expression
   52 if_expression: . expression '>' expression
   53              | . expression '<' expression
   54              | . expression OP_EQ expression
   55              | . expression OP_LE expression
   56              | . expression OP_GE expression
   57              | . expression OP_NE expression
   58              | . expression OP_LOR expression
   59              | . expression OP_LAND expression
   94 value: . ID
   95      | . STRING_VAL
   96      | . NUMBER_VAL
   97      | . '+' NUMBER_VAL
   98      | . '-' NUMBER_VAL
   99      | . DOUBLE_VAL
  100      | . CHAR_VAL
  101      | . TRUE
  102      | . FALSE

    FALSE       shift, and go to state 45
    TRUE        shift, and go to state 46
    NUMBER_VAL  shift, and go to state 47
    DOUBLE_VAL  shift, and go to state 48
    STRING_VAL  shift, and go to state 49
    CHAR_VAL    shift, and go to state 50
    ID          shift, and go to state 51
    '+'         shift, and go to state 52
    '-'         shift, and go to state 53
    '('         shift, and go to state 54

    expression        go to state 97
    function_call     go to state 56
    infix_expression  go to state 57
    if_expression     go to state 58
    value             go to state 59


state 76

   37 expression: . '(' expression ')'
   38           | . value
   39           | . function_call
   40           | . infix_expression
   41           | . if_expression
   42 function_call: . ID '(' ')'
   43              | . ID '(' parameter_list ')'
   44 infix_expression: . expression '+' expression
   45                 | . expression '-' expression
   45                 | expression '-' . expression
   46                 | . expression '*' expression
   47                 | . expression '/' expression
   48                 | . expression '%' expression
   49                 | . expression '&' expression
   50                 | . expression LS expression
   51                 | . expression RS expression
   52 if_expression: . expression '>' expression
   53              | . expression '<' expression
   54              | . expression OP_EQ expression
   55              | . expression OP_LE expression
   56              | . expression OP_GE expression
   57              | . expression OP_NE expression
   58              | . expression OP_LOR expression
   59              | . expression OP_LAND expression
   94 value: . ID
   95      | . STRING_VAL
   96      | . NUMBER_VAL
   97      | . '+' NUMBER_VAL
   98      | . '-' NUMBER_VAL
   99      | . DOUBLE_VAL
  100      | . CHAR_VAL
  101      | . TRUE
  102      | . FALSE

    FALSE       shift, and go to state 45
    TRUE        shift, and go to state 46
    NUMBER_VAL  shift, and go to state 47
    DOUBLE_VAL  shift, and go to state 48
    STRING_VAL  shift, and go to state 49
    CHAR_VAL    shift, and go to state 50
    ID          shift, and go to state 51
    '+'         shift, and go to state 52
    '-'         shift, and go to state 53
    '('         shift, and go to state 54

    expression        go to state 98
    function_call     go to state 56
    infix_expression  go to state 57
    if_expression     go to state 58
    value             go to state 59


state 77

   37 expression: . '(' expression ')'
   38           | . value
   39           | . function_call
   40           | . infix_expression
   41           | . if_expression
   42 function_call: . ID '(' ')'
   43              | . ID '(' parameter_list ')'
   44 infix_expression: . expression '+' expression
   45                 | . expression '-' expression
   46                 | . expression '*' expression
   46                 | expression '*' . expression
   47                 | . expression '/' expression
   48                 | . expression '%' expression
   49                 | . expression '&' expression
   50                 | . expression LS expression
   51                 | . expression RS expression
   52 if_expression: . expression '>' expression
   53              | . expression '<' expression
   54              | . expression OP_EQ expression
   55              | . expression OP_LE expression
   56              | . expression OP_GE expression
   57              | . expression OP_NE expression
   58              | . expression OP_LOR expression
   59              | . expression OP_LAND expression
   94 value: . ID
   95      | . STRING_VAL
   96      | . NUMBER_VAL
   97      | . '+' NUMBER_VAL
   98      | . '-' NUMBER_VAL
   99      | . DOUBLE_VAL
  100      | . CHAR_VAL
  101      | . TRUE
  102      | . FALSE

    FALSE       shift, and go to state 45
    TRUE        shift, and go to state 46
    NUMBER_VAL  shift, and go to state 47
    DOUBLE_VAL  shift, and go to state 48
    STRING_VAL  shift, and go to state 49
    CHAR_VAL    shift, and go to state 50
    ID          shift, and go to state 51
    '+'         shift, and go to state 52
    '-'         shift, and go to state 53
    '('         shift, and go to state 54

    expression        go to state 99
    function_call     go to state 56
    infix_expression  go to state 57
    if_expression     go to state 58
    value             go to state 59


state 78

   37 expression: . '(' expression ')'
   38           | . value
   39           | . function_call
   40           | . infix_expression
   41           | . if_expression
   42 function_call: . ID '(' ')'
   43              | . ID '(' parameter_list ')'
   44 infix_expression: . expression '+' expression
   45                 | . expression '-' expression
   46                 | . expression '*' expression
   47                 | . expression '/' expression
   47                 | expression '/' . expression
   48                 | . expression '%' expression
   49                 | . expression '&' expression
   50                 | . expression LS expression
   51                 | . expression RS expression
   52 if_expression: . expression '>' expression
   53              | . expression '<' expression
   54              | . expression OP_EQ expression
   55              | . expression OP_LE expression
   56              | . expression OP_GE expression
   57              | . expression OP_NE expression
   58              | . expression OP_LOR expression
   59              | . expression OP_LAND expression
   94 value: . ID
   95      | . STRING_VAL
   96      | . NUMBER_VAL
   97      | . '+' NUMBER_VAL
   98      | . '-' NUMBER_VAL
   99      | . DOUBLE_VAL
  100      | . CHAR_VAL
  101      | . TRUE
  102      | . FALSE

    FALSE       shift, and go to state 45
    TRUE        shift, and go to state 46
    NUMBER_VAL  shift, and go to state 47
    DOUBLE_VAL  shift, and go to state 48
    STRING_VAL  shift, and go to state 49
    CHAR_VAL    shift, and go to state 50
    ID          shift, and go to state 51
    '+'         shift, and go to state 52
    '-'         shift, and go to state 53
    '('         shift, and go to state 54

    expression        go to state 100
    function_call     go to state 56
    infix_expression  go to state 57
    if_expression     go to state 58
    value             go to state 59


state 79

   37 expression: . '(' expression ')'
   38           | . value
   39           | . function_call
   40           | . infix_expression
   41           | . if_expression
   42 function_call: . ID '(' ')'
   43              | . ID '(' parameter_list ')'
   44 infix_expression: . expression '+' expression
   45                 | . expression '-' expression
   46                 | . expression '*' expression
   47                 | . expression '/' expression
   48                 | . expression '%' expression
   48                 | expression '%' . expression
   49                 | . expression '&' expression
   50                 | . expression LS expression
   51                 | . expression RS expression
   52 if_expression: . expression '>' expression
   53              | . expression '<' expression
   54              | . expression OP_EQ expression
   55              | . expression OP_LE expression
   56              | . expression OP_GE expression
   57              | . expression OP_NE expression
   58              | . expression OP_LOR expression
   59              | . expression OP_LAND expression
   94 value: . ID
   95      | . STRING_VAL
   96      | . NUMBER_VAL
   97      | . '+' NUMBER_VAL
   98      | . '-' NUMBER_VAL
   99      | . DOUBLE_VAL
  100      | . CHAR_VAL
  101      | . TRUE
  102      | . FALSE

    FALSE       shift, and go to state 45
    TRUE        shift, and go to state 46
    NUMBER_VAL  shift, and go to state 47
    DOUBLE_VAL  shift, and go to state 48
    STRING_VAL  shift, and go to state 49
    CHAR_VAL    shift, and go to state 50
    ID          shift, and go to state 51
    '+'         shift, and go to state 52
    '-'         shift, and go to state 53
    '('         shift, and go to state 54

    expression        go to state 101
    function_call     go to state 56
    infix_expression  go to state 57
    if_expression     go to state 58
    value             go to state 59


state 80

   37 expression: . '(' expression ')'
   38           | . value
   39           | . function_call
   40           | . infix_expression
   41           | . if_expression
   42 function_call: . ID '(' ')'
   43              | . ID '(' parameter_list ')'
   44 infix_expression: . expression '+' expression
   45                 | . expression '-' expression
   46                 | . expression '*' expression
   47                 | . expression '/' expression
   48                 | . expression '%' expression
   49                 | . expression '&' expression
   49                 | expression '&' . expression
   50                 | . expression LS expression
   51                 | . expression RS expression
   52 if_expression: . expression '>' expression
   53              | . expression '<' expression
   54              | . expression OP_EQ expression
   55              | . expression OP_LE expression
   56              | . expression OP_GE expression
   57              | . expression OP_NE expression
   58              | . expression OP_LOR expression
   59              | . expression OP_LAND expression
   94 value: . ID
   95      | . STRING_VAL
   96      | . NUMBER_VAL
   97      | . '+' NUMBER_VAL
   98      | . '-' NUMBER_VAL
   99      | . DOUBLE_VAL
  100      | . CHAR_VAL
  101      | . TRUE
  102      | . FALSE

    FALSE       shift, and go to state 45
    TRUE        shift, and go to state 46
    NUMBER_VAL  shift, and go to state 47
    DOUBLE_VAL  shift, and go to state 48
    STRING_VAL  shift, and go to state 49
    CHAR_VAL    shift, and go to state 50
    ID          shift, and go to state 51
    '+'         shift, and go to state 52
    '-'         shift, and go to state 53
    '('         shift, and go to state 54

    expression        go to state 102
    function_call     go to state 56
    infix_expression  go to state 57
    if_expression     go to state 58
    value             go to state 59


state 81

   37 expression: . '(' expression ')'
   38           | . value
   39           | . function_call
   40           | . infix_expression
   41           | . if_expression
   42 function_call: . ID '(' ')'
   43              | . ID '(' parameter_list ')'
   44 infix_expression: . expression '+' expression
   45                 | . expression '-' expression
   46                 | . expression '*' expression
   47                 | . expression '/' expression
   48                 | . expression '%' expression
   49                 | . expression '&' expression
   50                 | . expression LS expression
   51                 | . expression RS expression
   52 if_expression: . expression '>' expression
   53              | . expression '<' expression
   53              | expression '<' . expression
   54              | . expression OP_EQ expression
   55              | . expression OP_LE expression
   56              | . expression OP_GE expression
   57              | . expression OP_NE expression
   58              | . expression OP_LOR expression
   59              | . expression OP_LAND expression
   94 value: . ID
   95      | . STRING_VAL
   96      | . NUMBER_VAL
   97      | . '+' NUMBER_VAL
   98      | . '-' NUMBER_VAL
   99      | . DOUBLE_VAL
  100      | . CHAR_VAL
  101      | . TRUE
  102      | . FALSE

    FALSE       shift, and go to state 45
    TRUE        shift, and go to state 46
    NUMBER_VAL  shift, and go to state 47
    DOUBLE_VAL  shift, and go to state 48
    STRING_VAL  shift, and go to state 49
    CHAR_VAL    shift, and go to state 50
    ID          shift, and go to state 51
    '+'         shift, and go to state 52
    '-'         shift, and go to state 53
    '('         shift, and go to state 54

    expression        go to state 103
    function_call     go to state 56
    infix_expression  go to state 57
    if_expression     go to state 58
    value             go to state 59


state 82

   37 expression: . '(' expression ')'
   38           | . value
   39           | . function_call
   40           | . infix_expression
   41           | . if_expression
   42 function_call: . ID '(' ')'
   43              | . ID '(' parameter_list ')'
   44 infix_expression: . expression '+' expression
   45                 | . expression '-' expression
   46                 | . expression '*' expression
   47                 | . expression '/' expression
   48                 | . expression '%' expression
   49                 | . expression '&' expression
   50                 | . expression LS expression
   51                 | . expression RS expression
   52 if_expression: . expression '>' expression
   52              | expression '>' . expression
   53              | . expression '<' expression
   54              | . expression OP_EQ expression
   55              | . expression OP_LE expression
   56              | . expression OP_GE expression
   57              | . expression OP_NE expression
   58              | . expression OP_LOR expression
   59              | . expression OP_LAND expression
   94 value: . ID
   95      | . STRING_VAL
   96      | . NUMBER_VAL
   97      | . '+' NUMBER_VAL
   98      | . '-' NUMBER_VAL
   99      | . DOUBLE_VAL
  100      | . CHAR_VAL
  101      | . TRUE
  102      | . FALSE

    FALSE       shift, and go to state 45
    TRUE        shift, and go to state 46
    NUMBER_VAL  shift, and go to state 47
    DOUBLE_VAL  shift, and go to state 48
    STRING_VAL  shift, and go to state 49
    CHAR_VAL    shift, and go to state 50
    ID          shift, and go to state 51
    '+'         shift, and go to state 52
    '-'         shift, and go to state 53
    '('         shift, and go to state 54

    expression        go to state 104
    function_call     go to state 56
    infix_expression  go to state 57
    if_expression     go to state 58
    value             go to state 59


state 83

   12 function: scope STATIC type ID '(' . argument_list ')' code
   66 argument_list: . argument
   67              | . argument_list ',' argument
   68 argument: . type ID
  103 type: . CHAR
  104     | . INT
  105     | . STRING
  106     | . BOOLEAN
  107     | . FLOAT
  108     | . VOID

    BOOLEAN  shift, and go to state 6
    CHAR     shift, and go to state 7
    FLOAT    shift, and go to state 8
    INT      shift, and go to state 9
    STRING   shift, and go to state 13
    VOID     shift, and go to state 14

    argument_list  go to state 105
    argument       go to state 106
    type           go to state 107


state 84

    5 main: scope STATIC VOID MAIN '(' STRING . '[' ']' ARGS ')' code

    '['  shift, and go to state 108


state 85

   42 function_call: ID '(' ')' .

    $default  reduce using rule 42 (function_call)


state 86

   44 infix_expression: expression . '+' expression
   45                 | expression . '-' expression
   46                 | expression . '*' expression
   47                 | expression . '/' expression
   48                 | expression . '%' expression
   49                 | expression . '&' expression
   50                 | expression . LS expression
   51                 | expression . RS expression
   52 if_expression: expression . '>' expression
   53              | expression . '<' expression
   54              | expression . OP_EQ expression
   55              | expression . OP_LE expression
   56              | expression . OP_GE expression
   57              | expression . OP_NE expression
   58              | expression . OP_LOR expression
   59              | expression . OP_LAND expression
   60 parameter_list: expression .  [')', ',']

    LS       shift, and go to state 67
    OP_GE    shift, and go to state 68
    OP_LE    shift, and go to state 69
    OP_EQ    shift, and go to state 70
    OP_NE    shift, and go to state 71
    OP_LAND  shift, and go to state 72
    OP_LOR   shift, and go to state 73
    RS       shift, and go to state 74
    '+'      shift, and go to state 75
    '-'      shift, and go to state 76
    '*'      shift, and go to state 77
    '/'      shift, and go to state 78
    '%'      shift, and go to state 79
    '&'      shift, and go to state 80
    '<'      shift, and go to state 81
    '>'      shift, and go to state 82

    $default  reduce using rule 60 (parameter_list)


state 87

   43 function_call: ID '(' parameter_list . ')'
   61 parameter_list: parameter_list . ',' expression

    ')'  shift, and go to state 109
    ','  shift, and go to state 110


state 88

   37 expression: '(' expression ')' .

    $default  reduce using rule 37 (expression)


state 89

   44 infix_expression: expression . '+' expression
   45                 | expression . '-' expression
   46                 | expression . '*' expression
   47                 | expression . '/' expression
   48                 | expression . '%' expression
   49                 | expression . '&' expression
   50                 | expression . LS expression
   50                 | expression LS expression .  [LS, RS, '+', '-', '*', '/', '%', '&', ')', ';', ',']
   51                 | expression . RS expression
   52 if_expression: expression . '>' expression
   53              | expression . '<' expression
   54              | expression . OP_EQ expression
   55              | expression . OP_LE expression
   56              | expression . OP_GE expression
   57              | expression . OP_NE expression
   58              | expression . OP_LOR expression
   59              | expression . OP_LAND expression

    OP_GE    shift, and go to state 68
    OP_LE    shift, and go to state 69
    OP_EQ    shift, and go to state 70
    OP_NE    shift, and go to state 71
    OP_LAND  shift, and go to state 72
    OP_LOR   shift, and go to state 73
    '<'      shift, and go to state 81
    '>'      shift, and go to state 82

    $default  reduce using rule 50 (infix_expression)

    Conflict between rule 50 and token LS resolved as reduce (%left LS).
    Conflict between rule 50 and token OP_GE resolved as shift (LS < OP_GE).
    Conflict between rule 50 and token OP_LE resolved as shift (LS < OP_LE).
    Conflict between rule 50 and token OP_EQ resolved as shift (LS < OP_EQ).
    Conflict between rule 50 and token OP_NE resolved as shift (LS < OP_NE).
    Conflict between rule 50 and token OP_LAND resolved as shift (LS < OP_LAND).
    Conflict between rule 50 and token OP_LOR resolved as shift (LS < OP_LOR).
    Conflict between rule 50 and token RS resolved as reduce (%left RS).
    Conflict between rule 50 and token '+' resolved as reduce ('+' < LS).
    Conflict between rule 50 and token '-' resolved as reduce ('-' < LS).
    Conflict between rule 50 and token '*' resolved as reduce (%left '*').
    Conflict between rule 50 and token '/' resolved as reduce (%left '/').
    Conflict between rule 50 and token '%' resolved as reduce (%left '%').
    Conflict between rule 50 and token '&' resolved as reduce (%left '&').
    Conflict between rule 50 and token '<' resolved as shift (LS < '<').
    Conflict between rule 50 and token '>' resolved as shift (LS < '>').


state 90

   44 infix_expression: expression . '+' expression
   45                 | expression . '-' expression
   46                 | expression . '*' expression
   47                 | expression . '/' expression
   48                 | expression . '%' expression
   49                 | expression . '&' expression
   50                 | expression . LS expression
   51                 | expression . RS expression
   52 if_expression: expression . '>' expression
   53              | expression . '<' expression
   54              | expression . OP_EQ expression
   55              | expression . OP_LE expression
   56              | expression . OP_GE expression
   56              | expression OP_GE expression .  [LS, OP_GE, OP_LE, OP_EQ, OP_NE, OP_LAND, OP_LOR, RS, '+', '-', '*', '/', '%', '&', ')', '<', '>', ';', ',']
   57              | expression . OP_NE expression
   58              | expression . OP_LOR expression
   59              | expression . OP_LAND expression

    $default  reduce using rule 56 (if_expression)

    Conflict between rule 56 and token LS resolved as reduce (LS < OP_GE).
    Conflict between rule 56 and token OP_GE resolved as reduce (%left OP_GE).
    Conflict between rule 56 and token OP_LE resolved as reduce (%left OP_LE).
    Conflict between rule 56 and token OP_EQ resolved as reduce (%left OP_EQ).
    Conflict between rule 56 and token OP_NE resolved as reduce (%left OP_NE).
    Conflict between rule 56 and token OP_LAND resolved as reduce (%left OP_LAND).
    Conflict between rule 56 and token OP_LOR resolved as reduce (%left OP_LOR).
    Conflict between rule 56 and token RS resolved as reduce (RS < OP_GE).
    Conflict between rule 56 and token '+' resolved as reduce ('+' < OP_GE).
    Conflict between rule 56 and token '-' resolved as reduce ('-' < OP_GE).
    Conflict between rule 56 and token '*' resolved as reduce ('*' < OP_GE).
    Conflict between rule 56 and token '/' resolved as reduce ('/' < OP_GE).
    Conflict between rule 56 and token '%' resolved as reduce ('%' < OP_GE).
    Conflict between rule 56 and token '&' resolved as reduce ('&' < OP_GE).
    Conflict between rule 56 and token '<' resolved as reduce (%left '<').
    Conflict between rule 56 and token '>' resolved as reduce (%left '>').


state 91

   44 infix_expression: expression . '+' expression
   45                 | expression . '-' expression
   46                 | expression . '*' expression
   47                 | expression . '/' expression
   48                 | expression . '%' expression
   49                 | expression . '&' expression
   50                 | expression . LS expression
   51                 | expression . RS expression
   52 if_expression: expression . '>' expression
   53              | expression . '<' expression
   54              | expression . OP_EQ expression
   55              | expression . OP_LE expression
   55              | expression OP_LE expression .  [LS, OP_GE, OP_LE, OP_EQ, OP_NE, OP_LAND, OP_LOR, RS, '+', '-', '*', '/', '%', '&', ')', '<', '>', ';', ',']
   56              | expression . OP_GE expression
   57              | expression . OP_NE expression
   58              | expression . OP_LOR expression
   59              | expression . OP_LAND expression

    $default  reduce using rule 55 (if_expression)

    Conflict between rule 55 and token LS resolved as reduce (LS < OP_LE).
    Conflict between rule 55 and token OP_GE resolved as reduce (%left OP_GE).
    Conflict between rule 55 and token OP_LE resolved as reduce (%left OP_LE).
    Conflict between rule 55 and token OP_EQ resolved as reduce (%left OP_EQ).
    Conflict between rule 55 and token OP_NE resolved as reduce (%left OP_NE).
    Conflict between rule 55 and token OP_LAND resolved as reduce (%left OP_LAND).
    Conflict between rule 55 and token OP_LOR resolved as reduce (%left OP_LOR).
    Conflict between rule 55 and token RS resolved as reduce (RS < OP_LE).
    Conflict between rule 55 and token '+' resolved as reduce ('+' < OP_LE).
    Conflict between rule 55 and token '-' resolved as reduce ('-' < OP_LE).
    Conflict between rule 55 and token '*' resolved as reduce ('*' < OP_LE).
    Conflict between rule 55 and token '/' resolved as reduce ('/' < OP_LE).
    Conflict between rule 55 and token '%' resolved as reduce ('%' < OP_LE).
    Conflict between rule 55 and token '&' resolved as reduce ('&' < OP_LE).
    Conflict between rule 55 and token '<' resolved as reduce (%left '<').
    Conflict between rule 55 and token '>' resolved as reduce (%left '>').


state 92

   44 infix_expression: expression . '+' expression
   45                 | expression . '-' expression
   46                 | expression . '*' expression
   47                 | expression . '/' expression
   48                 | expression . '%' expression
   49                 | expression . '&' expression
   50                 | expression . LS expression
   51                 | expression . RS expression
   52 if_expression: expression . '>' expression
   53              | expression . '<' expression
   54              | expression . OP_EQ expression
   54              | expression OP_EQ expression .  [LS, OP_GE, OP_LE, OP_EQ, OP_NE, OP_LAND, OP_LOR, RS, '+', '-', '*', '/', '%', '&', ')', '<', '>', ';', ',']
   55              | expression . OP_LE expression
   56              | expression . OP_GE expression
   57              | expression . OP_NE expression
   58              | expression . OP_LOR expression
   59              | expression . OP_LAND expression

    $default  reduce using rule 54 (if_expression)

    Conflict between rule 54 and token LS resolved as reduce (LS < OP_EQ).
    Conflict between rule 54 and token OP_GE resolved as reduce (%left OP_GE).
    Conflict between rule 54 and token OP_LE resolved as reduce (%left OP_LE).
    Conflict between rule 54 and token OP_EQ resolved as reduce (%left OP_EQ).
    Conflict between rule 54 and token OP_NE resolved as reduce (%left OP_NE).
    Conflict between rule 54 and token OP_LAND resolved as reduce (%left OP_LAND).
    Conflict between rule 54 and token OP_LOR resolved as reduce (%left OP_LOR).
    Conflict between rule 54 and token RS resolved as reduce (RS < OP_EQ).
    Conflict between rule 54 and token '+' resolved as reduce ('+' < OP_EQ).
    Conflict between rule 54 and token '-' resolved as reduce ('-' < OP_EQ).
    Conflict between rule 54 and token '*' resolved as reduce ('*' < OP_EQ).
    Conflict between rule 54 and token '/' resolved as reduce ('/' < OP_EQ).
    Conflict between rule 54 and token '%' resolved as reduce ('%' < OP_EQ).
    Conflict between rule 54 and token '&' resolved as reduce ('&' < OP_EQ).
    Conflict between rule 54 and token '<' resolved as reduce (%left '<').
    Conflict between rule 54 and token '>' resolved as reduce (%left '>').


state 93

   44 infix_expression: expression . '+' expression
   45                 | expression . '-' expression
   46                 | expression . '*' expression
   47                 | expression . '/' expression
   48                 | expression . '%' expression
   49                 | expression . '&' expression
   50                 | expression . LS expression
   51                 | expression . RS expression
   52 if_expression: expression . '>' expression
   53              | expression . '<' expression
   54              | expression . OP_EQ expression
   55              | expression . OP_LE expression
   56              | expression . OP_GE expression
   57              | expression . OP_NE expression
   57              | expression OP_NE expression .  [LS, OP_GE, OP_LE, OP_EQ, OP_NE, OP_LAND, OP_LOR, RS, '+', '-', '*', '/', '%', '&', ')', '<', '>', ';', ',']
   58              | expression . OP_LOR expression
   59              | expression . OP_LAND expression

    $default  reduce using rule 57 (if_expression)

    Conflict between rule 57 and token LS resolved as reduce (LS < OP_NE).
    Conflict between rule 57 and token OP_GE resolved as reduce (%left OP_GE).
    Conflict between rule 57 and token OP_LE resolved as reduce (%left OP_LE).
    Conflict between rule 57 and token OP_EQ resolved as reduce (%left OP_EQ).
    Conflict between rule 57 and token OP_NE resolved as reduce (%left OP_NE).
    Conflict between rule 57 and token OP_LAND resolved as reduce (%left OP_LAND).
    Conflict between rule 57 and token OP_LOR resolved as reduce (%left OP_LOR).
    Conflict between rule 57 and token RS resolved as reduce (RS < OP_NE).
    Conflict between rule 57 and token '+' resolved as reduce ('+' < OP_NE).
    Conflict between rule 57 and token '-' resolved as reduce ('-' < OP_NE).
    Conflict between rule 57 and token '*' resolved as reduce ('*' < OP_NE).
    Conflict between rule 57 and token '/' resolved as reduce ('/' < OP_NE).
    Conflict between rule 57 and token '%' resolved as reduce ('%' < OP_NE).
    Conflict between rule 57 and token '&' resolved as reduce ('&' < OP_NE).
    Conflict between rule 57 and token '<' resolved as reduce (%left '<').
    Conflict between rule 57 and token '>' resolved as reduce (%left '>').


state 94

   44 infix_expression: expression . '+' expression
   45                 | expression . '-' expression
   46                 | expression . '*' expression
   47                 | expression . '/' expression
   48                 | expression . '%' expression
   49                 | expression . '&' expression
   50                 | expression . LS expression
   51                 | expression . RS expression
   52 if_expression: expression . '>' expression
   53              | expression . '<' expression
   54              | expression . OP_EQ expression
   55              | expression . OP_LE expression
   56              | expression . OP_GE expression
   57              | expression . OP_NE expression
   58              | expression . OP_LOR expression
   59              | expression . OP_LAND expression
   59              | expression OP_LAND expression .  [LS, OP_GE, OP_LE, OP_EQ, OP_NE, OP_LAND, OP_LOR, RS, '+', '-', '*', '/', '%', '&', ')', '<', '>', ';', ',']

    $default  reduce using rule 59 (if_expression)

    Conflict between rule 59 and token LS resolved as reduce (LS < OP_LAND).
    Conflict between rule 59 and token OP_GE resolved as reduce (%left OP_GE).
    Conflict between rule 59 and token OP_LE resolved as reduce (%left OP_LE).
    Conflict between rule 59 and token OP_EQ resolved as reduce (%left OP_EQ).
    Conflict between rule 59 and token OP_NE resolved as reduce (%left OP_NE).
    Conflict between rule 59 and token OP_LAND resolved as reduce (%left OP_LAND).
    Conflict between rule 59 and token OP_LOR resolved as reduce (%left OP_LOR).
    Conflict between rule 59 and token RS resolved as reduce (RS < OP_LAND).
    Conflict between rule 59 and token '+' resolved as reduce ('+' < OP_LAND).
    Conflict between rule 59 and token '-' resolved as reduce ('-' < OP_LAND).
    Conflict between rule 59 and token '*' resolved as reduce ('*' < OP_LAND).
    Conflict between rule 59 and token '/' resolved as reduce ('/' < OP_LAND).
    Conflict between rule 59 and token '%' resolved as reduce ('%' < OP_LAND).
    Conflict between rule 59 and token '&' resolved as reduce ('&' < OP_LAND).
    Conflict between rule 59 and token '<' resolved as reduce (%left '<').
    Conflict between rule 59 and token '>' resolved as reduce (%left '>').


state 95

   44 infix_expression: expression . '+' expression
   45                 | expression . '-' expression
   46                 | expression . '*' expression
   47                 | expression . '/' expression
   48                 | expression . '%' expression
   49                 | expression . '&' expression
   50                 | expression . LS expression
   51                 | expression . RS expression
   52 if_expression: expression . '>' expression
   53              | expression . '<' expression
   54              | expression . OP_EQ expression
   55              | expression . OP_LE expression
   56              | expression . OP_GE expression
   57              | expression . OP_NE expression
   58              | expression . OP_LOR expression
   58              | expression OP_LOR expression .  [LS, OP_GE, OP_LE, OP_EQ, OP_NE, OP_LAND, OP_LOR, RS, '+', '-', '*', '/', '%', '&', ')', '<', '>', ';', ',']
   59              | expression . OP_LAND expression

    $default  reduce using rule 58 (if_expression)

    Conflict between rule 58 and token LS resolved as reduce (LS < OP_LOR).
    Conflict between rule 58 and token OP_GE resolved as reduce (%left OP_GE).
    Conflict between rule 58 and token OP_LE resolved as reduce (%left OP_LE).
    Conflict between rule 58 and token OP_EQ resolved as reduce (%left OP_EQ).
    Conflict between rule 58 and token OP_NE resolved as reduce (%left OP_NE).
    Conflict between rule 58 and token OP_LAND resolved as reduce (%left OP_LAND).
    Conflict between rule 58 and token OP_LOR resolved as reduce (%left OP_LOR).
    Conflict between rule 58 and token RS resolved as reduce (RS < OP_LOR).
    Conflict between rule 58 and token '+' resolved as reduce ('+' < OP_LOR).
    Conflict between rule 58 and token '-' resolved as reduce ('-' < OP_LOR).
    Conflict between rule 58 and token '*' resolved as reduce ('*' < OP_LOR).
    Conflict between rule 58 and token '/' resolved as reduce ('/' < OP_LOR).
    Conflict between rule 58 and token '%' resolved as reduce ('%' < OP_LOR).
    Conflict between rule 58 and token '&' resolved as reduce ('&' < OP_LOR).
    Conflict between rule 58 and token '<' resolved as reduce (%left '<').
    Conflict between rule 58 and token '>' resolved as reduce (%left '>').


state 96

   44 infix_expression: expression . '+' expression
   45                 | expression . '-' expression
   46                 | expression . '*' expression
   47                 | expression . '/' expression
   48                 | expression . '%' expression
   49                 | expression . '&' expression
   50                 | expression . LS expression
   51                 | expression . RS expression
   51                 | expression RS expression .  [LS, RS, '+', '-', '*', '/', '%', '&', ')', ';', ',']
   52 if_expression: expression . '>' expression
   53              | expression . '<' expression
   54              | expression . OP_EQ expression
   55              | expression . OP_LE expression
   56              | expression . OP_GE expression
   57              | expression . OP_NE expression
   58              | expression . OP_LOR expression
   59              | expression . OP_LAND expression

    OP_GE    shift, and go to state 68
    OP_LE    shift, and go to state 69
    OP_EQ    shift, and go to state 70
    OP_NE    shift, and go to state 71
    OP_LAND  shift, and go to state 72
    OP_LOR   shift, and go to state 73
    '<'      shift, and go to state 81
    '>'      shift, and go to state 82

    $default  reduce using rule 51 (infix_expression)

    Conflict between rule 51 and token LS resolved as reduce (%left LS).
    Conflict between rule 51 and token OP_GE resolved as shift (RS < OP_GE).
    Conflict between rule 51 and token OP_LE resolved as shift (RS < OP_LE).
    Conflict between rule 51 and token OP_EQ resolved as shift (RS < OP_EQ).
    Conflict between rule 51 and token OP_NE resolved as shift (RS < OP_NE).
    Conflict between rule 51 and token OP_LAND resolved as shift (RS < OP_LAND).
    Conflict between rule 51 and token OP_LOR resolved as shift (RS < OP_LOR).
    Conflict between rule 51 and token RS resolved as reduce (%left RS).
    Conflict between rule 51 and token '+' resolved as reduce ('+' < RS).
    Conflict between rule 51 and token '-' resolved as reduce ('-' < RS).
    Conflict between rule 51 and token '*' resolved as reduce (%left '*').
    Conflict between rule 51 and token '/' resolved as reduce (%left '/').
    Conflict between rule 51 and token '%' resolved as reduce (%left '%').
    Conflict between rule 51 and token '&' resolved as reduce (%left '&').
    Conflict between rule 51 and token '<' resolved as shift (RS < '<').
    Conflict between rule 51 and token '>' resolved as shift (RS < '>').


state 97

   44 infix_expression: expression . '+' expression
   44                 | expression '+' expression .  ['+', '-', ')', ';', ',']
   45                 | expression . '-' expression
   46                 | expression . '*' expression
   47                 | expression . '/' expression
   48                 | expression . '%' expression
   49                 | expression . '&' expression
   50                 | expression . LS expression
   51                 | expression . RS expression
   52 if_expression: expression . '>' expression
   53              | expression . '<' expression
   54              | expression . OP_EQ expression
   55              | expression . OP_LE expression
   56              | expression . OP_GE expression
   57              | expression . OP_NE expression
   58              | expression . OP_LOR expression
   59              | expression . OP_LAND expression

    LS       shift, and go to state 67
    OP_GE    shift, and go to state 68
    OP_LE    shift, and go to state 69
    OP_EQ    shift, and go to state 70
    OP_NE    shift, and go to state 71
    OP_LAND  shift, and go to state 72
    OP_LOR   shift, and go to state 73
    RS       shift, and go to state 74
    '*'      shift, and go to state 77
    '/'      shift, and go to state 78
    '%'      shift, and go to state 79
    '&'      shift, and go to state 80
    '<'      shift, and go to state 81
    '>'      shift, and go to state 82

    $default  reduce using rule 44 (infix_expression)

    Conflict between rule 44 and token LS resolved as shift ('+' < LS).
    Conflict between rule 44 and token OP_GE resolved as shift ('+' < OP_GE).
    Conflict between rule 44 and token OP_LE resolved as shift ('+' < OP_LE).
    Conflict between rule 44 and token OP_EQ resolved as shift ('+' < OP_EQ).
    Conflict between rule 44 and token OP_NE resolved as shift ('+' < OP_NE).
    Conflict between rule 44 and token OP_LAND resolved as shift ('+' < OP_LAND).
    Conflict between rule 44 and token OP_LOR resolved as shift ('+' < OP_LOR).
    Conflict between rule 44 and token RS resolved as shift ('+' < RS).
    Conflict between rule 44 and token '+' resolved as reduce (%left '+').
    Conflict between rule 44 and token '-' resolved as reduce (%left '-').
    Conflict between rule 44 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 44 and token '/' resolved as shift ('+' < '/').
    Conflict between rule 44 and token '%' resolved as shift ('+' < '%').
    Conflict between rule 44 and token '&' resolved as shift ('+' < '&').
    Conflict between rule 44 and token '<' resolved as shift ('+' < '<').
    Conflict between rule 44 and token '>' resolved as shift ('+' < '>').


state 98

   44 infix_expression: expression . '+' expression
   45                 | expression . '-' expression
   45                 | expression '-' expression .  ['+', '-', ')', ';', ',']
   46                 | expression . '*' expression
   47                 | expression . '/' expression
   48                 | expression . '%' expression
   49                 | expression . '&' expression
   50                 | expression . LS expression
   51                 | expression . RS expression
   52 if_expression: expression . '>' expression
   53              | expression . '<' expression
   54              | expression . OP_EQ expression
   55              | expression . OP_LE expression
   56              | expression . OP_GE expression
   57              | expression . OP_NE expression
   58              | expression . OP_LOR expression
   59              | expression . OP_LAND expression

    LS       shift, and go to state 67
    OP_GE    shift, and go to state 68
    OP_LE    shift, and go to state 69
    OP_EQ    shift, and go to state 70
    OP_NE    shift, and go to state 71
    OP_LAND  shift, and go to state 72
    OP_LOR   shift, and go to state 73
    RS       shift, and go to state 74
    '*'      shift, and go to state 77
    '/'      shift, and go to state 78
    '%'      shift, and go to state 79
    '&'      shift, and go to state 80
    '<'      shift, and go to state 81
    '>'      shift, and go to state 82

    $default  reduce using rule 45 (infix_expression)

    Conflict between rule 45 and token LS resolved as shift ('-' < LS).
    Conflict between rule 45 and token OP_GE resolved as shift ('-' < OP_GE).
    Conflict between rule 45 and token OP_LE resolved as shift ('-' < OP_LE).
    Conflict between rule 45 and token OP_EQ resolved as shift ('-' < OP_EQ).
    Conflict between rule 45 and token OP_NE resolved as shift ('-' < OP_NE).
    Conflict between rule 45 and token OP_LAND resolved as shift ('-' < OP_LAND).
    Conflict between rule 45 and token OP_LOR resolved as shift ('-' < OP_LOR).
    Conflict between rule 45 and token RS resolved as shift ('-' < RS).
    Conflict between rule 45 and token '+' resolved as reduce (%left '+').
    Conflict between rule 45 and token '-' resolved as reduce (%left '-').
    Conflict between rule 45 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 45 and token '/' resolved as shift ('-' < '/').
    Conflict between rule 45 and token '%' resolved as shift ('-' < '%').
    Conflict between rule 45 and token '&' resolved as shift ('-' < '&').
    Conflict between rule 45 and token '<' resolved as shift ('-' < '<').
    Conflict between rule 45 and token '>' resolved as shift ('-' < '>').


state 99

   44 infix_expression: expression . '+' expression
   45                 | expression . '-' expression
   46                 | expression . '*' expression
   46                 | expression '*' expression .  [LS, RS, '+', '-', '*', '/', '%', '&', ')', ';', ',']
   47                 | expression . '/' expression
   48                 | expression . '%' expression
   49                 | expression . '&' expression
   50                 | expression . LS expression
   51                 | expression . RS expression
   52 if_expression: expression . '>' expression
   53              | expression . '<' expression
   54              | expression . OP_EQ expression
   55              | expression . OP_LE expression
   56              | expression . OP_GE expression
   57              | expression . OP_NE expression
   58              | expression . OP_LOR expression
   59              | expression . OP_LAND expression

    OP_GE    shift, and go to state 68
    OP_LE    shift, and go to state 69
    OP_EQ    shift, and go to state 70
    OP_NE    shift, and go to state 71
    OP_LAND  shift, and go to state 72
    OP_LOR   shift, and go to state 73
    '<'      shift, and go to state 81
    '>'      shift, and go to state 82

    $default  reduce using rule 46 (infix_expression)

    Conflict between rule 46 and token LS resolved as reduce (%left LS).
    Conflict between rule 46 and token OP_GE resolved as shift ('*' < OP_GE).
    Conflict between rule 46 and token OP_LE resolved as shift ('*' < OP_LE).
    Conflict between rule 46 and token OP_EQ resolved as shift ('*' < OP_EQ).
    Conflict between rule 46 and token OP_NE resolved as shift ('*' < OP_NE).
    Conflict between rule 46 and token OP_LAND resolved as shift ('*' < OP_LAND).
    Conflict between rule 46 and token OP_LOR resolved as shift ('*' < OP_LOR).
    Conflict between rule 46 and token RS resolved as reduce (%left RS).
    Conflict between rule 46 and token '+' resolved as reduce ('+' < '*').
    Conflict between rule 46 and token '-' resolved as reduce ('-' < '*').
    Conflict between rule 46 and token '*' resolved as reduce (%left '*').
    Conflict between rule 46 and token '/' resolved as reduce (%left '/').
    Conflict between rule 46 and token '%' resolved as reduce (%left '%').
    Conflict between rule 46 and token '&' resolved as reduce (%left '&').
    Conflict between rule 46 and token '<' resolved as shift ('*' < '<').
    Conflict between rule 46 and token '>' resolved as shift ('*' < '>').


state 100

   44 infix_expression: expression . '+' expression
   45                 | expression . '-' expression
   46                 | expression . '*' expression
   47                 | expression . '/' expression
   47                 | expression '/' expression .  [LS, RS, '+', '-', '*', '/', '%', '&', ')', ';', ',']
   48                 | expression . '%' expression
   49                 | expression . '&' expression
   50                 | expression . LS expression
   51                 | expression . RS expression
   52 if_expression: expression . '>' expression
   53              | expression . '<' expression
   54              | expression . OP_EQ expression
   55              | expression . OP_LE expression
   56              | expression . OP_GE expression
   57              | expression . OP_NE expression
   58              | expression . OP_LOR expression
   59              | expression . OP_LAND expression

    OP_GE    shift, and go to state 68
    OP_LE    shift, and go to state 69
    OP_EQ    shift, and go to state 70
    OP_NE    shift, and go to state 71
    OP_LAND  shift, and go to state 72
    OP_LOR   shift, and go to state 73
    '<'      shift, and go to state 81
    '>'      shift, and go to state 82

    $default  reduce using rule 47 (infix_expression)

    Conflict between rule 47 and token LS resolved as reduce (%left LS).
    Conflict between rule 47 and token OP_GE resolved as shift ('/' < OP_GE).
    Conflict between rule 47 and token OP_LE resolved as shift ('/' < OP_LE).
    Conflict between rule 47 and token OP_EQ resolved as shift ('/' < OP_EQ).
    Conflict between rule 47 and token OP_NE resolved as shift ('/' < OP_NE).
    Conflict between rule 47 and token OP_LAND resolved as shift ('/' < OP_LAND).
    Conflict between rule 47 and token OP_LOR resolved as shift ('/' < OP_LOR).
    Conflict between rule 47 and token RS resolved as reduce (%left RS).
    Conflict between rule 47 and token '+' resolved as reduce ('+' < '/').
    Conflict between rule 47 and token '-' resolved as reduce ('-' < '/').
    Conflict between rule 47 and token '*' resolved as reduce (%left '*').
    Conflict between rule 47 and token '/' resolved as reduce (%left '/').
    Conflict between rule 47 and token '%' resolved as reduce (%left '%').
    Conflict between rule 47 and token '&' resolved as reduce (%left '&').
    Conflict between rule 47 and token '<' resolved as shift ('/' < '<').
    Conflict between rule 47 and token '>' resolved as shift ('/' < '>').


state 101

   44 infix_expression: expression . '+' expression
   45                 | expression . '-' expression
   46                 | expression . '*' expression
   47                 | expression . '/' expression
   48                 | expression . '%' expression
   48                 | expression '%' expression .  [LS, RS, '+', '-', '*', '/', '%', '&', ')', ';', ',']
   49                 | expression . '&' expression
   50                 | expression . LS expression
   51                 | expression . RS expression
   52 if_expression: expression . '>' expression
   53              | expression . '<' expression
   54              | expression . OP_EQ expression
   55              | expression . OP_LE expression
   56              | expression . OP_GE expression
   57              | expression . OP_NE expression
   58              | expression . OP_LOR expression
   59              | expression . OP_LAND expression

    OP_GE    shift, and go to state 68
    OP_LE    shift, and go to state 69
    OP_EQ    shift, and go to state 70
    OP_NE    shift, and go to state 71
    OP_LAND  shift, and go to state 72
    OP_LOR   shift, and go to state 73
    '<'      shift, and go to state 81
    '>'      shift, and go to state 82

    $default  reduce using rule 48 (infix_expression)

    Conflict between rule 48 and token LS resolved as reduce (%left LS).
    Conflict between rule 48 and token OP_GE resolved as shift ('%' < OP_GE).
    Conflict between rule 48 and token OP_LE resolved as shift ('%' < OP_LE).
    Conflict between rule 48 and token OP_EQ resolved as shift ('%' < OP_EQ).
    Conflict between rule 48 and token OP_NE resolved as shift ('%' < OP_NE).
    Conflict between rule 48 and token OP_LAND resolved as shift ('%' < OP_LAND).
    Conflict between rule 48 and token OP_LOR resolved as shift ('%' < OP_LOR).
    Conflict between rule 48 and token RS resolved as reduce (%left RS).
    Conflict between rule 48 and token '+' resolved as reduce ('+' < '%').
    Conflict between rule 48 and token '-' resolved as reduce ('-' < '%').
    Conflict between rule 48 and token '*' resolved as reduce (%left '*').
    Conflict between rule 48 and token '/' resolved as reduce (%left '/').
    Conflict between rule 48 and token '%' resolved as reduce (%left '%').
    Conflict between rule 48 and token '&' resolved as reduce (%left '&').
    Conflict between rule 48 and token '<' resolved as shift ('%' < '<').
    Conflict between rule 48 and token '>' resolved as shift ('%' < '>').


state 102

   44 infix_expression: expression . '+' expression
   45                 | expression . '-' expression
   46                 | expression . '*' expression
   47                 | expression . '/' expression
   48                 | expression . '%' expression
   49                 | expression . '&' expression
   49                 | expression '&' expression .  [LS, RS, '+', '-', '*', '/', '%', '&', ')', ';', ',']
   50                 | expression . LS expression
   51                 | expression . RS expression
   52 if_expression: expression . '>' expression
   53              | expression . '<' expression
   54              | expression . OP_EQ expression
   55              | expression . OP_LE expression
   56              | expression . OP_GE expression
   57              | expression . OP_NE expression
   58              | expression . OP_LOR expression
   59              | expression . OP_LAND expression

    OP_GE    shift, and go to state 68
    OP_LE    shift, and go to state 69
    OP_EQ    shift, and go to state 70
    OP_NE    shift, and go to state 71
    OP_LAND  shift, and go to state 72
    OP_LOR   shift, and go to state 73
    '<'      shift, and go to state 81
    '>'      shift, and go to state 82

    $default  reduce using rule 49 (infix_expression)

    Conflict between rule 49 and token LS resolved as reduce (%left LS).
    Conflict between rule 49 and token OP_GE resolved as shift ('&' < OP_GE).
    Conflict between rule 49 and token OP_LE resolved as shift ('&' < OP_LE).
    Conflict between rule 49 and token OP_EQ resolved as shift ('&' < OP_EQ).
    Conflict between rule 49 and token OP_NE resolved as shift ('&' < OP_NE).
    Conflict between rule 49 and token OP_LAND resolved as shift ('&' < OP_LAND).
    Conflict between rule 49 and token OP_LOR resolved as shift ('&' < OP_LOR).
    Conflict between rule 49 and token RS resolved as reduce (%left RS).
    Conflict between rule 49 and token '+' resolved as reduce ('+' < '&').
    Conflict between rule 49 and token '-' resolved as reduce ('-' < '&').
    Conflict between rule 49 and token '*' resolved as reduce (%left '*').
    Conflict between rule 49 and token '/' resolved as reduce (%left '/').
    Conflict between rule 49 and token '%' resolved as reduce (%left '%').
    Conflict between rule 49 and token '&' resolved as reduce (%left '&').
    Conflict between rule 49 and token '<' resolved as shift ('&' < '<').
    Conflict between rule 49 and token '>' resolved as shift ('&' < '>').


state 103

   44 infix_expression: expression . '+' expression
   45                 | expression . '-' expression
   46                 | expression . '*' expression
   47                 | expression . '/' expression
   48                 | expression . '%' expression
   49                 | expression . '&' expression
   50                 | expression . LS expression
   51                 | expression . RS expression
   52 if_expression: expression . '>' expression
   53              | expression . '<' expression
   53              | expression '<' expression .  [LS, OP_GE, OP_LE, OP_EQ, OP_NE, OP_LAND, OP_LOR, RS, '+', '-', '*', '/', '%', '&', ')', '<', '>', ';', ',']
   54              | expression . OP_EQ expression
   55              | expression . OP_LE expression
   56              | expression . OP_GE expression
   57              | expression . OP_NE expression
   58              | expression . OP_LOR expression
   59              | expression . OP_LAND expression

    $default  reduce using rule 53 (if_expression)

    Conflict between rule 53 and token LS resolved as reduce (LS < '<').
    Conflict between rule 53 and token OP_GE resolved as reduce (%left OP_GE).
    Conflict between rule 53 and token OP_LE resolved as reduce (%left OP_LE).
    Conflict between rule 53 and token OP_EQ resolved as reduce (%left OP_EQ).
    Conflict between rule 53 and token OP_NE resolved as reduce (%left OP_NE).
    Conflict between rule 53 and token OP_LAND resolved as reduce (%left OP_LAND).
    Conflict between rule 53 and token OP_LOR resolved as reduce (%left OP_LOR).
    Conflict between rule 53 and token RS resolved as reduce (RS < '<').
    Conflict between rule 53 and token '+' resolved as reduce ('+' < '<').
    Conflict between rule 53 and token '-' resolved as reduce ('-' < '<').
    Conflict between rule 53 and token '*' resolved as reduce ('*' < '<').
    Conflict between rule 53 and token '/' resolved as reduce ('/' < '<').
    Conflict between rule 53 and token '%' resolved as reduce ('%' < '<').
    Conflict between rule 53 and token '&' resolved as reduce ('&' < '<').
    Conflict between rule 53 and token '<' resolved as reduce (%left '<').
    Conflict between rule 53 and token '>' resolved as reduce (%left '>').


state 104

   44 infix_expression: expression . '+' expression
   45                 | expression . '-' expression
   46                 | expression . '*' expression
   47                 | expression . '/' expression
   48                 | expression . '%' expression
   49                 | expression . '&' expression
   50                 | expression . LS expression
   51                 | expression . RS expression
   52 if_expression: expression . '>' expression
   52              | expression '>' expression .  [LS, OP_GE, OP_LE, OP_EQ, OP_NE, OP_LAND, OP_LOR, RS, '+', '-', '*', '/', '%', '&', ')', '<', '>', ';', ',']
   53              | expression . '<' expression
   54              | expression . OP_EQ expression
   55              | expression . OP_LE expression
   56              | expression . OP_GE expression
   57              | expression . OP_NE expression
   58              | expression . OP_LOR expression
   59              | expression . OP_LAND expression

    $default  reduce using rule 52 (if_expression)

    Conflict between rule 52 and token LS resolved as reduce (LS < '>').
    Conflict between rule 52 and token OP_GE resolved as reduce (%left OP_GE).
    Conflict between rule 52 and token OP_LE resolved as reduce (%left OP_LE).
    Conflict between rule 52 and token OP_EQ resolved as reduce (%left OP_EQ).
    Conflict between rule 52 and token OP_NE resolved as reduce (%left OP_NE).
    Conflict between rule 52 and token OP_LAND resolved as reduce (%left OP_LAND).
    Conflict between rule 52 and token OP_LOR resolved as reduce (%left OP_LOR).
    Conflict between rule 52 and token RS resolved as reduce (RS < '>').
    Conflict between rule 52 and token '+' resolved as reduce ('+' < '>').
    Conflict between rule 52 and token '-' resolved as reduce ('-' < '>').
    Conflict between rule 52 and token '*' resolved as reduce ('*' < '>').
    Conflict between rule 52 and token '/' resolved as reduce ('/' < '>').
    Conflict between rule 52 and token '%' resolved as reduce ('%' < '>').
    Conflict between rule 52 and token '&' resolved as reduce ('&' < '>').
    Conflict between rule 52 and token '<' resolved as reduce (%left '<').
    Conflict between rule 52 and token '>' resolved as reduce (%left '>').


state 105

   12 function: scope STATIC type ID '(' argument_list . ')' code
   67 argument_list: argument_list . ',' argument

    ')'  shift, and go to state 111
    ','  shift, and go to state 112


state 106

   66 argument_list: argument .

    $default  reduce using rule 66 (argument_list)


state 107

   68 argument: type . ID

    ID  shift, and go to state 113


state 108

    5 main: scope STATIC VOID MAIN '(' STRING '[' . ']' ARGS ')' code

    ']'  shift, and go to state 114


state 109

   43 function_call: ID '(' parameter_list ')' .

    $default  reduce using rule 43 (function_call)


state 110

   37 expression: . '(' expression ')'
   38           | . value
   39           | . function_call
   40           | . infix_expression
   41           | . if_expression
   42 function_call: . ID '(' ')'
   43              | . ID '(' parameter_list ')'
   44 infix_expression: . expression '+' expression
   45                 | . expression '-' expression
   46                 | . expression '*' expression
   47                 | . expression '/' expression
   48                 | . expression '%' expression
   49                 | . expression '&' expression
   50                 | . expression LS expression
   51                 | . expression RS expression
   52 if_expression: . expression '>' expression
   53              | . expression '<' expression
   54              | . expression OP_EQ expression
   55              | . expression OP_LE expression
   56              | . expression OP_GE expression
   57              | . expression OP_NE expression
   58              | . expression OP_LOR expression
   59              | . expression OP_LAND expression
   61 parameter_list: parameter_list ',' . expression
   94 value: . ID
   95      | . STRING_VAL
   96      | . NUMBER_VAL
   97      | . '+' NUMBER_VAL
   98      | . '-' NUMBER_VAL
   99      | . DOUBLE_VAL
  100      | . CHAR_VAL
  101      | . TRUE
  102      | . FALSE

    FALSE       shift, and go to state 45
    TRUE        shift, and go to state 46
    NUMBER_VAL  shift, and go to state 47
    DOUBLE_VAL  shift, and go to state 48
    STRING_VAL  shift, and go to state 49
    CHAR_VAL    shift, and go to state 50
    ID          shift, and go to state 51
    '+'         shift, and go to state 52
    '-'         shift, and go to state 53
    '('         shift, and go to state 54

    expression        go to state 115
    function_call     go to state 56
    infix_expression  go to state 57
    if_expression     go to state 58
    value             go to state 59


state 111

   12 function: scope STATIC type ID '(' argument_list ')' . code
   16 code: . '{' '}'
   17     | . '{' operation_list '}'

    '{'  shift, and go to state 116

    code  go to state 117


state 112

   67 argument_list: argument_list ',' . argument
   68 argument: . type ID
  103 type: . CHAR
  104     | . INT
  105     | . STRING
  106     | . BOOLEAN
  107     | . FLOAT
  108     | . VOID

    BOOLEAN  shift, and go to state 6
    CHAR     shift, and go to state 7
    FLOAT    shift, and go to state 8
    INT      shift, and go to state 9
    STRING   shift, and go to state 13
    VOID     shift, and go to state 14

    argument  go to state 118
    type      go to state 107


state 113

   68 argument: type ID .

    $default  reduce using rule 68 (argument)


state 114

    5 main: scope STATIC VOID MAIN '(' STRING '[' ']' . ARGS ')' code

    ARGS  shift, and go to state 119


state 115

   44 infix_expression: expression . '+' expression
   45                 | expression . '-' expression
   46                 | expression . '*' expression
   47                 | expression . '/' expression
   48                 | expression . '%' expression
   49                 | expression . '&' expression
   50                 | expression . LS expression
   51                 | expression . RS expression
   52 if_expression: expression . '>' expression
   53              | expression . '<' expression
   54              | expression . OP_EQ expression
   55              | expression . OP_LE expression
   56              | expression . OP_GE expression
   57              | expression . OP_NE expression
   58              | expression . OP_LOR expression
   59              | expression . OP_LAND expression
   61 parameter_list: parameter_list ',' expression .  [')', ',']

    LS       shift, and go to state 67
    OP_GE    shift, and go to state 68
    OP_LE    shift, and go to state 69
    OP_EQ    shift, and go to state 70
    OP_NE    shift, and go to state 71
    OP_LAND  shift, and go to state 72
    OP_LOR   shift, and go to state 73
    RS       shift, and go to state 74
    '+'      shift, and go to state 75
    '-'      shift, and go to state 76
    '*'      shift, and go to state 77
    '/'      shift, and go to state 78
    '%'      shift, and go to state 79
    '&'      shift, and go to state 80
    '<'      shift, and go to state 81
    '>'      shift, and go to state 82

    $default  reduce using rule 61 (parameter_list)


state 116

   16 code: '{' . '}'
   17     | '{' . operation_list '}'
   18 operation_list: . operation
   19               | . operation_list operation
   20 operation: . declaration ';'
   21          | . assignment ';'
   22          | . unary ';'
   23          | . if
   24          | . cycle
   25          | . control ';'
   26          | . function_call ';'
   27 declaration: . type var_list
   28 assignment: . ID assign_operator expression
   29 unary: . ID OP_INC
   30      | . OP_INC ID
   31      | . ID OP_DEC
   32      | . OP_DEC ID
   33 control: . BREAK
   34        | . CONTINUE
   35        | . RETURN
   36        | . RETURN expression
   42 function_call: . ID '(' ')'
   43              | . ID '(' parameter_list ')'
   69 cycle: . FOR '(' assignment ';' if_expression ';' increase_list ')' condition_code
   70      | . WHILE '(' if_expression ')' condition_code
   71      | . DO condition_code WHILE '(' if_expression ')' ';'
   72 if: . IF '(' expression ')' condition_code
   73   | . IF '(' expression ')' condition_code ELSE condition_code
   74   | . SWITCH '(' expression ')' '{' switch '}'
  103 type: . CHAR
  104     | . INT
  105     | . STRING
  106     | . BOOLEAN
  107     | . FLOAT
  108     | . VOID

    BOOLEAN   shift, and go to state 6
    BREAK     shift, and go to state 120
    CHAR      shift, and go to state 7
    CONTINUE  shift, and go to state 121
    DO        shift, and go to state 122
    FLOAT     shift, and go to state 8
    FOR       shift, and go to state 123
    IF        shift, and go to state 124
    INT       shift, and go to state 9
    OP_INC    shift, and go to state 125
    OP_DEC    shift, and go to state 126
    STRING    shift, and go to state 13
    SWITCH    shift, and go to state 127
    RETURN    shift, and go to state 128
    VOID      shift, and go to state 14
    WHILE     shift, and go to state 129
    ID        shift, and go to state 130
    '}'       shift, and go to state 131

    operation_list  go to state 132
    operation       go to state 133
    declaration     go to state 134
    assignment      go to state 135
    unary           go to state 136
    control         go to state 137
    function_call   go to state 138
    cycle           go to state 139
    if              go to state 140
    type            go to state 20


state 117

   12 function: scope STATIC type ID '(' argument_list ')' code .

    $default  reduce using rule 12 (function)


state 118

   67 argument_list: argument_list ',' argument .

    $default  reduce using rule 67 (argument_list)


state 119

    5 main: scope STATIC VOID MAIN '(' STRING '[' ']' ARGS . ')' code

    ')'  shift, and go to state 141


state 120

   33 control: BREAK .

    $default  reduce using rule 33 (control)


state 121

   34 control: CONTINUE .

    $default  reduce using rule 34 (control)


state 122

   20 operation: . declaration ';'
   21          | . assignment ';'
   22          | . unary ';'
   23          | . if
   24          | . cycle
   25          | . control ';'
   26          | . function_call ';'
   27 declaration: . type var_list
   28 assignment: . ID assign_operator expression
   29 unary: . ID OP_INC
   30      | . OP_INC ID
   31      | . ID OP_DEC
   32      | . OP_DEC ID
   33 control: . BREAK
   34        | . CONTINUE
   35        | . RETURN
   36        | . RETURN expression
   42 function_call: . ID '(' ')'
   43              | . ID '(' parameter_list ')'
   69 cycle: . FOR '(' assignment ';' if_expression ';' increase_list ')' condition_code
   70      | . WHILE '(' if_expression ')' condition_code
   71      | . DO condition_code WHILE '(' if_expression ')' ';'
   71      | DO . condition_code WHILE '(' if_expression ')' ';'
   72 if: . IF '(' expression ')' condition_code
   73   | . IF '(' expression ')' condition_code ELSE condition_code
   74   | . SWITCH '(' expression ')' '{' switch '}'
   79 condition_code: . '{' operation_list '}'
   80               | . operation
   81               | . ';'
   82               | . '{' '}'
  103 type: . CHAR
  104     | . INT
  105     | . STRING
  106     | . BOOLEAN
  107     | . FLOAT
  108     | . VOID

    BOOLEAN   shift, and go to state 6
    BREAK     shift, and go to state 120
    CHAR      shift, and go to state 7
    CONTINUE  shift, and go to state 121
    DO        shift, and go to state 122
    FLOAT     shift, and go to state 8
    FOR       shift, and go to state 123
    IF        shift, and go to state 124
    INT       shift, and go to state 9
    OP_INC    shift, and go to state 125
    OP_DEC    shift, and go to state 126
    STRING    shift, and go to state 13
    SWITCH    shift, and go to state 127
    RETURN    shift, and go to state 128
    VOID      shift, and go to state 14
    WHILE     shift, and go to state 129
    ID        shift, and go to state 130
    '{'       shift, and go to state 142
    ';'       shift, and go to state 143

    operation       go to state 144
    declaration     go to state 134
    assignment      go to state 135
    unary           go to state 136
    control         go to state 137
    function_call   go to state 138
    cycle           go to state 139
    if              go to state 140
    condition_code  go to state 145
    type            go to state 20


state 123

   69 cycle: FOR . '(' assignment ';' if_expression ';' increase_list ')' condition_code

    '('  shift, and go to state 146


state 124

   72 if: IF . '(' expression ')' condition_code
   73   | IF . '(' expression ')' condition_code ELSE condition_code

    '('  shift, and go to state 147


state 125

   30 unary: OP_INC . ID

    ID  shift, and go to state 148


state 126

   32 unary: OP_DEC . ID

    ID  shift, and go to state 149


state 127

   74 if: SWITCH . '(' expression ')' '{' switch '}'

    '('  shift, and go to state 150


state 128

   35 control: RETURN .  [';']
   36        | RETURN . expression
   37 expression: . '(' expression ')'
   38           | . value
   39           | . function_call
   40           | . infix_expression
   41           | . if_expression
   42 function_call: . ID '(' ')'
   43              | . ID '(' parameter_list ')'
   44 infix_expression: . expression '+' expression
   45                 | . expression '-' expression
   46                 | . expression '*' expression
   47                 | . expression '/' expression
   48                 | . expression '%' expression
   49                 | . expression '&' expression
   50                 | . expression LS expression
   51                 | . expression RS expression
   52 if_expression: . expression '>' expression
   53              | . expression '<' expression
   54              | . expression OP_EQ expression
   55              | . expression OP_LE expression
   56              | . expression OP_GE expression
   57              | . expression OP_NE expression
   58              | . expression OP_LOR expression
   59              | . expression OP_LAND expression
   94 value: . ID
   95      | . STRING_VAL
   96      | . NUMBER_VAL
   97      | . '+' NUMBER_VAL
   98      | . '-' NUMBER_VAL
   99      | . DOUBLE_VAL
  100      | . CHAR_VAL
  101      | . TRUE
  102      | . FALSE

    FALSE       shift, and go to state 45
    TRUE        shift, and go to state 46
    NUMBER_VAL  shift, and go to state 47
    DOUBLE_VAL  shift, and go to state 48
    STRING_VAL  shift, and go to state 49
    CHAR_VAL    shift, and go to state 50
    ID          shift, and go to state 51
    '+'         shift, and go to state 52
    '-'         shift, and go to state 53
    '('         shift, and go to state 54

    $default  reduce using rule 35 (control)

    expression        go to state 151
    function_call     go to state 56
    infix_expression  go to state 57
    if_expression     go to state 58
    value             go to state 59


state 129

   70 cycle: WHILE . '(' if_expression ')' condition_code

    '('  shift, and go to state 152


state 130

   28 assignment: ID . assign_operator expression
   29 unary: ID . OP_INC
   31      | ID . OP_DEC
   42 function_call: ID . '(' ')'
   43              | ID . '(' parameter_list ')'
   87 assign_operator: . '='
   88                | . ASS_ADD
   89                | . ASS_SUB
   90                | . ASS_MUL
   91                | . ASS_DIV
   92                | . ASS_PERC
   93                | . ASS_AND

    ASS_MUL   shift, and go to state 153
    ASS_DIV   shift, and go to state 154
    ASS_ADD   shift, and go to state 155
    ASS_SUB   shift, and go to state 156
    ASS_AND   shift, and go to state 157
    OP_INC    shift, and go to state 158
    OP_DEC    shift, and go to state 159
    '('       shift, and go to state 63
    '='       shift, and go to state 160
    ASS_PERC  shift, and go to state 161

    assign_operator  go to state 162


state 131

   16 code: '{' '}' .

    $default  reduce using rule 16 (code)


state 132

   17 code: '{' operation_list . '}'
   19 operation_list: operation_list . operation
   20 operation: . declaration ';'
   21          | . assignment ';'
   22          | . unary ';'
   23          | . if
   24          | . cycle
   25          | . control ';'
   26          | . function_call ';'
   27 declaration: . type var_list
   28 assignment: . ID assign_operator expression
   29 unary: . ID OP_INC
   30      | . OP_INC ID
   31      | . ID OP_DEC
   32      | . OP_DEC ID
   33 control: . BREAK
   34        | . CONTINUE
   35        | . RETURN
   36        | . RETURN expression
   42 function_call: . ID '(' ')'
   43              | . ID '(' parameter_list ')'
   69 cycle: . FOR '(' assignment ';' if_expression ';' increase_list ')' condition_code
   70      | . WHILE '(' if_expression ')' condition_code
   71      | . DO condition_code WHILE '(' if_expression ')' ';'
   72 if: . IF '(' expression ')' condition_code
   73   | . IF '(' expression ')' condition_code ELSE condition_code
   74   | . SWITCH '(' expression ')' '{' switch '}'
  103 type: . CHAR
  104     | . INT
  105     | . STRING
  106     | . BOOLEAN
  107     | . FLOAT
  108     | . VOID

    BOOLEAN   shift, and go to state 6
    BREAK     shift, and go to state 120
    CHAR      shift, and go to state 7
    CONTINUE  shift, and go to state 121
    DO        shift, and go to state 122
    FLOAT     shift, and go to state 8
    FOR       shift, and go to state 123
    IF        shift, and go to state 124
    INT       shift, and go to state 9
    OP_INC    shift, and go to state 125
    OP_DEC    shift, and go to state 126
    STRING    shift, and go to state 13
    SWITCH    shift, and go to state 127
    RETURN    shift, and go to state 128
    VOID      shift, and go to state 14
    WHILE     shift, and go to state 129
    ID        shift, and go to state 130
    '}'       shift, and go to state 163

    operation      go to state 164
    declaration    go to state 134
    assignment     go to state 135
    unary          go to state 136
    control        go to state 137
    function_call  go to state 138
    cycle          go to state 139
    if             go to state 140
    type           go to state 20


state 133

   18 operation_list: operation .

    $default  reduce using rule 18 (operation_list)


state 134

   20 operation: declaration . ';'

    ';'  shift, and go to state 165


state 135

   21 operation: assignment . ';'

    ';'  shift, and go to state 166


state 136

   22 operation: unary . ';'

    ';'  shift, and go to state 167


state 137

   25 operation: control . ';'

    ';'  shift, and go to state 168


state 138

   26 operation: function_call . ';'

    ';'  shift, and go to state 169


state 139

   24 operation: cycle .

    $default  reduce using rule 24 (operation)


state 140

   23 operation: if .

    $default  reduce using rule 23 (operation)


state 141

    5 main: scope STATIC VOID MAIN '(' STRING '[' ']' ARGS ')' . code
   16 code: . '{' '}'
   17     | . '{' operation_list '}'

    '{'  shift, and go to state 116

    code  go to state 170


state 142

   18 operation_list: . operation
   19               | . operation_list operation
   20 operation: . declaration ';'
   21          | . assignment ';'
   22          | . unary ';'
   23          | . if
   24          | . cycle
   25          | . control ';'
   26          | . function_call ';'
   27 declaration: . type var_list
   28 assignment: . ID assign_operator expression
   29 unary: . ID OP_INC
   30      | . OP_INC ID
   31      | . ID OP_DEC
   32      | . OP_DEC ID
   33 control: . BREAK
   34        | . CONTINUE
   35        | . RETURN
   36        | . RETURN expression
   42 function_call: . ID '(' ')'
   43              | . ID '(' parameter_list ')'
   69 cycle: . FOR '(' assignment ';' if_expression ';' increase_list ')' condition_code
   70      | . WHILE '(' if_expression ')' condition_code
   71      | . DO condition_code WHILE '(' if_expression ')' ';'
   72 if: . IF '(' expression ')' condition_code
   73   | . IF '(' expression ')' condition_code ELSE condition_code
   74   | . SWITCH '(' expression ')' '{' switch '}'
   79 condition_code: '{' . operation_list '}'
   82               | '{' . '}'
  103 type: . CHAR
  104     | . INT
  105     | . STRING
  106     | . BOOLEAN
  107     | . FLOAT
  108     | . VOID

    BOOLEAN   shift, and go to state 6
    BREAK     shift, and go to state 120
    CHAR      shift, and go to state 7
    CONTINUE  shift, and go to state 121
    DO        shift, and go to state 122
    FLOAT     shift, and go to state 8
    FOR       shift, and go to state 123
    IF        shift, and go to state 124
    INT       shift, and go to state 9
    OP_INC    shift, and go to state 125
    OP_DEC    shift, and go to state 126
    STRING    shift, and go to state 13
    SWITCH    shift, and go to state 127
    RETURN    shift, and go to state 128
    VOID      shift, and go to state 14
    WHILE     shift, and go to state 129
    ID        shift, and go to state 130
    '}'       shift, and go to state 171

    operation_list  go to state 172
    operation       go to state 133
    declaration     go to state 134
    assignment      go to state 135
    unary           go to state 136
    control         go to state 137
    function_call   go to state 138
    cycle           go to state 139
    if              go to state 140
    type            go to state 20


state 143

   81 condition_code: ';' .

    $default  reduce using rule 81 (condition_code)


state 144

   80 condition_code: operation .

    $default  reduce using rule 80 (condition_code)


state 145

   71 cycle: DO condition_code . WHILE '(' if_expression ')' ';'

    WHILE  shift, and go to state 173


state 146

   28 assignment: . ID assign_operator expression
   69 cycle: FOR '(' . assignment ';' if_expression ';' increase_list ')' condition_code

    ID  shift, and go to state 174

    assignment  go to state 175


state 147

   37 expression: . '(' expression ')'
   38           | . value
   39           | . function_call
   40           | . infix_expression
   41           | . if_expression
   42 function_call: . ID '(' ')'
   43              | . ID '(' parameter_list ')'
   44 infix_expression: . expression '+' expression
   45                 | . expression '-' expression
   46                 | . expression '*' expression
   47                 | . expression '/' expression
   48                 | . expression '%' expression
   49                 | . expression '&' expression
   50                 | . expression LS expression
   51                 | . expression RS expression
   52 if_expression: . expression '>' expression
   53              | . expression '<' expression
   54              | . expression OP_EQ expression
   55              | . expression OP_LE expression
   56              | . expression OP_GE expression
   57              | . expression OP_NE expression
   58              | . expression OP_LOR expression
   59              | . expression OP_LAND expression
   72 if: IF '(' . expression ')' condition_code
   73   | IF '(' . expression ')' condition_code ELSE condition_code
   94 value: . ID
   95      | . STRING_VAL
   96      | . NUMBER_VAL
   97      | . '+' NUMBER_VAL
   98      | . '-' NUMBER_VAL
   99      | . DOUBLE_VAL
  100      | . CHAR_VAL
  101      | . TRUE
  102      | . FALSE

    FALSE       shift, and go to state 45
    TRUE        shift, and go to state 46
    NUMBER_VAL  shift, and go to state 47
    DOUBLE_VAL  shift, and go to state 48
    STRING_VAL  shift, and go to state 49
    CHAR_VAL    shift, and go to state 50
    ID          shift, and go to state 51
    '+'         shift, and go to state 52
    '-'         shift, and go to state 53
    '('         shift, and go to state 54

    expression        go to state 176
    function_call     go to state 56
    infix_expression  go to state 57
    if_expression     go to state 58
    value             go to state 59


state 148

   30 unary: OP_INC ID .

    $default  reduce using rule 30 (unary)


state 149

   32 unary: OP_DEC ID .

    $default  reduce using rule 32 (unary)


state 150

   37 expression: . '(' expression ')'
   38           | . value
   39           | . function_call
   40           | . infix_expression
   41           | . if_expression
   42 function_call: . ID '(' ')'
   43              | . ID '(' parameter_list ')'
   44 infix_expression: . expression '+' expression
   45                 | . expression '-' expression
   46                 | . expression '*' expression
   47                 | . expression '/' expression
   48                 | . expression '%' expression
   49                 | . expression '&' expression
   50                 | . expression LS expression
   51                 | . expression RS expression
   52 if_expression: . expression '>' expression
   53              | . expression '<' expression
   54              | . expression OP_EQ expression
   55              | . expression OP_LE expression
   56              | . expression OP_GE expression
   57              | . expression OP_NE expression
   58              | . expression OP_LOR expression
   59              | . expression OP_LAND expression
   74 if: SWITCH '(' . expression ')' '{' switch '}'
   94 value: . ID
   95      | . STRING_VAL
   96      | . NUMBER_VAL
   97      | . '+' NUMBER_VAL
   98      | . '-' NUMBER_VAL
   99      | . DOUBLE_VAL
  100      | . CHAR_VAL
  101      | . TRUE
  102      | . FALSE

    FALSE       shift, and go to state 45
    TRUE        shift, and go to state 46
    NUMBER_VAL  shift, and go to state 47
    DOUBLE_VAL  shift, and go to state 48
    STRING_VAL  shift, and go to state 49
    CHAR_VAL    shift, and go to state 50
    ID          shift, and go to state 51
    '+'         shift, and go to state 52
    '-'         shift, and go to state 53
    '('         shift, and go to state 54

    expression        go to state 177
    function_call     go to state 56
    infix_expression  go to state 57
    if_expression     go to state 58
    value             go to state 59


state 151

   36 control: RETURN expression .  [';']
   44 infix_expression: expression . '+' expression
   45                 | expression . '-' expression
   46                 | expression . '*' expression
   47                 | expression . '/' expression
   48                 | expression . '%' expression
   49                 | expression . '&' expression
   50                 | expression . LS expression
   51                 | expression . RS expression
   52 if_expression: expression . '>' expression
   53              | expression . '<' expression
   54              | expression . OP_EQ expression
   55              | expression . OP_LE expression
   56              | expression . OP_GE expression
   57              | expression . OP_NE expression
   58              | expression . OP_LOR expression
   59              | expression . OP_LAND expression

    LS       shift, and go to state 67
    OP_GE    shift, and go to state 68
    OP_LE    shift, and go to state 69
    OP_EQ    shift, and go to state 70
    OP_NE    shift, and go to state 71
    OP_LAND  shift, and go to state 72
    OP_LOR   shift, and go to state 73
    RS       shift, and go to state 74
    '+'      shift, and go to state 75
    '-'      shift, and go to state 76
    '*'      shift, and go to state 77
    '/'      shift, and go to state 78
    '%'      shift, and go to state 79
    '&'      shift, and go to state 80
    '<'      shift, and go to state 81
    '>'      shift, and go to state 82

    $default  reduce using rule 36 (control)


state 152

   37 expression: . '(' expression ')'
   38           | . value
   39           | . function_call
   40           | . infix_expression
   41           | . if_expression
   42 function_call: . ID '(' ')'
   43              | . ID '(' parameter_list ')'
   44 infix_expression: . expression '+' expression
   45                 | . expression '-' expression
   46                 | . expression '*' expression
   47                 | . expression '/' expression
   48                 | . expression '%' expression
   49                 | . expression '&' expression
   50                 | . expression LS expression
   51                 | . expression RS expression
   52 if_expression: . expression '>' expression
   53              | . expression '<' expression
   54              | . expression OP_EQ expression
   55              | . expression OP_LE expression
   56              | . expression OP_GE expression
   57              | . expression OP_NE expression
   58              | . expression OP_LOR expression
   59              | . expression OP_LAND expression
   70 cycle: WHILE '(' . if_expression ')' condition_code
   94 value: . ID
   95      | . STRING_VAL
   96      | . NUMBER_VAL
   97      | . '+' NUMBER_VAL
   98      | . '-' NUMBER_VAL
   99      | . DOUBLE_VAL
  100      | . CHAR_VAL
  101      | . TRUE
  102      | . FALSE

    FALSE       shift, and go to state 45
    TRUE        shift, and go to state 46
    NUMBER_VAL  shift, and go to state 47
    DOUBLE_VAL  shift, and go to state 48
    STRING_VAL  shift, and go to state 49
    CHAR_VAL    shift, and go to state 50
    ID          shift, and go to state 51
    '+'         shift, and go to state 52
    '-'         shift, and go to state 53
    '('         shift, and go to state 54

    expression        go to state 178
    function_call     go to state 56
    infix_expression  go to state 57
    if_expression     go to state 179
    value             go to state 59


state 153

   90 assign_operator: ASS_MUL .

    $default  reduce using rule 90 (assign_operator)


state 154

   91 assign_operator: ASS_DIV .

    $default  reduce using rule 91 (assign_operator)


state 155

   88 assign_operator: ASS_ADD .

    $default  reduce using rule 88 (assign_operator)


state 156

   89 assign_operator: ASS_SUB .

    $default  reduce using rule 89 (assign_operator)


state 157

   93 assign_operator: ASS_AND .

    $default  reduce using rule 93 (assign_operator)


state 158

   29 unary: ID OP_INC .

    $default  reduce using rule 29 (unary)


state 159

   31 unary: ID OP_DEC .

    $default  reduce using rule 31 (unary)


state 160

   87 assign_operator: '=' .

    $default  reduce using rule 87 (assign_operator)


state 161

   92 assign_operator: ASS_PERC .

    $default  reduce using rule 92 (assign_operator)


state 162

   28 assignment: ID assign_operator . expression
   37 expression: . '(' expression ')'
   38           | . value
   39           | . function_call
   40           | . infix_expression
   41           | . if_expression
   42 function_call: . ID '(' ')'
   43              | . ID '(' parameter_list ')'
   44 infix_expression: . expression '+' expression
   45                 | . expression '-' expression
   46                 | . expression '*' expression
   47                 | . expression '/' expression
   48                 | . expression '%' expression
   49                 | . expression '&' expression
   50                 | . expression LS expression
   51                 | . expression RS expression
   52 if_expression: . expression '>' expression
   53              | . expression '<' expression
   54              | . expression OP_EQ expression
   55              | . expression OP_LE expression
   56              | . expression OP_GE expression
   57              | . expression OP_NE expression
   58              | . expression OP_LOR expression
   59              | . expression OP_LAND expression
   94 value: . ID
   95      | . STRING_VAL
   96      | . NUMBER_VAL
   97      | . '+' NUMBER_VAL
   98      | . '-' NUMBER_VAL
   99      | . DOUBLE_VAL
  100      | . CHAR_VAL
  101      | . TRUE
  102      | . FALSE

    FALSE       shift, and go to state 45
    TRUE        shift, and go to state 46
    NUMBER_VAL  shift, and go to state 47
    DOUBLE_VAL  shift, and go to state 48
    STRING_VAL  shift, and go to state 49
    CHAR_VAL    shift, and go to state 50
    ID          shift, and go to state 51
    '+'         shift, and go to state 52
    '-'         shift, and go to state 53
    '('         shift, and go to state 54

    expression        go to state 180
    function_call     go to state 56
    infix_expression  go to state 57
    if_expression     go to state 58
    value             go to state 59


state 163

   17 code: '{' operation_list '}' .

    $default  reduce using rule 17 (code)


state 164

   19 operation_list: operation_list operation .

    $default  reduce using rule 19 (operation_list)


state 165

   20 operation: declaration ';' .

    $default  reduce using rule 20 (operation)


state 166

   21 operation: assignment ';' .

    $default  reduce using rule 21 (operation)


state 167

   22 operation: unary ';' .

    $default  reduce using rule 22 (operation)


state 168

   25 operation: control ';' .

    $default  reduce using rule 25 (operation)


state 169

   26 operation: function_call ';' .

    $default  reduce using rule 26 (operation)


state 170

    5 main: scope STATIC VOID MAIN '(' STRING '[' ']' ARGS ')' code .

    $default  reduce using rule 5 (main)


state 171

   82 condition_code: '{' '}' .

    $default  reduce using rule 82 (condition_code)


state 172

   19 operation_list: operation_list . operation
   20 operation: . declaration ';'
   21          | . assignment ';'
   22          | . unary ';'
   23          | . if
   24          | . cycle
   25          | . control ';'
   26          | . function_call ';'
   27 declaration: . type var_list
   28 assignment: . ID assign_operator expression
   29 unary: . ID OP_INC
   30      | . OP_INC ID
   31      | . ID OP_DEC
   32      | . OP_DEC ID
   33 control: . BREAK
   34        | . CONTINUE
   35        | . RETURN
   36        | . RETURN expression
   42 function_call: . ID '(' ')'
   43              | . ID '(' parameter_list ')'
   69 cycle: . FOR '(' assignment ';' if_expression ';' increase_list ')' condition_code
   70      | . WHILE '(' if_expression ')' condition_code
   71      | . DO condition_code WHILE '(' if_expression ')' ';'
   72 if: . IF '(' expression ')' condition_code
   73   | . IF '(' expression ')' condition_code ELSE condition_code
   74   | . SWITCH '(' expression ')' '{' switch '}'
   79 condition_code: '{' operation_list . '}'
  103 type: . CHAR
  104     | . INT
  105     | . STRING
  106     | . BOOLEAN
  107     | . FLOAT
  108     | . VOID

    BOOLEAN   shift, and go to state 6
    BREAK     shift, and go to state 120
    CHAR      shift, and go to state 7
    CONTINUE  shift, and go to state 121
    DO        shift, and go to state 122
    FLOAT     shift, and go to state 8
    FOR       shift, and go to state 123
    IF        shift, and go to state 124
    INT       shift, and go to state 9
    OP_INC    shift, and go to state 125
    OP_DEC    shift, and go to state 126
    STRING    shift, and go to state 13
    SWITCH    shift, and go to state 127
    RETURN    shift, and go to state 128
    VOID      shift, and go to state 14
    WHILE     shift, and go to state 129
    ID        shift, and go to state 130
    '}'       shift, and go to state 181

    operation      go to state 164
    declaration    go to state 134
    assignment     go to state 135
    unary          go to state 136
    control        go to state 137
    function_call  go to state 138
    cycle          go to state 139
    if             go to state 140
    type           go to state 20


state 173

   71 cycle: DO condition_code WHILE . '(' if_expression ')' ';'

    '('  shift, and go to state 182


state 174

   28 assignment: ID . assign_operator expression
   87 assign_operator: . '='
   88                | . ASS_ADD
   89                | . ASS_SUB
   90                | . ASS_MUL
   91                | . ASS_DIV
   92                | . ASS_PERC
   93                | . ASS_AND

    ASS_MUL   shift, and go to state 153
    ASS_DIV   shift, and go to state 154
    ASS_ADD   shift, and go to state 155
    ASS_SUB   shift, and go to state 156
    ASS_AND   shift, and go to state 157
    '='       shift, and go to state 160
    ASS_PERC  shift, and go to state 161

    assign_operator  go to state 162


state 175

   69 cycle: FOR '(' assignment . ';' if_expression ';' increase_list ')' condition_code

    ';'  shift, and go to state 183


state 176

   44 infix_expression: expression . '+' expression
   45                 | expression . '-' expression
   46                 | expression . '*' expression
   47                 | expression . '/' expression
   48                 | expression . '%' expression
   49                 | expression . '&' expression
   50                 | expression . LS expression
   51                 | expression . RS expression
   52 if_expression: expression . '>' expression
   53              | expression . '<' expression
   54              | expression . OP_EQ expression
   55              | expression . OP_LE expression
   56              | expression . OP_GE expression
   57              | expression . OP_NE expression
   58              | expression . OP_LOR expression
   59              | expression . OP_LAND expression
   72 if: IF '(' expression . ')' condition_code
   73   | IF '(' expression . ')' condition_code ELSE condition_code

    LS       shift, and go to state 67
    OP_GE    shift, and go to state 68
    OP_LE    shift, and go to state 69
    OP_EQ    shift, and go to state 70
    OP_NE    shift, and go to state 71
    OP_LAND  shift, and go to state 72
    OP_LOR   shift, and go to state 73
    RS       shift, and go to state 74
    '+'      shift, and go to state 75
    '-'      shift, and go to state 76
    '*'      shift, and go to state 77
    '/'      shift, and go to state 78
    '%'      shift, and go to state 79
    '&'      shift, and go to state 80
    ')'      shift, and go to state 184
    '<'      shift, and go to state 81
    '>'      shift, and go to state 82


state 177

   44 infix_expression: expression . '+' expression
   45                 | expression . '-' expression
   46                 | expression . '*' expression
   47                 | expression . '/' expression
   48                 | expression . '%' expression
   49                 | expression . '&' expression
   50                 | expression . LS expression
   51                 | expression . RS expression
   52 if_expression: expression . '>' expression
   53              | expression . '<' expression
   54              | expression . OP_EQ expression
   55              | expression . OP_LE expression
   56              | expression . OP_GE expression
   57              | expression . OP_NE expression
   58              | expression . OP_LOR expression
   59              | expression . OP_LAND expression
   74 if: SWITCH '(' expression . ')' '{' switch '}'

    LS       shift, and go to state 67
    OP_GE    shift, and go to state 68
    OP_LE    shift, and go to state 69
    OP_EQ    shift, and go to state 70
    OP_NE    shift, and go to state 71
    OP_LAND  shift, and go to state 72
    OP_LOR   shift, and go to state 73
    RS       shift, and go to state 74
    '+'      shift, and go to state 75
    '-'      shift, and go to state 76
    '*'      shift, and go to state 77
    '/'      shift, and go to state 78
    '%'      shift, and go to state 79
    '&'      shift, and go to state 80
    ')'      shift, and go to state 185
    '<'      shift, and go to state 81
    '>'      shift, and go to state 82


state 178

   44 infix_expression: expression . '+' expression
   45                 | expression . '-' expression
   46                 | expression . '*' expression
   47                 | expression . '/' expression
   48                 | expression . '%' expression
   49                 | expression . '&' expression
   50                 | expression . LS expression
   51                 | expression . RS expression
   52 if_expression: expression . '>' expression
   53              | expression . '<' expression
   54              | expression . OP_EQ expression
   55              | expression . OP_LE expression
   56              | expression . OP_GE expression
   57              | expression . OP_NE expression
   58              | expression . OP_LOR expression
   59              | expression . OP_LAND expression

    LS       shift, and go to state 67
    OP_GE    shift, and go to state 68
    OP_LE    shift, and go to state 69
    OP_EQ    shift, and go to state 70
    OP_NE    shift, and go to state 71
    OP_LAND  shift, and go to state 72
    OP_LOR   shift, and go to state 73
    RS       shift, and go to state 74
    '+'      shift, and go to state 75
    '-'      shift, and go to state 76
    '*'      shift, and go to state 77
    '/'      shift, and go to state 78
    '%'      shift, and go to state 79
    '&'      shift, and go to state 80
    '<'      shift, and go to state 81
    '>'      shift, and go to state 82


state 179

   41 expression: if_expression .  [LS, OP_GE, OP_LE, OP_EQ, OP_NE, OP_LAND, OP_LOR, RS, '+', '-', '*', '/', '%', '&', '<', '>']
   70 cycle: WHILE '(' if_expression . ')' condition_code

    ')'  shift, and go to state 186

    $default  reduce using rule 41 (expression)


state 180

   28 assignment: ID assign_operator expression .  [')', ';', ',']
   44 infix_expression: expression . '+' expression
   45                 | expression . '-' expression
   46                 | expression . '*' expression
   47                 | expression . '/' expression
   48                 | expression . '%' expression
   49                 | expression . '&' expression
   50                 | expression . LS expression
   51                 | expression . RS expression
   52 if_expression: expression . '>' expression
   53              | expression . '<' expression
   54              | expression . OP_EQ expression
   55              | expression . OP_LE expression
   56              | expression . OP_GE expression
   57              | expression . OP_NE expression
   58              | expression . OP_LOR expression
   59              | expression . OP_LAND expression

    LS       shift, and go to state 67
    OP_GE    shift, and go to state 68
    OP_LE    shift, and go to state 69
    OP_EQ    shift, and go to state 70
    OP_NE    shift, and go to state 71
    OP_LAND  shift, and go to state 72
    OP_LOR   shift, and go to state 73
    RS       shift, and go to state 74
    '+'      shift, and go to state 75
    '-'      shift, and go to state 76
    '*'      shift, and go to state 77
    '/'      shift, and go to state 78
    '%'      shift, and go to state 79
    '&'      shift, and go to state 80
    '<'      shift, and go to state 81
    '>'      shift, and go to state 82

    $default  reduce using rule 28 (assignment)


state 181

   79 condition_code: '{' operation_list '}' .

    $default  reduce using rule 79 (condition_code)


state 182

   37 expression: . '(' expression ')'
   38           | . value
   39           | . function_call
   40           | . infix_expression
   41           | . if_expression
   42 function_call: . ID '(' ')'
   43              | . ID '(' parameter_list ')'
   44 infix_expression: . expression '+' expression
   45                 | . expression '-' expression
   46                 | . expression '*' expression
   47                 | . expression '/' expression
   48                 | . expression '%' expression
   49                 | . expression '&' expression
   50                 | . expression LS expression
   51                 | . expression RS expression
   52 if_expression: . expression '>' expression
   53              | . expression '<' expression
   54              | . expression OP_EQ expression
   55              | . expression OP_LE expression
   56              | . expression OP_GE expression
   57              | . expression OP_NE expression
   58              | . expression OP_LOR expression
   59              | . expression OP_LAND expression
   71 cycle: DO condition_code WHILE '(' . if_expression ')' ';'
   94 value: . ID
   95      | . STRING_VAL
   96      | . NUMBER_VAL
   97      | . '+' NUMBER_VAL
   98      | . '-' NUMBER_VAL
   99      | . DOUBLE_VAL
  100      | . CHAR_VAL
  101      | . TRUE
  102      | . FALSE

    FALSE       shift, and go to state 45
    TRUE        shift, and go to state 46
    NUMBER_VAL  shift, and go to state 47
    DOUBLE_VAL  shift, and go to state 48
    STRING_VAL  shift, and go to state 49
    CHAR_VAL    shift, and go to state 50
    ID          shift, and go to state 51
    '+'         shift, and go to state 52
    '-'         shift, and go to state 53
    '('         shift, and go to state 54

    expression        go to state 178
    function_call     go to state 56
    infix_expression  go to state 57
    if_expression     go to state 187
    value             go to state 59


state 183

   37 expression: . '(' expression ')'
   38           | . value
   39           | . function_call
   40           | . infix_expression
   41           | . if_expression
   42 function_call: . ID '(' ')'
   43              | . ID '(' parameter_list ')'
   44 infix_expression: . expression '+' expression
   45                 | . expression '-' expression
   46                 | . expression '*' expression
   47                 | . expression '/' expression
   48                 | . expression '%' expression
   49                 | . expression '&' expression
   50                 | . expression LS expression
   51                 | . expression RS expression
   52 if_expression: . expression '>' expression
   53              | . expression '<' expression
   54              | . expression OP_EQ expression
   55              | . expression OP_LE expression
   56              | . expression OP_GE expression
   57              | . expression OP_NE expression
   58              | . expression OP_LOR expression
   59              | . expression OP_LAND expression
   69 cycle: FOR '(' assignment ';' . if_expression ';' increase_list ')' condition_code
   94 value: . ID
   95      | . STRING_VAL
   96      | . NUMBER_VAL
   97      | . '+' NUMBER_VAL
   98      | . '-' NUMBER_VAL
   99      | . DOUBLE_VAL
  100      | . CHAR_VAL
  101      | . TRUE
  102      | . FALSE

    FALSE       shift, and go to state 45
    TRUE        shift, and go to state 46
    NUMBER_VAL  shift, and go to state 47
    DOUBLE_VAL  shift, and go to state 48
    STRING_VAL  shift, and go to state 49
    CHAR_VAL    shift, and go to state 50
    ID          shift, and go to state 51
    '+'         shift, and go to state 52
    '-'         shift, and go to state 53
    '('         shift, and go to state 54

    expression        go to state 178
    function_call     go to state 56
    infix_expression  go to state 57
    if_expression     go to state 188
    value             go to state 59


state 184

   20 operation: . declaration ';'
   21          | . assignment ';'
   22          | . unary ';'
   23          | . if
   24          | . cycle
   25          | . control ';'
   26          | . function_call ';'
   27 declaration: . type var_list
   28 assignment: . ID assign_operator expression
   29 unary: . ID OP_INC
   30      | . OP_INC ID
   31      | . ID OP_DEC
   32      | . OP_DEC ID
   33 control: . BREAK
   34        | . CONTINUE
   35        | . RETURN
   36        | . RETURN expression
   42 function_call: . ID '(' ')'
   43              | . ID '(' parameter_list ')'
   69 cycle: . FOR '(' assignment ';' if_expression ';' increase_list ')' condition_code
   70      | . WHILE '(' if_expression ')' condition_code
   71      | . DO condition_code WHILE '(' if_expression ')' ';'
   72 if: . IF '(' expression ')' condition_code
   72   | IF '(' expression ')' . condition_code
   73   | . IF '(' expression ')' condition_code ELSE condition_code
   73   | IF '(' expression ')' . condition_code ELSE condition_code
   74   | . SWITCH '(' expression ')' '{' switch '}'
   79 condition_code: . '{' operation_list '}'
   80               | . operation
   81               | . ';'
   82               | . '{' '}'
  103 type: . CHAR
  104     | . INT
  105     | . STRING
  106     | . BOOLEAN
  107     | . FLOAT
  108     | . VOID

    BOOLEAN   shift, and go to state 6
    BREAK     shift, and go to state 120
    CHAR      shift, and go to state 7
    CONTINUE  shift, and go to state 121
    DO        shift, and go to state 122
    FLOAT     shift, and go to state 8
    FOR       shift, and go to state 123
    IF        shift, and go to state 124
    INT       shift, and go to state 9
    OP_INC    shift, and go to state 125
    OP_DEC    shift, and go to state 126
    STRING    shift, and go to state 13
    SWITCH    shift, and go to state 127
    RETURN    shift, and go to state 128
    VOID      shift, and go to state 14
    WHILE     shift, and go to state 129
    ID        shift, and go to state 130
    '{'       shift, and go to state 142
    ';'       shift, and go to state 143

    operation       go to state 144
    declaration     go to state 134
    assignment      go to state 135
    unary           go to state 136
    control         go to state 137
    function_call   go to state 138
    cycle           go to state 139
    if              go to state 140
    condition_code  go to state 189
    type            go to state 20


state 185

   74 if: SWITCH '(' expression ')' . '{' switch '}'

    '{'  shift, and go to state 190


state 186

   20 operation: . declaration ';'
   21          | . assignment ';'
   22          | . unary ';'
   23          | . if
   24          | . cycle
   25          | . control ';'
   26          | . function_call ';'
   27 declaration: . type var_list
   28 assignment: . ID assign_operator expression
   29 unary: . ID OP_INC
   30      | . OP_INC ID
   31      | . ID OP_DEC
   32      | . OP_DEC ID
   33 control: . BREAK
   34        | . CONTINUE
   35        | . RETURN
   36        | . RETURN expression
   42 function_call: . ID '(' ')'
   43              | . ID '(' parameter_list ')'
   69 cycle: . FOR '(' assignment ';' if_expression ';' increase_list ')' condition_code
   70      | . WHILE '(' if_expression ')' condition_code
   70      | WHILE '(' if_expression ')' . condition_code
   71      | . DO condition_code WHILE '(' if_expression ')' ';'
   72 if: . IF '(' expression ')' condition_code
   73   | . IF '(' expression ')' condition_code ELSE condition_code
   74   | . SWITCH '(' expression ')' '{' switch '}'
   79 condition_code: . '{' operation_list '}'
   80               | . operation
   81               | . ';'
   82               | . '{' '}'
  103 type: . CHAR
  104     | . INT
  105     | . STRING
  106     | . BOOLEAN
  107     | . FLOAT
  108     | . VOID

    BOOLEAN   shift, and go to state 6
    BREAK     shift, and go to state 120
    CHAR      shift, and go to state 7
    CONTINUE  shift, and go to state 121
    DO        shift, and go to state 122
    FLOAT     shift, and go to state 8
    FOR       shift, and go to state 123
    IF        shift, and go to state 124
    INT       shift, and go to state 9
    OP_INC    shift, and go to state 125
    OP_DEC    shift, and go to state 126
    STRING    shift, and go to state 13
    SWITCH    shift, and go to state 127
    RETURN    shift, and go to state 128
    VOID      shift, and go to state 14
    WHILE     shift, and go to state 129
    ID        shift, and go to state 130
    '{'       shift, and go to state 142
    ';'       shift, and go to state 143

    operation       go to state 144
    declaration     go to state 134
    assignment      go to state 135
    unary           go to state 136
    control         go to state 137
    function_call   go to state 138
    cycle           go to state 139
    if              go to state 140
    condition_code  go to state 191
    type            go to state 20


state 187

   41 expression: if_expression .  [LS, OP_GE, OP_LE, OP_EQ, OP_NE, OP_LAND, OP_LOR, RS, '+', '-', '*', '/', '%', '&', '<', '>']
   71 cycle: DO condition_code WHILE '(' if_expression . ')' ';'

    ')'  shift, and go to state 192

    $default  reduce using rule 41 (expression)


state 188

   41 expression: if_expression .  [LS, OP_GE, OP_LE, OP_EQ, OP_NE, OP_LAND, OP_LOR, RS, '+', '-', '*', '/', '%', '&', '<', '>']
   69 cycle: FOR '(' assignment ';' if_expression . ';' increase_list ')' condition_code

    ';'  shift, and go to state 193

    $default  reduce using rule 41 (expression)


state 189

   72 if: IF '(' expression ')' condition_code .  [BOOLEAN, BREAK, CASE, CHAR, CONTINUE, DEFAULT, DO, FLOAT, FOR, IF, INT, OP_INC, OP_DEC, STRING, SWITCH, RETURN, VOID, WHILE, ID, '}']
   73   | IF '(' expression ')' condition_code . ELSE condition_code

    ELSE  shift, and go to state 194

    $default  reduce using rule 72 (if)

    Conflict between rule 72 and token ELSE resolved as shift (IFPREC < ELSE).


state 190

   74 if: SWITCH '(' expression ')' '{' . switch '}'
   83 switch: . CASE value ':' operation_list switch
   84       | . DEFAULT ':' operation_list switch
   85       | . CASE value ':' operation_list
   86       | . DEFAULT ':' operation_list

    CASE     shift, and go to state 195
    DEFAULT  shift, and go to state 196

    switch  go to state 197


state 191

   70 cycle: WHILE '(' if_expression ')' condition_code .

    $default  reduce using rule 70 (cycle)


state 192

   71 cycle: DO condition_code WHILE '(' if_expression ')' . ';'

    ';'  shift, and go to state 198


state 193

   28 assignment: . ID assign_operator expression
   29 unary: . ID OP_INC
   30      | . OP_INC ID
   31      | . ID OP_DEC
   32      | . OP_DEC ID
   69 cycle: FOR '(' assignment ';' if_expression ';' . increase_list ')' condition_code
   75 increase_list: . increase
   76              | . increase_list ',' increase
   77 increase: . assignment
   78         | . unary

    OP_INC  shift, and go to state 125
    OP_DEC  shift, and go to state 126
    ID      shift, and go to state 199

    assignment     go to state 200
    unary          go to state 201
    increase_list  go to state 202
    increase       go to state 203


state 194

   20 operation: . declaration ';'
   21          | . assignment ';'
   22          | . unary ';'
   23          | . if
   24          | . cycle
   25          | . control ';'
   26          | . function_call ';'
   27 declaration: . type var_list
   28 assignment: . ID assign_operator expression
   29 unary: . ID OP_INC
   30      | . OP_INC ID
   31      | . ID OP_DEC
   32      | . OP_DEC ID
   33 control: . BREAK
   34        | . CONTINUE
   35        | . RETURN
   36        | . RETURN expression
   42 function_call: . ID '(' ')'
   43              | . ID '(' parameter_list ')'
   69 cycle: . FOR '(' assignment ';' if_expression ';' increase_list ')' condition_code
   70      | . WHILE '(' if_expression ')' condition_code
   71      | . DO condition_code WHILE '(' if_expression ')' ';'
   72 if: . IF '(' expression ')' condition_code
   73   | . IF '(' expression ')' condition_code ELSE condition_code
   73   | IF '(' expression ')' condition_code ELSE . condition_code
   74   | . SWITCH '(' expression ')' '{' switch '}'
   79 condition_code: . '{' operation_list '}'
   80               | . operation
   81               | . ';'
   82               | . '{' '}'
  103 type: . CHAR
  104     | . INT
  105     | . STRING
  106     | . BOOLEAN
  107     | . FLOAT
  108     | . VOID

    BOOLEAN   shift, and go to state 6
    BREAK     shift, and go to state 120
    CHAR      shift, and go to state 7
    CONTINUE  shift, and go to state 121
    DO        shift, and go to state 122
    FLOAT     shift, and go to state 8
    FOR       shift, and go to state 123
    IF        shift, and go to state 124
    INT       shift, and go to state 9
    OP_INC    shift, and go to state 125
    OP_DEC    shift, and go to state 126
    STRING    shift, and go to state 13
    SWITCH    shift, and go to state 127
    RETURN    shift, and go to state 128
    VOID      shift, and go to state 14
    WHILE     shift, and go to state 129
    ID        shift, and go to state 130
    '{'       shift, and go to state 142
    ';'       shift, and go to state 143

    operation       go to state 144
    declaration     go to state 134
    assignment      go to state 135
    unary           go to state 136
    control         go to state 137
    function_call   go to state 138
    cycle           go to state 139
    if              go to state 140
    condition_code  go to state 204
    type            go to state 20


state 195

   83 switch: CASE . value ':' operation_list switch
   85       | CASE . value ':' operation_list
   94 value: . ID
   95      | . STRING_VAL
   96      | . NUMBER_VAL
   97      | . '+' NUMBER_VAL
   98      | . '-' NUMBER_VAL
   99      | . DOUBLE_VAL
  100      | . CHAR_VAL
  101      | . TRUE
  102      | . FALSE

    FALSE       shift, and go to state 45
    TRUE        shift, and go to state 46
    NUMBER_VAL  shift, and go to state 47
    DOUBLE_VAL  shift, and go to state 48
    STRING_VAL  shift, and go to state 49
    CHAR_VAL    shift, and go to state 50
    ID          shift, and go to state 205
    '+'         shift, and go to state 52
    '-'         shift, and go to state 53

    value  go to state 206


state 196

   84 switch: DEFAULT . ':' operation_list switch
   86       | DEFAULT . ':' operation_list

    ':'  shift, and go to state 207


state 197

   74 if: SWITCH '(' expression ')' '{' switch . '}'

    '}'  shift, and go to state 208


state 198

   71 cycle: DO condition_code WHILE '(' if_expression ')' ';' .

    $default  reduce using rule 71 (cycle)


state 199

   28 assignment: ID . assign_operator expression
   29 unary: ID . OP_INC
   31      | ID . OP_DEC
   87 assign_operator: . '='
   88                | . ASS_ADD
   89                | . ASS_SUB
   90                | . ASS_MUL
   91                | . ASS_DIV
   92                | . ASS_PERC
   93                | . ASS_AND

    ASS_MUL   shift, and go to state 153
    ASS_DIV   shift, and go to state 154
    ASS_ADD   shift, and go to state 155
    ASS_SUB   shift, and go to state 156
    ASS_AND   shift, and go to state 157
    OP_INC    shift, and go to state 158
    OP_DEC    shift, and go to state 159
    '='       shift, and go to state 160
    ASS_PERC  shift, and go to state 161

    assign_operator  go to state 162


state 200

   77 increase: assignment .

    $default  reduce using rule 77 (increase)


state 201

   78 increase: unary .

    $default  reduce using rule 78 (increase)


state 202

   69 cycle: FOR '(' assignment ';' if_expression ';' increase_list . ')' condition_code
   76 increase_list: increase_list . ',' increase

    ')'  shift, and go to state 209
    ','  shift, and go to state 210


state 203

   75 increase_list: increase .

    $default  reduce using rule 75 (increase_list)


state 204

   73 if: IF '(' expression ')' condition_code ELSE condition_code .

    $default  reduce using rule 73 (if)


state 205

   94 value: ID .

    $default  reduce using rule 94 (value)


state 206

   83 switch: CASE value . ':' operation_list switch
   85       | CASE value . ':' operation_list

    ':'  shift, and go to state 211


state 207

   18 operation_list: . operation
   19               | . operation_list operation
   20 operation: . declaration ';'
   21          | . assignment ';'
   22          | . unary ';'
   23          | . if
   24          | . cycle
   25          | . control ';'
   26          | . function_call ';'
   27 declaration: . type var_list
   28 assignment: . ID assign_operator expression
   29 unary: . ID OP_INC
   30      | . OP_INC ID
   31      | . ID OP_DEC
   32      | . OP_DEC ID
   33 control: . BREAK
   34        | . CONTINUE
   35        | . RETURN
   36        | . RETURN expression
   42 function_call: . ID '(' ')'
   43              | . ID '(' parameter_list ')'
   69 cycle: . FOR '(' assignment ';' if_expression ';' increase_list ')' condition_code
   70      | . WHILE '(' if_expression ')' condition_code
   71      | . DO condition_code WHILE '(' if_expression ')' ';'
   72 if: . IF '(' expression ')' condition_code
   73   | . IF '(' expression ')' condition_code ELSE condition_code
   74   | . SWITCH '(' expression ')' '{' switch '}'
   84 switch: DEFAULT ':' . operation_list switch
   86       | DEFAULT ':' . operation_list
  103 type: . CHAR
  104     | . INT
  105     | . STRING
  106     | . BOOLEAN
  107     | . FLOAT
  108     | . VOID

    BOOLEAN   shift, and go to state 6
    BREAK     shift, and go to state 120
    CHAR      shift, and go to state 7
    CONTINUE  shift, and go to state 121
    DO        shift, and go to state 122
    FLOAT     shift, and go to state 8
    FOR       shift, and go to state 123
    IF        shift, and go to state 124
    INT       shift, and go to state 9
    OP_INC    shift, and go to state 125
    OP_DEC    shift, and go to state 126
    STRING    shift, and go to state 13
    SWITCH    shift, and go to state 127
    RETURN    shift, and go to state 128
    VOID      shift, and go to state 14
    WHILE     shift, and go to state 129
    ID        shift, and go to state 130

    operation_list  go to state 212
    operation       go to state 133
    declaration     go to state 134
    assignment      go to state 135
    unary           go to state 136
    control         go to state 137
    function_call   go to state 138
    cycle           go to state 139
    if              go to state 140
    type            go to state 20


state 208

   74 if: SWITCH '(' expression ')' '{' switch '}' .

    $default  reduce using rule 74 (if)


state 209

   20 operation: . declaration ';'
   21          | . assignment ';'
   22          | . unary ';'
   23          | . if
   24          | . cycle
   25          | . control ';'
   26          | . function_call ';'
   27 declaration: . type var_list
   28 assignment: . ID assign_operator expression
   29 unary: . ID OP_INC
   30      | . OP_INC ID
   31      | . ID OP_DEC
   32      | . OP_DEC ID
   33 control: . BREAK
   34        | . CONTINUE
   35        | . RETURN
   36        | . RETURN expression
   42 function_call: . ID '(' ')'
   43              | . ID '(' parameter_list ')'
   69 cycle: . FOR '(' assignment ';' if_expression ';' increase_list ')' condition_code
   69      | FOR '(' assignment ';' if_expression ';' increase_list ')' . condition_code
   70      | . WHILE '(' if_expression ')' condition_code
   71      | . DO condition_code WHILE '(' if_expression ')' ';'
   72 if: . IF '(' expression ')' condition_code
   73   | . IF '(' expression ')' condition_code ELSE condition_code
   74   | . SWITCH '(' expression ')' '{' switch '}'
   79 condition_code: . '{' operation_list '}'
   80               | . operation
   81               | . ';'
   82               | . '{' '}'
  103 type: . CHAR
  104     | . INT
  105     | . STRING
  106     | . BOOLEAN
  107     | . FLOAT
  108     | . VOID

    BOOLEAN   shift, and go to state 6
    BREAK     shift, and go to state 120
    CHAR      shift, and go to state 7
    CONTINUE  shift, and go to state 121
    DO        shift, and go to state 122
    FLOAT     shift, and go to state 8
    FOR       shift, and go to state 123
    IF        shift, and go to state 124
    INT       shift, and go to state 9
    OP_INC    shift, and go to state 125
    OP_DEC    shift, and go to state 126
    STRING    shift, and go to state 13
    SWITCH    shift, and go to state 127
    RETURN    shift, and go to state 128
    VOID      shift, and go to state 14
    WHILE     shift, and go to state 129
    ID        shift, and go to state 130
    '{'       shift, and go to state 142
    ';'       shift, and go to state 143

    operation       go to state 144
    declaration     go to state 134
    assignment      go to state 135
    unary           go to state 136
    control         go to state 137
    function_call   go to state 138
    cycle           go to state 139
    if              go to state 140
    condition_code  go to state 213
    type            go to state 20


state 210

   28 assignment: . ID assign_operator expression
   29 unary: . ID OP_INC
   30      | . OP_INC ID
   31      | . ID OP_DEC
   32      | . OP_DEC ID
   76 increase_list: increase_list ',' . increase
   77 increase: . assignment
   78         | . unary

    OP_INC  shift, and go to state 125
    OP_DEC  shift, and go to state 126
    ID      shift, and go to state 199

    assignment  go to state 200
    unary       go to state 201
    increase    go to state 214


state 211

   18 operation_list: . operation
   19               | . operation_list operation
   20 operation: . declaration ';'
   21          | . assignment ';'
   22          | . unary ';'
   23          | . if
   24          | . cycle
   25          | . control ';'
   26          | . function_call ';'
   27 declaration: . type var_list
   28 assignment: . ID assign_operator expression
   29 unary: . ID OP_INC
   30      | . OP_INC ID
   31      | . ID OP_DEC
   32      | . OP_DEC ID
   33 control: . BREAK
   34        | . CONTINUE
   35        | . RETURN
   36        | . RETURN expression
   42 function_call: . ID '(' ')'
   43              | . ID '(' parameter_list ')'
   69 cycle: . FOR '(' assignment ';' if_expression ';' increase_list ')' condition_code
   70      | . WHILE '(' if_expression ')' condition_code
   71      | . DO condition_code WHILE '(' if_expression ')' ';'
   72 if: . IF '(' expression ')' condition_code
   73   | . IF '(' expression ')' condition_code ELSE condition_code
   74   | . SWITCH '(' expression ')' '{' switch '}'
   83 switch: CASE value ':' . operation_list switch
   85       | CASE value ':' . operation_list
  103 type: . CHAR
  104     | . INT
  105     | . STRING
  106     | . BOOLEAN
  107     | . FLOAT
  108     | . VOID

    BOOLEAN   shift, and go to state 6
    BREAK     shift, and go to state 120
    CHAR      shift, and go to state 7
    CONTINUE  shift, and go to state 121
    DO        shift, and go to state 122
    FLOAT     shift, and go to state 8
    FOR       shift, and go to state 123
    IF        shift, and go to state 124
    INT       shift, and go to state 9
    OP_INC    shift, and go to state 125
    OP_DEC    shift, and go to state 126
    STRING    shift, and go to state 13
    SWITCH    shift, and go to state 127
    RETURN    shift, and go to state 128
    VOID      shift, and go to state 14
    WHILE     shift, and go to state 129
    ID        shift, and go to state 130

    operation_list  go to state 215
    operation       go to state 133
    declaration     go to state 134
    assignment      go to state 135
    unary           go to state 136
    control         go to state 137
    function_call   go to state 138
    cycle           go to state 139
    if              go to state 140
    type            go to state 20


state 212

   19 operation_list: operation_list . operation
   20 operation: . declaration ';'
   21          | . assignment ';'
   22          | . unary ';'
   23          | . if
   24          | . cycle
   25          | . control ';'
   26          | . function_call ';'
   27 declaration: . type var_list
   28 assignment: . ID assign_operator expression
   29 unary: . ID OP_INC
   30      | . OP_INC ID
   31      | . ID OP_DEC
   32      | . OP_DEC ID
   33 control: . BREAK
   34        | . CONTINUE
   35        | . RETURN
   36        | . RETURN expression
   42 function_call: . ID '(' ')'
   43              | . ID '(' parameter_list ')'
   69 cycle: . FOR '(' assignment ';' if_expression ';' increase_list ')' condition_code
   70      | . WHILE '(' if_expression ')' condition_code
   71      | . DO condition_code WHILE '(' if_expression ')' ';'
   72 if: . IF '(' expression ')' condition_code
   73   | . IF '(' expression ')' condition_code ELSE condition_code
   74   | . SWITCH '(' expression ')' '{' switch '}'
   83 switch: . CASE value ':' operation_list switch
   84       | . DEFAULT ':' operation_list switch
   84       | DEFAULT ':' operation_list . switch
   85       | . CASE value ':' operation_list
   86       | . DEFAULT ':' operation_list
   86       | DEFAULT ':' operation_list .  ['}']
  103 type: . CHAR
  104     | . INT
  105     | . STRING
  106     | . BOOLEAN
  107     | . FLOAT
  108     | . VOID

    BOOLEAN   shift, and go to state 6
    BREAK     shift, and go to state 120
    CASE      shift, and go to state 195
    CHAR      shift, and go to state 7
    CONTINUE  shift, and go to state 121
    DEFAULT   shift, and go to state 196
    DO        shift, and go to state 122
    FLOAT     shift, and go to state 8
    FOR       shift, and go to state 123
    IF        shift, and go to state 124
    INT       shift, and go to state 9
    OP_INC    shift, and go to state 125
    OP_DEC    shift, and go to state 126
    STRING    shift, and go to state 13
    SWITCH    shift, and go to state 127
    RETURN    shift, and go to state 128
    VOID      shift, and go to state 14
    WHILE     shift, and go to state 129
    ID        shift, and go to state 130

    $default  reduce using rule 86 (switch)

    operation      go to state 164
    declaration    go to state 134
    assignment     go to state 135
    unary          go to state 136
    control        go to state 137
    function_call  go to state 138
    cycle          go to state 139
    if             go to state 140
    switch         go to state 216
    type           go to state 20


state 213

   69 cycle: FOR '(' assignment ';' if_expression ';' increase_list ')' condition_code .

    $default  reduce using rule 69 (cycle)


state 214

   76 increase_list: increase_list ',' increase .

    $default  reduce using rule 76 (increase_list)


state 215

   19 operation_list: operation_list . operation
   20 operation: . declaration ';'
   21          | . assignment ';'
   22          | . unary ';'
   23          | . if
   24          | . cycle
   25          | . control ';'
   26          | . function_call ';'
   27 declaration: . type var_list
   28 assignment: . ID assign_operator expression
   29 unary: . ID OP_INC
   30      | . OP_INC ID
   31      | . ID OP_DEC
   32      | . OP_DEC ID
   33 control: . BREAK
   34        | . CONTINUE
   35        | . RETURN
   36        | . RETURN expression
   42 function_call: . ID '(' ')'
   43              | . ID '(' parameter_list ')'
   69 cycle: . FOR '(' assignment ';' if_expression ';' increase_list ')' condition_code
   70      | . WHILE '(' if_expression ')' condition_code
   71      | . DO condition_code WHILE '(' if_expression ')' ';'
   72 if: . IF '(' expression ')' condition_code
   73   | . IF '(' expression ')' condition_code ELSE condition_code
   74   | . SWITCH '(' expression ')' '{' switch '}'
   83 switch: . CASE value ':' operation_list switch
   83       | CASE value ':' operation_list . switch
   84       | . DEFAULT ':' operation_list switch
   85       | . CASE value ':' operation_list
   85       | CASE value ':' operation_list .  ['}']
   86       | . DEFAULT ':' operation_list
  103 type: . CHAR
  104     | . INT
  105     | . STRING
  106     | . BOOLEAN
  107     | . FLOAT
  108     | . VOID

    BOOLEAN   shift, and go to state 6
    BREAK     shift, and go to state 120
    CASE      shift, and go to state 195
    CHAR      shift, and go to state 7
    CONTINUE  shift, and go to state 121
    DEFAULT   shift, and go to state 196
    DO        shift, and go to state 122
    FLOAT     shift, and go to state 8
    FOR       shift, and go to state 123
    IF        shift, and go to state 124
    INT       shift, and go to state 9
    OP_INC    shift, and go to state 125
    OP_DEC    shift, and go to state 126
    STRING    shift, and go to state 13
    SWITCH    shift, and go to state 127
    RETURN    shift, and go to state 128
    VOID      shift, and go to state 14
    WHILE     shift, and go to state 129
    ID        shift, and go to state 130

    $default  reduce using rule 85 (switch)

    operation      go to state 164
    declaration    go to state 134
    assignment     go to state 135
    unary          go to state 136
    control        go to state 137
    function_call  go to state 138
    cycle          go to state 139
    if             go to state 140
    switch         go to state 217
    type           go to state 20


state 216

   84 switch: DEFAULT ':' operation_list switch .

    $default  reduce using rule 84 (switch)


state 217

   83 switch: CASE value ':' operation_list switch .

    $default  reduce using rule 83 (switch)
