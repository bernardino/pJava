Terminals unused in grammar

   ASS_EQ
   ASS_LS
   ASS_RS
   BYTE
   DOUBLE
   IFELSE
   LONG
   NEW
   JNULL
   OP_SHL
   OP_SHR
   OP_SHRR
   OP_DIM
   SHORT
   THIS
   ASS_SUM


Grammar

    0 $accept: init $end

    1 init: CLASS ID '{' main '}'
    2     | CLASS ID '{' main function_list '}'

    3 main: PUBLIC STATIC VOID MAIN '(' STRING '[' ']' ARGS ')' code

    4 function_list: function
    5              | function_list function

    6 function: scope STATIC type ID '(' argument_list ')' code

    7 scope: PRIVATE
    8      | PROTECTED
    9      | PUBLIC

   10 code: '{' '}'
   11     | '{' operation_list '}'

   12 operation_list: operation
   13               | operation_list operation

   14 operation: declaration ';'
   15          | assignment ';'
   16          | unary ';'
   17          | if
   18          | cycle
   19          | control ';'

   20 declaration: type var_list

   21 assignment: ID assign_operator expression

   22 unary: ID OP_INC
   23      | OP_INC ID
   24      | ID OP_DEC
   25      | OP_DEC ID

   26 control: BREAK
   27        | CONTINUE
   28        | RETURN
   29        | RETURN expression

   30 expression: '(' expression ')'
   31           | value
   32           | function_call
   33           | infix_expression
   34           | if_expression

   35 function_call: ID '(' ')'
   36              | ID '(' parameter_list ')'

   37 infix_expression: expression '+' expression
   38                 | expression '-' expression
   39                 | expression '*' expression
   40                 | expression '/' expression
   41                 | expression '%' expression
   42                 | expression '&' expression
   43                 | expression LS expression
   44                 | expression RS expression

   45 if_expression: expression '>' expression
   46              | expression '<' expression
   47              | expression OP_EQ expression
   48              | expression OP_LE expression
   49              | expression OP_GE expression
   50              | expression OP_NE expression
   51              | expression OP_LOR expression
   52              | expression OP_LAND expression

   53 parameter_list: expression
   54               | parameter_list ',' expression

   55 var_list: var
   56         | var_list ',' var

   57 var: ID
   58    | ID '=' expression

   59 argument_list: argument
   60              | argument_list ',' argument

   61 argument: type ID

   62 cycle: FOR '(' assignment ';' if_expression ';' for_incr ')' condition_code
   63      | WHILE '(' if_expression ')' condition_code
   64      | DO condition_code WHILE '(' if_expression ')' ';'

   65 if: IF '(' expression ')' condition_code
   66   | IF '(' expression ')' condition_code ELSE condition_code
   67   | SWITCH '(' expression ')' '{' switch '}'

   68 for_incr: incr
   69         | for_incr ',' incr

   70 incr: assignment
   71     | unary

   72 condition_code: '{' operation_list '}'
   73               | operation
   74               | ';'
   75               | '{' '}'

   76 switch: CASE value ':' operation_list switch
   77       | DEFAULT ':' operation_list switch
   78       | CASE value ':' operation_list
   79       | DEFAULT ':' operation_list

   80 assign_operator: '='
   81                | ASS_ADD
   82                | ASS_SUB
   83                | ASS_MUL
   84                | ASS_DIV
   85                | ASS_PERC
   86                | ASS_AND

   87 value: ID
   88      | STRING_VAL
   89      | NUMBER_VAL
   90      | DOUBLE_VAL
   91      | CHAR_VAL
   92      | TRUE
   93      | FALSE

   94 type: CHAR
   95     | INT
   96     | STRING
   97     | BOOLEAN
   98     | FLOAT
   99     | VOID


Terminals, with rules where they appear

$end (0) 0
'%' (37) 41
'&' (38) 42
'(' (40) 3 6 30 35 36 62 63 64 65 66 67
')' (41) 3 6 30 35 36 62 63 64 65 66 67
'*' (42) 39
'+' (43) 37
',' (44) 54 56 60 69
'-' (45) 38
'/' (47) 40
':' (58) 76 77 78 79
';' (59) 14 15 16 19 62 64 74
'<' (60) 46
'=' (61) 58 80
'>' (62) 45
'[' (91) 3
']' (93) 3
'{' (123) 1 2 10 11 67 72 75
'}' (125) 1 2 10 11 67 72 75
error (256)
ARGS (258) 3
ASS_MUL (259) 83
ASS_DIV (260) 84
ASS_ADD (261) 81
ASS_SUB (262) 82
ASS_EQ (263)
ASS_AND (264) 86
ASS_LS (265)
ASS_RS (266)
BOOLEAN (267) 97
BREAK (268) 26
BYTE (269)
CASE (270) 76 78
CHAR (271) 94
CLASS (272) 1 2
CONTINUE (273) 27
DEFAULT (274) 77 79
DO (275) 64
DOUBLE (276)
ELSE (277) 66
FALSE (278) 93
FLOAT (279) 98
FOR (280) 62
IF (281) 65 66
IFELSE (282)
INT (283) 95
LONG (284)
LS (285) 43
MAIN (286) 3
NEW (287)
JNULL (288)
OP_INC (289) 22 23
OP_DEC (290) 24 25
OP_SHL (291)
OP_SHR (292)
OP_SHRR (293)
OP_GE (294) 49
OP_LE (295) 48
OP_EQ (296) 47
OP_NE (297) 50
OP_LAND (298) 52
OP_LOR (299) 51
OP_DIM (300)
PRIVATE (301) 7
PROTECTED (302) 8
PUBLIC (303) 3 9
SHORT (304)
STATIC (305) 3 6
STRING (306) 3 96
SWITCH (307) 67
RETURN (308) 28 29
RS (309) 44
TRUE (310) 92
THIS (311)
VOID (312) 3 99
WHILE (313) 63 64
NUMBER_VAL (314) 89
DOUBLE_VAL (315) 90
STRING_VAL (316) 88
CHAR_VAL (317) 91
ID (318) 1 2 6 21 22 23 24 25 35 36 57 58 61 87
IFPREC (319)
ASS_PERC (320) 85
ASS_SUM (321)


Nonterminals, with rules where they appear

$accept (85)
    on left: 0
init (86)
    on left: 1 2, on right: 0
main (87)
    on left: 3, on right: 1 2
function_list (88)
    on left: 4 5, on right: 2 5
function (89)
    on left: 6, on right: 4 5
scope (90)
    on left: 7 8 9, on right: 6
code (91)
    on left: 10 11, on right: 3 6
operation_list (92)
    on left: 12 13, on right: 11 13 72 76 77 78 79
operation (93)
    on left: 14 15 16 17 18 19, on right: 12 13 73
declaration (94)
    on left: 20, on right: 14
assignment (95)
    on left: 21, on right: 15 62 70
unary (96)
    on left: 22 23 24 25, on right: 16 71
control (97)
    on left: 26 27 28 29, on right: 19
expression (98)
    on left: 30 31 32 33 34, on right: 21 29 30 37 38 39 40 41 42 43
    44 45 46 47 48 49 50 51 52 53 54 58 65 66 67
function_call (99)
    on left: 35 36, on right: 32
infix_expression (100)
    on left: 37 38 39 40 41 42 43 44, on right: 33
if_expression (101)
    on left: 45 46 47 48 49 50 51 52, on right: 34 62 63 64
parameter_list (102)
    on left: 53 54, on right: 36 54
var_list (103)
    on left: 55 56, on right: 20 56
var (104)
    on left: 57 58, on right: 55 56
argument_list (105)
    on left: 59 60, on right: 6 60
argument (106)
    on left: 61, on right: 59 60
cycle (107)
    on left: 62 63 64, on right: 18
if (108)
    on left: 65 66 67, on right: 17
for_incr (109)
    on left: 68 69, on right: 62 69
incr (110)
    on left: 70 71, on right: 68 69
condition_code (111)
    on left: 72 73 74 75, on right: 62 63 64 65 66
switch (112)
    on left: 76 77 78 79, on right: 67 76 77
assign_operator (113)
    on left: 80 81 82 83 84 85 86, on right: 21
value (114)
    on left: 87 88 89 90 91 92 93, on right: 31 76 78
type (115)
    on left: 94 95 96 97 98 99, on right: 6 20 61


state 0

    0 $accept: . init $end
    1 init: . CLASS ID '{' main '}'
    2     | . CLASS ID '{' main function_list '}'

    CLASS  shift, and go to state 1

    init  go to state 2


state 1

    1 init: CLASS . ID '{' main '}'
    2     | CLASS . ID '{' main function_list '}'

    ID  shift, and go to state 3


state 2

    0 $accept: init . $end

    $end  shift, and go to state 4


state 3

    1 init: CLASS ID . '{' main '}'
    2     | CLASS ID . '{' main function_list '}'

    '{'  shift, and go to state 5


state 4

    0 $accept: init $end .

    $default  accept


state 5

    1 init: CLASS ID '{' . main '}'
    2     | CLASS ID '{' . main function_list '}'
    3 main: . PUBLIC STATIC VOID MAIN '(' STRING '[' ']' ARGS ')' code

    PUBLIC  shift, and go to state 6

    main  go to state 7


state 6

    3 main: PUBLIC . STATIC VOID MAIN '(' STRING '[' ']' ARGS ')' code

    STATIC  shift, and go to state 8


state 7

    1 init: CLASS ID '{' main . '}'
    2     | CLASS ID '{' main . function_list '}'
    4 function_list: . function
    5              | . function_list function
    6 function: . scope STATIC type ID '(' argument_list ')' code
    7 scope: . PRIVATE
    8      | . PROTECTED
    9      | . PUBLIC

    PRIVATE    shift, and go to state 9
    PROTECTED  shift, and go to state 10
    PUBLIC     shift, and go to state 11
    '}'        shift, and go to state 12

    function_list  go to state 13
    function       go to state 14
    scope          go to state 15


state 8

    3 main: PUBLIC STATIC . VOID MAIN '(' STRING '[' ']' ARGS ')' code

    VOID  shift, and go to state 16


state 9

    7 scope: PRIVATE .

    $default  reduce using rule 7 (scope)


state 10

    8 scope: PROTECTED .

    $default  reduce using rule 8 (scope)


state 11

    9 scope: PUBLIC .

    $default  reduce using rule 9 (scope)


state 12

    1 init: CLASS ID '{' main '}' .

    $default  reduce using rule 1 (init)


state 13

    2 init: CLASS ID '{' main function_list . '}'
    5 function_list: function_list . function
    6 function: . scope STATIC type ID '(' argument_list ')' code
    7 scope: . PRIVATE
    8      | . PROTECTED
    9      | . PUBLIC

    PRIVATE    shift, and go to state 9
    PROTECTED  shift, and go to state 10
    PUBLIC     shift, and go to state 11
    '}'        shift, and go to state 17

    function  go to state 18
    scope     go to state 15


state 14

    4 function_list: function .

    $default  reduce using rule 4 (function_list)


state 15

    6 function: scope . STATIC type ID '(' argument_list ')' code

    STATIC  shift, and go to state 19


state 16

    3 main: PUBLIC STATIC VOID . MAIN '(' STRING '[' ']' ARGS ')' code

    MAIN  shift, and go to state 20


state 17

    2 init: CLASS ID '{' main function_list '}' .

    $default  reduce using rule 2 (init)


state 18

    5 function_list: function_list function .

    $default  reduce using rule 5 (function_list)


state 19

    6 function: scope STATIC . type ID '(' argument_list ')' code
   94 type: . CHAR
   95     | . INT
   96     | . STRING
   97     | . BOOLEAN
   98     | . FLOAT
   99     | . VOID

    BOOLEAN  shift, and go to state 21
    CHAR     shift, and go to state 22
    FLOAT    shift, and go to state 23
    INT      shift, and go to state 24
    STRING   shift, and go to state 25
    VOID     shift, and go to state 26

    type  go to state 27


state 20

    3 main: PUBLIC STATIC VOID MAIN . '(' STRING '[' ']' ARGS ')' code

    '('  shift, and go to state 28


state 21

   97 type: BOOLEAN .

    $default  reduce using rule 97 (type)


state 22

   94 type: CHAR .

    $default  reduce using rule 94 (type)


state 23

   98 type: FLOAT .

    $default  reduce using rule 98 (type)


state 24

   95 type: INT .

    $default  reduce using rule 95 (type)


state 25

   96 type: STRING .

    $default  reduce using rule 96 (type)


state 26

   99 type: VOID .

    $default  reduce using rule 99 (type)


state 27

    6 function: scope STATIC type . ID '(' argument_list ')' code

    ID  shift, and go to state 29


state 28

    3 main: PUBLIC STATIC VOID MAIN '(' . STRING '[' ']' ARGS ')' code

    STRING  shift, and go to state 30


state 29

    6 function: scope STATIC type ID . '(' argument_list ')' code

    '('  shift, and go to state 31


state 30

    3 main: PUBLIC STATIC VOID MAIN '(' STRING . '[' ']' ARGS ')' code

    '['  shift, and go to state 32


state 31

    6 function: scope STATIC type ID '(' . argument_list ')' code
   59 argument_list: . argument
   60              | . argument_list ',' argument
   61 argument: . type ID
   94 type: . CHAR
   95     | . INT
   96     | . STRING
   97     | . BOOLEAN
   98     | . FLOAT
   99     | . VOID

    BOOLEAN  shift, and go to state 21
    CHAR     shift, and go to state 22
    FLOAT    shift, and go to state 23
    INT      shift, and go to state 24
    STRING   shift, and go to state 25
    VOID     shift, and go to state 26

    argument_list  go to state 33
    argument       go to state 34
    type           go to state 35


state 32

    3 main: PUBLIC STATIC VOID MAIN '(' STRING '[' . ']' ARGS ')' code

    ']'  shift, and go to state 36


state 33

    6 function: scope STATIC type ID '(' argument_list . ')' code
   60 argument_list: argument_list . ',' argument

    ')'  shift, and go to state 37
    ','  shift, and go to state 38


state 34

   59 argument_list: argument .

    $default  reduce using rule 59 (argument_list)


state 35

   61 argument: type . ID

    ID  shift, and go to state 39


state 36

    3 main: PUBLIC STATIC VOID MAIN '(' STRING '[' ']' . ARGS ')' code

    ARGS  shift, and go to state 40


state 37

    6 function: scope STATIC type ID '(' argument_list ')' . code
   10 code: . '{' '}'
   11     | . '{' operation_list '}'

    '{'  shift, and go to state 41

    code  go to state 42


state 38

   60 argument_list: argument_list ',' . argument
   61 argument: . type ID
   94 type: . CHAR
   95     | . INT
   96     | . STRING
   97     | . BOOLEAN
   98     | . FLOAT
   99     | . VOID

    BOOLEAN  shift, and go to state 21
    CHAR     shift, and go to state 22
    FLOAT    shift, and go to state 23
    INT      shift, and go to state 24
    STRING   shift, and go to state 25
    VOID     shift, and go to state 26

    argument  go to state 43
    type      go to state 35


state 39

   61 argument: type ID .

    $default  reduce using rule 61 (argument)


state 40

    3 main: PUBLIC STATIC VOID MAIN '(' STRING '[' ']' ARGS . ')' code

    ')'  shift, and go to state 44


state 41

   10 code: '{' . '}'
   11     | '{' . operation_list '}'
   12 operation_list: . operation
   13               | . operation_list operation
   14 operation: . declaration ';'
   15          | . assignment ';'
   16          | . unary ';'
   17          | . if
   18          | . cycle
   19          | . control ';'
   20 declaration: . type var_list
   21 assignment: . ID assign_operator expression
   22 unary: . ID OP_INC
   23      | . OP_INC ID
   24      | . ID OP_DEC
   25      | . OP_DEC ID
   26 control: . BREAK
   27        | . CONTINUE
   28        | . RETURN
   29        | . RETURN expression
   62 cycle: . FOR '(' assignment ';' if_expression ';' for_incr ')' condition_code
   63      | . WHILE '(' if_expression ')' condition_code
   64      | . DO condition_code WHILE '(' if_expression ')' ';'
   65 if: . IF '(' expression ')' condition_code
   66   | . IF '(' expression ')' condition_code ELSE condition_code
   67   | . SWITCH '(' expression ')' '{' switch '}'
   94 type: . CHAR
   95     | . INT
   96     | . STRING
   97     | . BOOLEAN
   98     | . FLOAT
   99     | . VOID

    BOOLEAN   shift, and go to state 21
    BREAK     shift, and go to state 45
    CHAR      shift, and go to state 22
    CONTINUE  shift, and go to state 46
    DO        shift, and go to state 47
    FLOAT     shift, and go to state 23
    FOR       shift, and go to state 48
    IF        shift, and go to state 49
    INT       shift, and go to state 24
    OP_INC    shift, and go to state 50
    OP_DEC    shift, and go to state 51
    STRING    shift, and go to state 25
    SWITCH    shift, and go to state 52
    RETURN    shift, and go to state 53
    VOID      shift, and go to state 26
    WHILE     shift, and go to state 54
    ID        shift, and go to state 55
    '}'       shift, and go to state 56

    operation_list  go to state 57
    operation       go to state 58
    declaration     go to state 59
    assignment      go to state 60
    unary           go to state 61
    control         go to state 62
    cycle           go to state 63
    if              go to state 64
    type            go to state 65


state 42

    6 function: scope STATIC type ID '(' argument_list ')' code .

    $default  reduce using rule 6 (function)


state 43

   60 argument_list: argument_list ',' argument .

    $default  reduce using rule 60 (argument_list)


state 44

    3 main: PUBLIC STATIC VOID MAIN '(' STRING '[' ']' ARGS ')' . code
   10 code: . '{' '}'
   11     | . '{' operation_list '}'

    '{'  shift, and go to state 41

    code  go to state 66


state 45

   26 control: BREAK .

    $default  reduce using rule 26 (control)


state 46

   27 control: CONTINUE .

    $default  reduce using rule 27 (control)


state 47

   14 operation: . declaration ';'
   15          | . assignment ';'
   16          | . unary ';'
   17          | . if
   18          | . cycle
   19          | . control ';'
   20 declaration: . type var_list
   21 assignment: . ID assign_operator expression
   22 unary: . ID OP_INC
   23      | . OP_INC ID
   24      | . ID OP_DEC
   25      | . OP_DEC ID
   26 control: . BREAK
   27        | . CONTINUE
   28        | . RETURN
   29        | . RETURN expression
   62 cycle: . FOR '(' assignment ';' if_expression ';' for_incr ')' condition_code
   63      | . WHILE '(' if_expression ')' condition_code
   64      | . DO condition_code WHILE '(' if_expression ')' ';'
   64      | DO . condition_code WHILE '(' if_expression ')' ';'
   65 if: . IF '(' expression ')' condition_code
   66   | . IF '(' expression ')' condition_code ELSE condition_code
   67   | . SWITCH '(' expression ')' '{' switch '}'
   72 condition_code: . '{' operation_list '}'
   73               | . operation
   74               | . ';'
   75               | . '{' '}'
   94 type: . CHAR
   95     | . INT
   96     | . STRING
   97     | . BOOLEAN
   98     | . FLOAT
   99     | . VOID

    BOOLEAN   shift, and go to state 21
    BREAK     shift, and go to state 45
    CHAR      shift, and go to state 22
    CONTINUE  shift, and go to state 46
    DO        shift, and go to state 47
    FLOAT     shift, and go to state 23
    FOR       shift, and go to state 48
    IF        shift, and go to state 49
    INT       shift, and go to state 24
    OP_INC    shift, and go to state 50
    OP_DEC    shift, and go to state 51
    STRING    shift, and go to state 25
    SWITCH    shift, and go to state 52
    RETURN    shift, and go to state 53
    VOID      shift, and go to state 26
    WHILE     shift, and go to state 54
    ID        shift, and go to state 55
    '{'       shift, and go to state 67
    ';'       shift, and go to state 68

    operation       go to state 69
    declaration     go to state 59
    assignment      go to state 60
    unary           go to state 61
    control         go to state 62
    cycle           go to state 63
    if              go to state 64
    condition_code  go to state 70
    type            go to state 65


state 48

   62 cycle: FOR . '(' assignment ';' if_expression ';' for_incr ')' condition_code

    '('  shift, and go to state 71


state 49

   65 if: IF . '(' expression ')' condition_code
   66   | IF . '(' expression ')' condition_code ELSE condition_code

    '('  shift, and go to state 72


state 50

   23 unary: OP_INC . ID

    ID  shift, and go to state 73


state 51

   25 unary: OP_DEC . ID

    ID  shift, and go to state 74


state 52

   67 if: SWITCH . '(' expression ')' '{' switch '}'

    '('  shift, and go to state 75


state 53

   28 control: RETURN .  [';']
   29        | RETURN . expression
   30 expression: . '(' expression ')'
   31           | . value
   32           | . function_call
   33           | . infix_expression
   34           | . if_expression
   35 function_call: . ID '(' ')'
   36              | . ID '(' parameter_list ')'
   37 infix_expression: . expression '+' expression
   38                 | . expression '-' expression
   39                 | . expression '*' expression
   40                 | . expression '/' expression
   41                 | . expression '%' expression
   42                 | . expression '&' expression
   43                 | . expression LS expression
   44                 | . expression RS expression
   45 if_expression: . expression '>' expression
   46              | . expression '<' expression
   47              | . expression OP_EQ expression
   48              | . expression OP_LE expression
   49              | . expression OP_GE expression
   50              | . expression OP_NE expression
   51              | . expression OP_LOR expression
   52              | . expression OP_LAND expression
   87 value: . ID
   88      | . STRING_VAL
   89      | . NUMBER_VAL
   90      | . DOUBLE_VAL
   91      | . CHAR_VAL
   92      | . TRUE
   93      | . FALSE

    FALSE       shift, and go to state 76
    TRUE        shift, and go to state 77
    NUMBER_VAL  shift, and go to state 78
    DOUBLE_VAL  shift, and go to state 79
    STRING_VAL  shift, and go to state 80
    CHAR_VAL    shift, and go to state 81
    ID          shift, and go to state 82
    '('         shift, and go to state 83

    $default  reduce using rule 28 (control)

    expression        go to state 84
    function_call     go to state 85
    infix_expression  go to state 86
    if_expression     go to state 87
    value             go to state 88


state 54

   63 cycle: WHILE . '(' if_expression ')' condition_code

    '('  shift, and go to state 89


state 55

   21 assignment: ID . assign_operator expression
   22 unary: ID . OP_INC
   24      | ID . OP_DEC
   80 assign_operator: . '='
   81                | . ASS_ADD
   82                | . ASS_SUB
   83                | . ASS_MUL
   84                | . ASS_DIV
   85                | . ASS_PERC
   86                | . ASS_AND

    ASS_MUL   shift, and go to state 90
    ASS_DIV   shift, and go to state 91
    ASS_ADD   shift, and go to state 92
    ASS_SUB   shift, and go to state 93
    ASS_AND   shift, and go to state 94
    OP_INC    shift, and go to state 95
    OP_DEC    shift, and go to state 96
    '='       shift, and go to state 97
    ASS_PERC  shift, and go to state 98

    assign_operator  go to state 99


state 56

   10 code: '{' '}' .

    $default  reduce using rule 10 (code)


state 57

   11 code: '{' operation_list . '}'
   13 operation_list: operation_list . operation
   14 operation: . declaration ';'
   15          | . assignment ';'
   16          | . unary ';'
   17          | . if
   18          | . cycle
   19          | . control ';'
   20 declaration: . type var_list
   21 assignment: . ID assign_operator expression
   22 unary: . ID OP_INC
   23      | . OP_INC ID
   24      | . ID OP_DEC
   25      | . OP_DEC ID
   26 control: . BREAK
   27        | . CONTINUE
   28        | . RETURN
   29        | . RETURN expression
   62 cycle: . FOR '(' assignment ';' if_expression ';' for_incr ')' condition_code
   63      | . WHILE '(' if_expression ')' condition_code
   64      | . DO condition_code WHILE '(' if_expression ')' ';'
   65 if: . IF '(' expression ')' condition_code
   66   | . IF '(' expression ')' condition_code ELSE condition_code
   67   | . SWITCH '(' expression ')' '{' switch '}'
   94 type: . CHAR
   95     | . INT
   96     | . STRING
   97     | . BOOLEAN
   98     | . FLOAT
   99     | . VOID

    BOOLEAN   shift, and go to state 21
    BREAK     shift, and go to state 45
    CHAR      shift, and go to state 22
    CONTINUE  shift, and go to state 46
    DO        shift, and go to state 47
    FLOAT     shift, and go to state 23
    FOR       shift, and go to state 48
    IF        shift, and go to state 49
    INT       shift, and go to state 24
    OP_INC    shift, and go to state 50
    OP_DEC    shift, and go to state 51
    STRING    shift, and go to state 25
    SWITCH    shift, and go to state 52
    RETURN    shift, and go to state 53
    VOID      shift, and go to state 26
    WHILE     shift, and go to state 54
    ID        shift, and go to state 55
    '}'       shift, and go to state 100

    operation    go to state 101
    declaration  go to state 59
    assignment   go to state 60
    unary        go to state 61
    control      go to state 62
    cycle        go to state 63
    if           go to state 64
    type         go to state 65


state 58

   12 operation_list: operation .

    $default  reduce using rule 12 (operation_list)


state 59

   14 operation: declaration . ';'

    ';'  shift, and go to state 102


state 60

   15 operation: assignment . ';'

    ';'  shift, and go to state 103


state 61

   16 operation: unary . ';'

    ';'  shift, and go to state 104


state 62

   19 operation: control . ';'

    ';'  shift, and go to state 105


state 63

   18 operation: cycle .

    $default  reduce using rule 18 (operation)


state 64

   17 operation: if .

    $default  reduce using rule 17 (operation)


state 65

   20 declaration: type . var_list
   55 var_list: . var
   56         | . var_list ',' var
   57 var: . ID
   58    | . ID '=' expression

    ID  shift, and go to state 106

    var_list  go to state 107
    var       go to state 108


state 66

    3 main: PUBLIC STATIC VOID MAIN '(' STRING '[' ']' ARGS ')' code .

    $default  reduce using rule 3 (main)


state 67

   12 operation_list: . operation
   13               | . operation_list operation
   14 operation: . declaration ';'
   15          | . assignment ';'
   16          | . unary ';'
   17          | . if
   18          | . cycle
   19          | . control ';'
   20 declaration: . type var_list
   21 assignment: . ID assign_operator expression
   22 unary: . ID OP_INC
   23      | . OP_INC ID
   24      | . ID OP_DEC
   25      | . OP_DEC ID
   26 control: . BREAK
   27        | . CONTINUE
   28        | . RETURN
   29        | . RETURN expression
   62 cycle: . FOR '(' assignment ';' if_expression ';' for_incr ')' condition_code
   63      | . WHILE '(' if_expression ')' condition_code
   64      | . DO condition_code WHILE '(' if_expression ')' ';'
   65 if: . IF '(' expression ')' condition_code
   66   | . IF '(' expression ')' condition_code ELSE condition_code
   67   | . SWITCH '(' expression ')' '{' switch '}'
   72 condition_code: '{' . operation_list '}'
   75               | '{' . '}'
   94 type: . CHAR
   95     | . INT
   96     | . STRING
   97     | . BOOLEAN
   98     | . FLOAT
   99     | . VOID

    BOOLEAN   shift, and go to state 21
    BREAK     shift, and go to state 45
    CHAR      shift, and go to state 22
    CONTINUE  shift, and go to state 46
    DO        shift, and go to state 47
    FLOAT     shift, and go to state 23
    FOR       shift, and go to state 48
    IF        shift, and go to state 49
    INT       shift, and go to state 24
    OP_INC    shift, and go to state 50
    OP_DEC    shift, and go to state 51
    STRING    shift, and go to state 25
    SWITCH    shift, and go to state 52
    RETURN    shift, and go to state 53
    VOID      shift, and go to state 26
    WHILE     shift, and go to state 54
    ID        shift, and go to state 55
    '}'       shift, and go to state 109

    operation_list  go to state 110
    operation       go to state 58
    declaration     go to state 59
    assignment      go to state 60
    unary           go to state 61
    control         go to state 62
    cycle           go to state 63
    if              go to state 64
    type            go to state 65


state 68

   74 condition_code: ';' .

    $default  reduce using rule 74 (condition_code)


state 69

   73 condition_code: operation .

    $default  reduce using rule 73 (condition_code)


state 70

   64 cycle: DO condition_code . WHILE '(' if_expression ')' ';'

    WHILE  shift, and go to state 111


state 71

   21 assignment: . ID assign_operator expression
   62 cycle: FOR '(' . assignment ';' if_expression ';' for_incr ')' condition_code

    ID  shift, and go to state 112

    assignment  go to state 113


state 72

   30 expression: . '(' expression ')'
   31           | . value
   32           | . function_call
   33           | . infix_expression
   34           | . if_expression
   35 function_call: . ID '(' ')'
   36              | . ID '(' parameter_list ')'
   37 infix_expression: . expression '+' expression
   38                 | . expression '-' expression
   39                 | . expression '*' expression
   40                 | . expression '/' expression
   41                 | . expression '%' expression
   42                 | . expression '&' expression
   43                 | . expression LS expression
   44                 | . expression RS expression
   45 if_expression: . expression '>' expression
   46              | . expression '<' expression
   47              | . expression OP_EQ expression
   48              | . expression OP_LE expression
   49              | . expression OP_GE expression
   50              | . expression OP_NE expression
   51              | . expression OP_LOR expression
   52              | . expression OP_LAND expression
   65 if: IF '(' . expression ')' condition_code
   66   | IF '(' . expression ')' condition_code ELSE condition_code
   87 value: . ID
   88      | . STRING_VAL
   89      | . NUMBER_VAL
   90      | . DOUBLE_VAL
   91      | . CHAR_VAL
   92      | . TRUE
   93      | . FALSE

    FALSE       shift, and go to state 76
    TRUE        shift, and go to state 77
    NUMBER_VAL  shift, and go to state 78
    DOUBLE_VAL  shift, and go to state 79
    STRING_VAL  shift, and go to state 80
    CHAR_VAL    shift, and go to state 81
    ID          shift, and go to state 82
    '('         shift, and go to state 83

    expression        go to state 114
    function_call     go to state 85
    infix_expression  go to state 86
    if_expression     go to state 87
    value             go to state 88


state 73

   23 unary: OP_INC ID .

    $default  reduce using rule 23 (unary)


state 74

   25 unary: OP_DEC ID .

    $default  reduce using rule 25 (unary)


state 75

   30 expression: . '(' expression ')'
   31           | . value
   32           | . function_call
   33           | . infix_expression
   34           | . if_expression
   35 function_call: . ID '(' ')'
   36              | . ID '(' parameter_list ')'
   37 infix_expression: . expression '+' expression
   38                 | . expression '-' expression
   39                 | . expression '*' expression
   40                 | . expression '/' expression
   41                 | . expression '%' expression
   42                 | . expression '&' expression
   43                 | . expression LS expression
   44                 | . expression RS expression
   45 if_expression: . expression '>' expression
   46              | . expression '<' expression
   47              | . expression OP_EQ expression
   48              | . expression OP_LE expression
   49              | . expression OP_GE expression
   50              | . expression OP_NE expression
   51              | . expression OP_LOR expression
   52              | . expression OP_LAND expression
   67 if: SWITCH '(' . expression ')' '{' switch '}'
   87 value: . ID
   88      | . STRING_VAL
   89      | . NUMBER_VAL
   90      | . DOUBLE_VAL
   91      | . CHAR_VAL
   92      | . TRUE
   93      | . FALSE

    FALSE       shift, and go to state 76
    TRUE        shift, and go to state 77
    NUMBER_VAL  shift, and go to state 78
    DOUBLE_VAL  shift, and go to state 79
    STRING_VAL  shift, and go to state 80
    CHAR_VAL    shift, and go to state 81
    ID          shift, and go to state 82
    '('         shift, and go to state 83

    expression        go to state 115
    function_call     go to state 85
    infix_expression  go to state 86
    if_expression     go to state 87
    value             go to state 88


state 76

   93 value: FALSE .

    $default  reduce using rule 93 (value)


state 77

   92 value: TRUE .

    $default  reduce using rule 92 (value)


state 78

   89 value: NUMBER_VAL .

    $default  reduce using rule 89 (value)


state 79

   90 value: DOUBLE_VAL .

    $default  reduce using rule 90 (value)


state 80

   88 value: STRING_VAL .

    $default  reduce using rule 88 (value)


state 81

   91 value: CHAR_VAL .

    $default  reduce using rule 91 (value)


state 82

   35 function_call: ID . '(' ')'
   36              | ID . '(' parameter_list ')'
   87 value: ID .  [LS, OP_GE, OP_LE, OP_EQ, OP_NE, OP_LAND, OP_LOR, RS, '+', '-', '*', '/', '%', '&', ')', '<', '>', ';', ',']

    '('  shift, and go to state 116

    $default  reduce using rule 87 (value)


state 83

   30 expression: . '(' expression ')'
   30           | '(' . expression ')'
   31           | . value
   32           | . function_call
   33           | . infix_expression
   34           | . if_expression
   35 function_call: . ID '(' ')'
   36              | . ID '(' parameter_list ')'
   37 infix_expression: . expression '+' expression
   38                 | . expression '-' expression
   39                 | . expression '*' expression
   40                 | . expression '/' expression
   41                 | . expression '%' expression
   42                 | . expression '&' expression
   43                 | . expression LS expression
   44                 | . expression RS expression
   45 if_expression: . expression '>' expression
   46              | . expression '<' expression
   47              | . expression OP_EQ expression
   48              | . expression OP_LE expression
   49              | . expression OP_GE expression
   50              | . expression OP_NE expression
   51              | . expression OP_LOR expression
   52              | . expression OP_LAND expression
   87 value: . ID
   88      | . STRING_VAL
   89      | . NUMBER_VAL
   90      | . DOUBLE_VAL
   91      | . CHAR_VAL
   92      | . TRUE
   93      | . FALSE

    FALSE       shift, and go to state 76
    TRUE        shift, and go to state 77
    NUMBER_VAL  shift, and go to state 78
    DOUBLE_VAL  shift, and go to state 79
    STRING_VAL  shift, and go to state 80
    CHAR_VAL    shift, and go to state 81
    ID          shift, and go to state 82
    '('         shift, and go to state 83

    expression        go to state 117
    function_call     go to state 85
    infix_expression  go to state 86
    if_expression     go to state 87
    value             go to state 88


state 84

   29 control: RETURN expression .  [';']
   37 infix_expression: expression . '+' expression
   38                 | expression . '-' expression
   39                 | expression . '*' expression
   40                 | expression . '/' expression
   41                 | expression . '%' expression
   42                 | expression . '&' expression
   43                 | expression . LS expression
   44                 | expression . RS expression
   45 if_expression: expression . '>' expression
   46              | expression . '<' expression
   47              | expression . OP_EQ expression
   48              | expression . OP_LE expression
   49              | expression . OP_GE expression
   50              | expression . OP_NE expression
   51              | expression . OP_LOR expression
   52              | expression . OP_LAND expression

    LS       shift, and go to state 118
    OP_GE    shift, and go to state 119
    OP_LE    shift, and go to state 120
    OP_EQ    shift, and go to state 121
    OP_NE    shift, and go to state 122
    OP_LAND  shift, and go to state 123
    OP_LOR   shift, and go to state 124
    RS       shift, and go to state 125
    '+'      shift, and go to state 126
    '-'      shift, and go to state 127
    '*'      shift, and go to state 128
    '/'      shift, and go to state 129
    '%'      shift, and go to state 130
    '&'      shift, and go to state 131
    '<'      shift, and go to state 132
    '>'      shift, and go to state 133

    $default  reduce using rule 29 (control)


state 85

   32 expression: function_call .

    $default  reduce using rule 32 (expression)


state 86

   33 expression: infix_expression .

    $default  reduce using rule 33 (expression)


state 87

   34 expression: if_expression .

    $default  reduce using rule 34 (expression)


state 88

   31 expression: value .

    $default  reduce using rule 31 (expression)


state 89

   30 expression: . '(' expression ')'
   31           | . value
   32           | . function_call
   33           | . infix_expression
   34           | . if_expression
   35 function_call: . ID '(' ')'
   36              | . ID '(' parameter_list ')'
   37 infix_expression: . expression '+' expression
   38                 | . expression '-' expression
   39                 | . expression '*' expression
   40                 | . expression '/' expression
   41                 | . expression '%' expression
   42                 | . expression '&' expression
   43                 | . expression LS expression
   44                 | . expression RS expression
   45 if_expression: . expression '>' expression
   46              | . expression '<' expression
   47              | . expression OP_EQ expression
   48              | . expression OP_LE expression
   49              | . expression OP_GE expression
   50              | . expression OP_NE expression
   51              | . expression OP_LOR expression
   52              | . expression OP_LAND expression
   63 cycle: WHILE '(' . if_expression ')' condition_code
   87 value: . ID
   88      | . STRING_VAL
   89      | . NUMBER_VAL
   90      | . DOUBLE_VAL
   91      | . CHAR_VAL
   92      | . TRUE
   93      | . FALSE

    FALSE       shift, and go to state 76
    TRUE        shift, and go to state 77
    NUMBER_VAL  shift, and go to state 78
    DOUBLE_VAL  shift, and go to state 79
    STRING_VAL  shift, and go to state 80
    CHAR_VAL    shift, and go to state 81
    ID          shift, and go to state 82
    '('         shift, and go to state 83

    expression        go to state 134
    function_call     go to state 85
    infix_expression  go to state 86
    if_expression     go to state 135
    value             go to state 88


state 90

   83 assign_operator: ASS_MUL .

    $default  reduce using rule 83 (assign_operator)


state 91

   84 assign_operator: ASS_DIV .

    $default  reduce using rule 84 (assign_operator)


state 92

   81 assign_operator: ASS_ADD .

    $default  reduce using rule 81 (assign_operator)


state 93

   82 assign_operator: ASS_SUB .

    $default  reduce using rule 82 (assign_operator)


state 94

   86 assign_operator: ASS_AND .

    $default  reduce using rule 86 (assign_operator)


state 95

   22 unary: ID OP_INC .

    $default  reduce using rule 22 (unary)


state 96

   24 unary: ID OP_DEC .

    $default  reduce using rule 24 (unary)


state 97

   80 assign_operator: '=' .

    $default  reduce using rule 80 (assign_operator)


state 98

   85 assign_operator: ASS_PERC .

    $default  reduce using rule 85 (assign_operator)


state 99

   21 assignment: ID assign_operator . expression
   30 expression: . '(' expression ')'
   31           | . value
   32           | . function_call
   33           | . infix_expression
   34           | . if_expression
   35 function_call: . ID '(' ')'
   36              | . ID '(' parameter_list ')'
   37 infix_expression: . expression '+' expression
   38                 | . expression '-' expression
   39                 | . expression '*' expression
   40                 | . expression '/' expression
   41                 | . expression '%' expression
   42                 | . expression '&' expression
   43                 | . expression LS expression
   44                 | . expression RS expression
   45 if_expression: . expression '>' expression
   46              | . expression '<' expression
   47              | . expression OP_EQ expression
   48              | . expression OP_LE expression
   49              | . expression OP_GE expression
   50              | . expression OP_NE expression
   51              | . expression OP_LOR expression
   52              | . expression OP_LAND expression
   87 value: . ID
   88      | . STRING_VAL
   89      | . NUMBER_VAL
   90      | . DOUBLE_VAL
   91      | . CHAR_VAL
   92      | . TRUE
   93      | . FALSE

    FALSE       shift, and go to state 76
    TRUE        shift, and go to state 77
    NUMBER_VAL  shift, and go to state 78
    DOUBLE_VAL  shift, and go to state 79
    STRING_VAL  shift, and go to state 80
    CHAR_VAL    shift, and go to state 81
    ID          shift, and go to state 82
    '('         shift, and go to state 83

    expression        go to state 136
    function_call     go to state 85
    infix_expression  go to state 86
    if_expression     go to state 87
    value             go to state 88


state 100

   11 code: '{' operation_list '}' .

    $default  reduce using rule 11 (code)


state 101

   13 operation_list: operation_list operation .

    $default  reduce using rule 13 (operation_list)


state 102

   14 operation: declaration ';' .

    $default  reduce using rule 14 (operation)


state 103

   15 operation: assignment ';' .

    $default  reduce using rule 15 (operation)


state 104

   16 operation: unary ';' .

    $default  reduce using rule 16 (operation)


state 105

   19 operation: control ';' .

    $default  reduce using rule 19 (operation)


state 106

   57 var: ID .  [';', ',']
   58    | ID . '=' expression

    '='  shift, and go to state 137

    $default  reduce using rule 57 (var)


state 107

   20 declaration: type var_list .  [';']
   56 var_list: var_list . ',' var

    ','  shift, and go to state 138

    $default  reduce using rule 20 (declaration)


state 108

   55 var_list: var .

    $default  reduce using rule 55 (var_list)


state 109

   75 condition_code: '{' '}' .

    $default  reduce using rule 75 (condition_code)


state 110

   13 operation_list: operation_list . operation
   14 operation: . declaration ';'
   15          | . assignment ';'
   16          | . unary ';'
   17          | . if
   18          | . cycle
   19          | . control ';'
   20 declaration: . type var_list
   21 assignment: . ID assign_operator expression
   22 unary: . ID OP_INC
   23      | . OP_INC ID
   24      | . ID OP_DEC
   25      | . OP_DEC ID
   26 control: . BREAK
   27        | . CONTINUE
   28        | . RETURN
   29        | . RETURN expression
   62 cycle: . FOR '(' assignment ';' if_expression ';' for_incr ')' condition_code
   63      | . WHILE '(' if_expression ')' condition_code
   64      | . DO condition_code WHILE '(' if_expression ')' ';'
   65 if: . IF '(' expression ')' condition_code
   66   | . IF '(' expression ')' condition_code ELSE condition_code
   67   | . SWITCH '(' expression ')' '{' switch '}'
   72 condition_code: '{' operation_list . '}'
   94 type: . CHAR
   95     | . INT
   96     | . STRING
   97     | . BOOLEAN
   98     | . FLOAT
   99     | . VOID

    BOOLEAN   shift, and go to state 21
    BREAK     shift, and go to state 45
    CHAR      shift, and go to state 22
    CONTINUE  shift, and go to state 46
    DO        shift, and go to state 47
    FLOAT     shift, and go to state 23
    FOR       shift, and go to state 48
    IF        shift, and go to state 49
    INT       shift, and go to state 24
    OP_INC    shift, and go to state 50
    OP_DEC    shift, and go to state 51
    STRING    shift, and go to state 25
    SWITCH    shift, and go to state 52
    RETURN    shift, and go to state 53
    VOID      shift, and go to state 26
    WHILE     shift, and go to state 54
    ID        shift, and go to state 55
    '}'       shift, and go to state 139

    operation    go to state 101
    declaration  go to state 59
    assignment   go to state 60
    unary        go to state 61
    control      go to state 62
    cycle        go to state 63
    if           go to state 64
    type         go to state 65


state 111

   64 cycle: DO condition_code WHILE . '(' if_expression ')' ';'

    '('  shift, and go to state 140


state 112

   21 assignment: ID . assign_operator expression
   80 assign_operator: . '='
   81                | . ASS_ADD
   82                | . ASS_SUB
   83                | . ASS_MUL
   84                | . ASS_DIV
   85                | . ASS_PERC
   86                | . ASS_AND

    ASS_MUL   shift, and go to state 90
    ASS_DIV   shift, and go to state 91
    ASS_ADD   shift, and go to state 92
    ASS_SUB   shift, and go to state 93
    ASS_AND   shift, and go to state 94
    '='       shift, and go to state 97
    ASS_PERC  shift, and go to state 98

    assign_operator  go to state 99


state 113

   62 cycle: FOR '(' assignment . ';' if_expression ';' for_incr ')' condition_code

    ';'  shift, and go to state 141


state 114

   37 infix_expression: expression . '+' expression
   38                 | expression . '-' expression
   39                 | expression . '*' expression
   40                 | expression . '/' expression
   41                 | expression . '%' expression
   42                 | expression . '&' expression
   43                 | expression . LS expression
   44                 | expression . RS expression
   45 if_expression: expression . '>' expression
   46              | expression . '<' expression
   47              | expression . OP_EQ expression
   48              | expression . OP_LE expression
   49              | expression . OP_GE expression
   50              | expression . OP_NE expression
   51              | expression . OP_LOR expression
   52              | expression . OP_LAND expression
   65 if: IF '(' expression . ')' condition_code
   66   | IF '(' expression . ')' condition_code ELSE condition_code

    LS       shift, and go to state 118
    OP_GE    shift, and go to state 119
    OP_LE    shift, and go to state 120
    OP_EQ    shift, and go to state 121
    OP_NE    shift, and go to state 122
    OP_LAND  shift, and go to state 123
    OP_LOR   shift, and go to state 124
    RS       shift, and go to state 125
    '+'      shift, and go to state 126
    '-'      shift, and go to state 127
    '*'      shift, and go to state 128
    '/'      shift, and go to state 129
    '%'      shift, and go to state 130
    '&'      shift, and go to state 131
    ')'      shift, and go to state 142
    '<'      shift, and go to state 132
    '>'      shift, and go to state 133


state 115

   37 infix_expression: expression . '+' expression
   38                 | expression . '-' expression
   39                 | expression . '*' expression
   40                 | expression . '/' expression
   41                 | expression . '%' expression
   42                 | expression . '&' expression
   43                 | expression . LS expression
   44                 | expression . RS expression
   45 if_expression: expression . '>' expression
   46              | expression . '<' expression
   47              | expression . OP_EQ expression
   48              | expression . OP_LE expression
   49              | expression . OP_GE expression
   50              | expression . OP_NE expression
   51              | expression . OP_LOR expression
   52              | expression . OP_LAND expression
   67 if: SWITCH '(' expression . ')' '{' switch '}'

    LS       shift, and go to state 118
    OP_GE    shift, and go to state 119
    OP_LE    shift, and go to state 120
    OP_EQ    shift, and go to state 121
    OP_NE    shift, and go to state 122
    OP_LAND  shift, and go to state 123
    OP_LOR   shift, and go to state 124
    RS       shift, and go to state 125
    '+'      shift, and go to state 126
    '-'      shift, and go to state 127
    '*'      shift, and go to state 128
    '/'      shift, and go to state 129
    '%'      shift, and go to state 130
    '&'      shift, and go to state 131
    ')'      shift, and go to state 143
    '<'      shift, and go to state 132
    '>'      shift, and go to state 133


state 116

   30 expression: . '(' expression ')'
   31           | . value
   32           | . function_call
   33           | . infix_expression
   34           | . if_expression
   35 function_call: . ID '(' ')'
   35              | ID '(' . ')'
   36              | . ID '(' parameter_list ')'
   36              | ID '(' . parameter_list ')'
   37 infix_expression: . expression '+' expression
   38                 | . expression '-' expression
   39                 | . expression '*' expression
   40                 | . expression '/' expression
   41                 | . expression '%' expression
   42                 | . expression '&' expression
   43                 | . expression LS expression
   44                 | . expression RS expression
   45 if_expression: . expression '>' expression
   46              | . expression '<' expression
   47              | . expression OP_EQ expression
   48              | . expression OP_LE expression
   49              | . expression OP_GE expression
   50              | . expression OP_NE expression
   51              | . expression OP_LOR expression
   52              | . expression OP_LAND expression
   53 parameter_list: . expression
   54               | . parameter_list ',' expression
   87 value: . ID
   88      | . STRING_VAL
   89      | . NUMBER_VAL
   90      | . DOUBLE_VAL
   91      | . CHAR_VAL
   92      | . TRUE
   93      | . FALSE

    FALSE       shift, and go to state 76
    TRUE        shift, and go to state 77
    NUMBER_VAL  shift, and go to state 78
    DOUBLE_VAL  shift, and go to state 79
    STRING_VAL  shift, and go to state 80
    CHAR_VAL    shift, and go to state 81
    ID          shift, and go to state 82
    '('         shift, and go to state 83
    ')'         shift, and go to state 144

    expression        go to state 145
    function_call     go to state 85
    infix_expression  go to state 86
    if_expression     go to state 87
    parameter_list    go to state 146
    value             go to state 88


state 117

   30 expression: '(' expression . ')'
   37 infix_expression: expression . '+' expression
   38                 | expression . '-' expression
   39                 | expression . '*' expression
   40                 | expression . '/' expression
   41                 | expression . '%' expression
   42                 | expression . '&' expression
   43                 | expression . LS expression
   44                 | expression . RS expression
   45 if_expression: expression . '>' expression
   46              | expression . '<' expression
   47              | expression . OP_EQ expression
   48              | expression . OP_LE expression
   49              | expression . OP_GE expression
   50              | expression . OP_NE expression
   51              | expression . OP_LOR expression
   52              | expression . OP_LAND expression

    LS       shift, and go to state 118
    OP_GE    shift, and go to state 119
    OP_LE    shift, and go to state 120
    OP_EQ    shift, and go to state 121
    OP_NE    shift, and go to state 122
    OP_LAND  shift, and go to state 123
    OP_LOR   shift, and go to state 124
    RS       shift, and go to state 125
    '+'      shift, and go to state 126
    '-'      shift, and go to state 127
    '*'      shift, and go to state 128
    '/'      shift, and go to state 129
    '%'      shift, and go to state 130
    '&'      shift, and go to state 131
    ')'      shift, and go to state 147
    '<'      shift, and go to state 132
    '>'      shift, and go to state 133


state 118

   30 expression: . '(' expression ')'
   31           | . value
   32           | . function_call
   33           | . infix_expression
   34           | . if_expression
   35 function_call: . ID '(' ')'
   36              | . ID '(' parameter_list ')'
   37 infix_expression: . expression '+' expression
   38                 | . expression '-' expression
   39                 | . expression '*' expression
   40                 | . expression '/' expression
   41                 | . expression '%' expression
   42                 | . expression '&' expression
   43                 | . expression LS expression
   43                 | expression LS . expression
   44                 | . expression RS expression
   45 if_expression: . expression '>' expression
   46              | . expression '<' expression
   47              | . expression OP_EQ expression
   48              | . expression OP_LE expression
   49              | . expression OP_GE expression
   50              | . expression OP_NE expression
   51              | . expression OP_LOR expression
   52              | . expression OP_LAND expression
   87 value: . ID
   88      | . STRING_VAL
   89      | . NUMBER_VAL
   90      | . DOUBLE_VAL
   91      | . CHAR_VAL
   92      | . TRUE
   93      | . FALSE

    FALSE       shift, and go to state 76
    TRUE        shift, and go to state 77
    NUMBER_VAL  shift, and go to state 78
    DOUBLE_VAL  shift, and go to state 79
    STRING_VAL  shift, and go to state 80
    CHAR_VAL    shift, and go to state 81
    ID          shift, and go to state 82
    '('         shift, and go to state 83

    expression        go to state 148
    function_call     go to state 85
    infix_expression  go to state 86
    if_expression     go to state 87
    value             go to state 88


state 119

   30 expression: . '(' expression ')'
   31           | . value
   32           | . function_call
   33           | . infix_expression
   34           | . if_expression
   35 function_call: . ID '(' ')'
   36              | . ID '(' parameter_list ')'
   37 infix_expression: . expression '+' expression
   38                 | . expression '-' expression
   39                 | . expression '*' expression
   40                 | . expression '/' expression
   41                 | . expression '%' expression
   42                 | . expression '&' expression
   43                 | . expression LS expression
   44                 | . expression RS expression
   45 if_expression: . expression '>' expression
   46              | . expression '<' expression
   47              | . expression OP_EQ expression
   48              | . expression OP_LE expression
   49              | . expression OP_GE expression
   49              | expression OP_GE . expression
   50              | . expression OP_NE expression
   51              | . expression OP_LOR expression
   52              | . expression OP_LAND expression
   87 value: . ID
   88      | . STRING_VAL
   89      | . NUMBER_VAL
   90      | . DOUBLE_VAL
   91      | . CHAR_VAL
   92      | . TRUE
   93      | . FALSE

    FALSE       shift, and go to state 76
    TRUE        shift, and go to state 77
    NUMBER_VAL  shift, and go to state 78
    DOUBLE_VAL  shift, and go to state 79
    STRING_VAL  shift, and go to state 80
    CHAR_VAL    shift, and go to state 81
    ID          shift, and go to state 82
    '('         shift, and go to state 83

    expression        go to state 149
    function_call     go to state 85
    infix_expression  go to state 86
    if_expression     go to state 87
    value             go to state 88


state 120

   30 expression: . '(' expression ')'
   31           | . value
   32           | . function_call
   33           | . infix_expression
   34           | . if_expression
   35 function_call: . ID '(' ')'
   36              | . ID '(' parameter_list ')'
   37 infix_expression: . expression '+' expression
   38                 | . expression '-' expression
   39                 | . expression '*' expression
   40                 | . expression '/' expression
   41                 | . expression '%' expression
   42                 | . expression '&' expression
   43                 | . expression LS expression
   44                 | . expression RS expression
   45 if_expression: . expression '>' expression
   46              | . expression '<' expression
   47              | . expression OP_EQ expression
   48              | . expression OP_LE expression
   48              | expression OP_LE . expression
   49              | . expression OP_GE expression
   50              | . expression OP_NE expression
   51              | . expression OP_LOR expression
   52              | . expression OP_LAND expression
   87 value: . ID
   88      | . STRING_VAL
   89      | . NUMBER_VAL
   90      | . DOUBLE_VAL
   91      | . CHAR_VAL
   92      | . TRUE
   93      | . FALSE

    FALSE       shift, and go to state 76
    TRUE        shift, and go to state 77
    NUMBER_VAL  shift, and go to state 78
    DOUBLE_VAL  shift, and go to state 79
    STRING_VAL  shift, and go to state 80
    CHAR_VAL    shift, and go to state 81
    ID          shift, and go to state 82
    '('         shift, and go to state 83

    expression        go to state 150
    function_call     go to state 85
    infix_expression  go to state 86
    if_expression     go to state 87
    value             go to state 88


state 121

   30 expression: . '(' expression ')'
   31           | . value
   32           | . function_call
   33           | . infix_expression
   34           | . if_expression
   35 function_call: . ID '(' ')'
   36              | . ID '(' parameter_list ')'
   37 infix_expression: . expression '+' expression
   38                 | . expression '-' expression
   39                 | . expression '*' expression
   40                 | . expression '/' expression
   41                 | . expression '%' expression
   42                 | . expression '&' expression
   43                 | . expression LS expression
   44                 | . expression RS expression
   45 if_expression: . expression '>' expression
   46              | . expression '<' expression
   47              | . expression OP_EQ expression
   47              | expression OP_EQ . expression
   48              | . expression OP_LE expression
   49              | . expression OP_GE expression
   50              | . expression OP_NE expression
   51              | . expression OP_LOR expression
   52              | . expression OP_LAND expression
   87 value: . ID
   88      | . STRING_VAL
   89      | . NUMBER_VAL
   90      | . DOUBLE_VAL
   91      | . CHAR_VAL
   92      | . TRUE
   93      | . FALSE

    FALSE       shift, and go to state 76
    TRUE        shift, and go to state 77
    NUMBER_VAL  shift, and go to state 78
    DOUBLE_VAL  shift, and go to state 79
    STRING_VAL  shift, and go to state 80
    CHAR_VAL    shift, and go to state 81
    ID          shift, and go to state 82
    '('         shift, and go to state 83

    expression        go to state 151
    function_call     go to state 85
    infix_expression  go to state 86
    if_expression     go to state 87
    value             go to state 88


state 122

   30 expression: . '(' expression ')'
   31           | . value
   32           | . function_call
   33           | . infix_expression
   34           | . if_expression
   35 function_call: . ID '(' ')'
   36              | . ID '(' parameter_list ')'
   37 infix_expression: . expression '+' expression
   38                 | . expression '-' expression
   39                 | . expression '*' expression
   40                 | . expression '/' expression
   41                 | . expression '%' expression
   42                 | . expression '&' expression
   43                 | . expression LS expression
   44                 | . expression RS expression
   45 if_expression: . expression '>' expression
   46              | . expression '<' expression
   47              | . expression OP_EQ expression
   48              | . expression OP_LE expression
   49              | . expression OP_GE expression
   50              | . expression OP_NE expression
   50              | expression OP_NE . expression
   51              | . expression OP_LOR expression
   52              | . expression OP_LAND expression
   87 value: . ID
   88      | . STRING_VAL
   89      | . NUMBER_VAL
   90      | . DOUBLE_VAL
   91      | . CHAR_VAL
   92      | . TRUE
   93      | . FALSE

    FALSE       shift, and go to state 76
    TRUE        shift, and go to state 77
    NUMBER_VAL  shift, and go to state 78
    DOUBLE_VAL  shift, and go to state 79
    STRING_VAL  shift, and go to state 80
    CHAR_VAL    shift, and go to state 81
    ID          shift, and go to state 82
    '('         shift, and go to state 83

    expression        go to state 152
    function_call     go to state 85
    infix_expression  go to state 86
    if_expression     go to state 87
    value             go to state 88


state 123

   30 expression: . '(' expression ')'
   31           | . value
   32           | . function_call
   33           | . infix_expression
   34           | . if_expression
   35 function_call: . ID '(' ')'
   36              | . ID '(' parameter_list ')'
   37 infix_expression: . expression '+' expression
   38                 | . expression '-' expression
   39                 | . expression '*' expression
   40                 | . expression '/' expression
   41                 | . expression '%' expression
   42                 | . expression '&' expression
   43                 | . expression LS expression
   44                 | . expression RS expression
   45 if_expression: . expression '>' expression
   46              | . expression '<' expression
   47              | . expression OP_EQ expression
   48              | . expression OP_LE expression
   49              | . expression OP_GE expression
   50              | . expression OP_NE expression
   51              | . expression OP_LOR expression
   52              | . expression OP_LAND expression
   52              | expression OP_LAND . expression
   87 value: . ID
   88      | . STRING_VAL
   89      | . NUMBER_VAL
   90      | . DOUBLE_VAL
   91      | . CHAR_VAL
   92      | . TRUE
   93      | . FALSE

    FALSE       shift, and go to state 76
    TRUE        shift, and go to state 77
    NUMBER_VAL  shift, and go to state 78
    DOUBLE_VAL  shift, and go to state 79
    STRING_VAL  shift, and go to state 80
    CHAR_VAL    shift, and go to state 81
    ID          shift, and go to state 82
    '('         shift, and go to state 83

    expression        go to state 153
    function_call     go to state 85
    infix_expression  go to state 86
    if_expression     go to state 87
    value             go to state 88


state 124

   30 expression: . '(' expression ')'
   31           | . value
   32           | . function_call
   33           | . infix_expression
   34           | . if_expression
   35 function_call: . ID '(' ')'
   36              | . ID '(' parameter_list ')'
   37 infix_expression: . expression '+' expression
   38                 | . expression '-' expression
   39                 | . expression '*' expression
   40                 | . expression '/' expression
   41                 | . expression '%' expression
   42                 | . expression '&' expression
   43                 | . expression LS expression
   44                 | . expression RS expression
   45 if_expression: . expression '>' expression
   46              | . expression '<' expression
   47              | . expression OP_EQ expression
   48              | . expression OP_LE expression
   49              | . expression OP_GE expression
   50              | . expression OP_NE expression
   51              | . expression OP_LOR expression
   51              | expression OP_LOR . expression
   52              | . expression OP_LAND expression
   87 value: . ID
   88      | . STRING_VAL
   89      | . NUMBER_VAL
   90      | . DOUBLE_VAL
   91      | . CHAR_VAL
   92      | . TRUE
   93      | . FALSE

    FALSE       shift, and go to state 76
    TRUE        shift, and go to state 77
    NUMBER_VAL  shift, and go to state 78
    DOUBLE_VAL  shift, and go to state 79
    STRING_VAL  shift, and go to state 80
    CHAR_VAL    shift, and go to state 81
    ID          shift, and go to state 82
    '('         shift, and go to state 83

    expression        go to state 154
    function_call     go to state 85
    infix_expression  go to state 86
    if_expression     go to state 87
    value             go to state 88


state 125

   30 expression: . '(' expression ')'
   31           | . value
   32           | . function_call
   33           | . infix_expression
   34           | . if_expression
   35 function_call: . ID '(' ')'
   36              | . ID '(' parameter_list ')'
   37 infix_expression: . expression '+' expression
   38                 | . expression '-' expression
   39                 | . expression '*' expression
   40                 | . expression '/' expression
   41                 | . expression '%' expression
   42                 | . expression '&' expression
   43                 | . expression LS expression
   44                 | . expression RS expression
   44                 | expression RS . expression
   45 if_expression: . expression '>' expression
   46              | . expression '<' expression
   47              | . expression OP_EQ expression
   48              | . expression OP_LE expression
   49              | . expression OP_GE expression
   50              | . expression OP_NE expression
   51              | . expression OP_LOR expression
   52              | . expression OP_LAND expression
   87 value: . ID
   88      | . STRING_VAL
   89      | . NUMBER_VAL
   90      | . DOUBLE_VAL
   91      | . CHAR_VAL
   92      | . TRUE
   93      | . FALSE

    FALSE       shift, and go to state 76
    TRUE        shift, and go to state 77
    NUMBER_VAL  shift, and go to state 78
    DOUBLE_VAL  shift, and go to state 79
    STRING_VAL  shift, and go to state 80
    CHAR_VAL    shift, and go to state 81
    ID          shift, and go to state 82
    '('         shift, and go to state 83

    expression        go to state 155
    function_call     go to state 85
    infix_expression  go to state 86
    if_expression     go to state 87
    value             go to state 88


state 126

   30 expression: . '(' expression ')'
   31           | . value
   32           | . function_call
   33           | . infix_expression
   34           | . if_expression
   35 function_call: . ID '(' ')'
   36              | . ID '(' parameter_list ')'
   37 infix_expression: . expression '+' expression
   37                 | expression '+' . expression
   38                 | . expression '-' expression
   39                 | . expression '*' expression
   40                 | . expression '/' expression
   41                 | . expression '%' expression
   42                 | . expression '&' expression
   43                 | . expression LS expression
   44                 | . expression RS expression
   45 if_expression: . expression '>' expression
   46              | . expression '<' expression
   47              | . expression OP_EQ expression
   48              | . expression OP_LE expression
   49              | . expression OP_GE expression
   50              | . expression OP_NE expression
   51              | . expression OP_LOR expression
   52              | . expression OP_LAND expression
   87 value: . ID
   88      | . STRING_VAL
   89      | . NUMBER_VAL
   90      | . DOUBLE_VAL
   91      | . CHAR_VAL
   92      | . TRUE
   93      | . FALSE

    FALSE       shift, and go to state 76
    TRUE        shift, and go to state 77
    NUMBER_VAL  shift, and go to state 78
    DOUBLE_VAL  shift, and go to state 79
    STRING_VAL  shift, and go to state 80
    CHAR_VAL    shift, and go to state 81
    ID          shift, and go to state 82
    '('         shift, and go to state 83

    expression        go to state 156
    function_call     go to state 85
    infix_expression  go to state 86
    if_expression     go to state 87
    value             go to state 88


state 127

   30 expression: . '(' expression ')'
   31           | . value
   32           | . function_call
   33           | . infix_expression
   34           | . if_expression
   35 function_call: . ID '(' ')'
   36              | . ID '(' parameter_list ')'
   37 infix_expression: . expression '+' expression
   38                 | . expression '-' expression
   38                 | expression '-' . expression
   39                 | . expression '*' expression
   40                 | . expression '/' expression
   41                 | . expression '%' expression
   42                 | . expression '&' expression
   43                 | . expression LS expression
   44                 | . expression RS expression
   45 if_expression: . expression '>' expression
   46              | . expression '<' expression
   47              | . expression OP_EQ expression
   48              | . expression OP_LE expression
   49              | . expression OP_GE expression
   50              | . expression OP_NE expression
   51              | . expression OP_LOR expression
   52              | . expression OP_LAND expression
   87 value: . ID
   88      | . STRING_VAL
   89      | . NUMBER_VAL
   90      | . DOUBLE_VAL
   91      | . CHAR_VAL
   92      | . TRUE
   93      | . FALSE

    FALSE       shift, and go to state 76
    TRUE        shift, and go to state 77
    NUMBER_VAL  shift, and go to state 78
    DOUBLE_VAL  shift, and go to state 79
    STRING_VAL  shift, and go to state 80
    CHAR_VAL    shift, and go to state 81
    ID          shift, and go to state 82
    '('         shift, and go to state 83

    expression        go to state 157
    function_call     go to state 85
    infix_expression  go to state 86
    if_expression     go to state 87
    value             go to state 88


state 128

   30 expression: . '(' expression ')'
   31           | . value
   32           | . function_call
   33           | . infix_expression
   34           | . if_expression
   35 function_call: . ID '(' ')'
   36              | . ID '(' parameter_list ')'
   37 infix_expression: . expression '+' expression
   38                 | . expression '-' expression
   39                 | . expression '*' expression
   39                 | expression '*' . expression
   40                 | . expression '/' expression
   41                 | . expression '%' expression
   42                 | . expression '&' expression
   43                 | . expression LS expression
   44                 | . expression RS expression
   45 if_expression: . expression '>' expression
   46              | . expression '<' expression
   47              | . expression OP_EQ expression
   48              | . expression OP_LE expression
   49              | . expression OP_GE expression
   50              | . expression OP_NE expression
   51              | . expression OP_LOR expression
   52              | . expression OP_LAND expression
   87 value: . ID
   88      | . STRING_VAL
   89      | . NUMBER_VAL
   90      | . DOUBLE_VAL
   91      | . CHAR_VAL
   92      | . TRUE
   93      | . FALSE

    FALSE       shift, and go to state 76
    TRUE        shift, and go to state 77
    NUMBER_VAL  shift, and go to state 78
    DOUBLE_VAL  shift, and go to state 79
    STRING_VAL  shift, and go to state 80
    CHAR_VAL    shift, and go to state 81
    ID          shift, and go to state 82
    '('         shift, and go to state 83

    expression        go to state 158
    function_call     go to state 85
    infix_expression  go to state 86
    if_expression     go to state 87
    value             go to state 88


state 129

   30 expression: . '(' expression ')'
   31           | . value
   32           | . function_call
   33           | . infix_expression
   34           | . if_expression
   35 function_call: . ID '(' ')'
   36              | . ID '(' parameter_list ')'
   37 infix_expression: . expression '+' expression
   38                 | . expression '-' expression
   39                 | . expression '*' expression
   40                 | . expression '/' expression
   40                 | expression '/' . expression
   41                 | . expression '%' expression
   42                 | . expression '&' expression
   43                 | . expression LS expression
   44                 | . expression RS expression
   45 if_expression: . expression '>' expression
   46              | . expression '<' expression
   47              | . expression OP_EQ expression
   48              | . expression OP_LE expression
   49              | . expression OP_GE expression
   50              | . expression OP_NE expression
   51              | . expression OP_LOR expression
   52              | . expression OP_LAND expression
   87 value: . ID
   88      | . STRING_VAL
   89      | . NUMBER_VAL
   90      | . DOUBLE_VAL
   91      | . CHAR_VAL
   92      | . TRUE
   93      | . FALSE

    FALSE       shift, and go to state 76
    TRUE        shift, and go to state 77
    NUMBER_VAL  shift, and go to state 78
    DOUBLE_VAL  shift, and go to state 79
    STRING_VAL  shift, and go to state 80
    CHAR_VAL    shift, and go to state 81
    ID          shift, and go to state 82
    '('         shift, and go to state 83

    expression        go to state 159
    function_call     go to state 85
    infix_expression  go to state 86
    if_expression     go to state 87
    value             go to state 88


state 130

   30 expression: . '(' expression ')'
   31           | . value
   32           | . function_call
   33           | . infix_expression
   34           | . if_expression
   35 function_call: . ID '(' ')'
   36              | . ID '(' parameter_list ')'
   37 infix_expression: . expression '+' expression
   38                 | . expression '-' expression
   39                 | . expression '*' expression
   40                 | . expression '/' expression
   41                 | . expression '%' expression
   41                 | expression '%' . expression
   42                 | . expression '&' expression
   43                 | . expression LS expression
   44                 | . expression RS expression
   45 if_expression: . expression '>' expression
   46              | . expression '<' expression
   47              | . expression OP_EQ expression
   48              | . expression OP_LE expression
   49              | . expression OP_GE expression
   50              | . expression OP_NE expression
   51              | . expression OP_LOR expression
   52              | . expression OP_LAND expression
   87 value: . ID
   88      | . STRING_VAL
   89      | . NUMBER_VAL
   90      | . DOUBLE_VAL
   91      | . CHAR_VAL
   92      | . TRUE
   93      | . FALSE

    FALSE       shift, and go to state 76
    TRUE        shift, and go to state 77
    NUMBER_VAL  shift, and go to state 78
    DOUBLE_VAL  shift, and go to state 79
    STRING_VAL  shift, and go to state 80
    CHAR_VAL    shift, and go to state 81
    ID          shift, and go to state 82
    '('         shift, and go to state 83

    expression        go to state 160
    function_call     go to state 85
    infix_expression  go to state 86
    if_expression     go to state 87
    value             go to state 88


state 131

   30 expression: . '(' expression ')'
   31           | . value
   32           | . function_call
   33           | . infix_expression
   34           | . if_expression
   35 function_call: . ID '(' ')'
   36              | . ID '(' parameter_list ')'
   37 infix_expression: . expression '+' expression
   38                 | . expression '-' expression
   39                 | . expression '*' expression
   40                 | . expression '/' expression
   41                 | . expression '%' expression
   42                 | . expression '&' expression
   42                 | expression '&' . expression
   43                 | . expression LS expression
   44                 | . expression RS expression
   45 if_expression: . expression '>' expression
   46              | . expression '<' expression
   47              | . expression OP_EQ expression
   48              | . expression OP_LE expression
   49              | . expression OP_GE expression
   50              | . expression OP_NE expression
   51              | . expression OP_LOR expression
   52              | . expression OP_LAND expression
   87 value: . ID
   88      | . STRING_VAL
   89      | . NUMBER_VAL
   90      | . DOUBLE_VAL
   91      | . CHAR_VAL
   92      | . TRUE
   93      | . FALSE

    FALSE       shift, and go to state 76
    TRUE        shift, and go to state 77
    NUMBER_VAL  shift, and go to state 78
    DOUBLE_VAL  shift, and go to state 79
    STRING_VAL  shift, and go to state 80
    CHAR_VAL    shift, and go to state 81
    ID          shift, and go to state 82
    '('         shift, and go to state 83

    expression        go to state 161
    function_call     go to state 85
    infix_expression  go to state 86
    if_expression     go to state 87
    value             go to state 88


state 132

   30 expression: . '(' expression ')'
   31           | . value
   32           | . function_call
   33           | . infix_expression
   34           | . if_expression
   35 function_call: . ID '(' ')'
   36              | . ID '(' parameter_list ')'
   37 infix_expression: . expression '+' expression
   38                 | . expression '-' expression
   39                 | . expression '*' expression
   40                 | . expression '/' expression
   41                 | . expression '%' expression
   42                 | . expression '&' expression
   43                 | . expression LS expression
   44                 | . expression RS expression
   45 if_expression: . expression '>' expression
   46              | . expression '<' expression
   46              | expression '<' . expression
   47              | . expression OP_EQ expression
   48              | . expression OP_LE expression
   49              | . expression OP_GE expression
   50              | . expression OP_NE expression
   51              | . expression OP_LOR expression
   52              | . expression OP_LAND expression
   87 value: . ID
   88      | . STRING_VAL
   89      | . NUMBER_VAL
   90      | . DOUBLE_VAL
   91      | . CHAR_VAL
   92      | . TRUE
   93      | . FALSE

    FALSE       shift, and go to state 76
    TRUE        shift, and go to state 77
    NUMBER_VAL  shift, and go to state 78
    DOUBLE_VAL  shift, and go to state 79
    STRING_VAL  shift, and go to state 80
    CHAR_VAL    shift, and go to state 81
    ID          shift, and go to state 82
    '('         shift, and go to state 83

    expression        go to state 162
    function_call     go to state 85
    infix_expression  go to state 86
    if_expression     go to state 87
    value             go to state 88


state 133

   30 expression: . '(' expression ')'
   31           | . value
   32           | . function_call
   33           | . infix_expression
   34           | . if_expression
   35 function_call: . ID '(' ')'
   36              | . ID '(' parameter_list ')'
   37 infix_expression: . expression '+' expression
   38                 | . expression '-' expression
   39                 | . expression '*' expression
   40                 | . expression '/' expression
   41                 | . expression '%' expression
   42                 | . expression '&' expression
   43                 | . expression LS expression
   44                 | . expression RS expression
   45 if_expression: . expression '>' expression
   45              | expression '>' . expression
   46              | . expression '<' expression
   47              | . expression OP_EQ expression
   48              | . expression OP_LE expression
   49              | . expression OP_GE expression
   50              | . expression OP_NE expression
   51              | . expression OP_LOR expression
   52              | . expression OP_LAND expression
   87 value: . ID
   88      | . STRING_VAL
   89      | . NUMBER_VAL
   90      | . DOUBLE_VAL
   91      | . CHAR_VAL
   92      | . TRUE
   93      | . FALSE

    FALSE       shift, and go to state 76
    TRUE        shift, and go to state 77
    NUMBER_VAL  shift, and go to state 78
    DOUBLE_VAL  shift, and go to state 79
    STRING_VAL  shift, and go to state 80
    CHAR_VAL    shift, and go to state 81
    ID          shift, and go to state 82
    '('         shift, and go to state 83

    expression        go to state 163
    function_call     go to state 85
    infix_expression  go to state 86
    if_expression     go to state 87
    value             go to state 88


state 134

   37 infix_expression: expression . '+' expression
   38                 | expression . '-' expression
   39                 | expression . '*' expression
   40                 | expression . '/' expression
   41                 | expression . '%' expression
   42                 | expression . '&' expression
   43                 | expression . LS expression
   44                 | expression . RS expression
   45 if_expression: expression . '>' expression
   46              | expression . '<' expression
   47              | expression . OP_EQ expression
   48              | expression . OP_LE expression
   49              | expression . OP_GE expression
   50              | expression . OP_NE expression
   51              | expression . OP_LOR expression
   52              | expression . OP_LAND expression

    LS       shift, and go to state 118
    OP_GE    shift, and go to state 119
    OP_LE    shift, and go to state 120
    OP_EQ    shift, and go to state 121
    OP_NE    shift, and go to state 122
    OP_LAND  shift, and go to state 123
    OP_LOR   shift, and go to state 124
    RS       shift, and go to state 125
    '+'      shift, and go to state 126
    '-'      shift, and go to state 127
    '*'      shift, and go to state 128
    '/'      shift, and go to state 129
    '%'      shift, and go to state 130
    '&'      shift, and go to state 131
    '<'      shift, and go to state 132
    '>'      shift, and go to state 133


state 135

   34 expression: if_expression .  [LS, OP_GE, OP_LE, OP_EQ, OP_NE, OP_LAND, OP_LOR, RS, '+', '-', '*', '/', '%', '&', '<', '>']
   63 cycle: WHILE '(' if_expression . ')' condition_code

    ')'  shift, and go to state 164

    $default  reduce using rule 34 (expression)


state 136

   21 assignment: ID assign_operator expression .  [')', ';', ',']
   37 infix_expression: expression . '+' expression
   38                 | expression . '-' expression
   39                 | expression . '*' expression
   40                 | expression . '/' expression
   41                 | expression . '%' expression
   42                 | expression . '&' expression
   43                 | expression . LS expression
   44                 | expression . RS expression
   45 if_expression: expression . '>' expression
   46              | expression . '<' expression
   47              | expression . OP_EQ expression
   48              | expression . OP_LE expression
   49              | expression . OP_GE expression
   50              | expression . OP_NE expression
   51              | expression . OP_LOR expression
   52              | expression . OP_LAND expression

    LS       shift, and go to state 118
    OP_GE    shift, and go to state 119
    OP_LE    shift, and go to state 120
    OP_EQ    shift, and go to state 121
    OP_NE    shift, and go to state 122
    OP_LAND  shift, and go to state 123
    OP_LOR   shift, and go to state 124
    RS       shift, and go to state 125
    '+'      shift, and go to state 126
    '-'      shift, and go to state 127
    '*'      shift, and go to state 128
    '/'      shift, and go to state 129
    '%'      shift, and go to state 130
    '&'      shift, and go to state 131
    '<'      shift, and go to state 132
    '>'      shift, and go to state 133

    $default  reduce using rule 21 (assignment)


state 137

   30 expression: . '(' expression ')'
   31           | . value
   32           | . function_call
   33           | . infix_expression
   34           | . if_expression
   35 function_call: . ID '(' ')'
   36              | . ID '(' parameter_list ')'
   37 infix_expression: . expression '+' expression
   38                 | . expression '-' expression
   39                 | . expression '*' expression
   40                 | . expression '/' expression
   41                 | . expression '%' expression
   42                 | . expression '&' expression
   43                 | . expression LS expression
   44                 | . expression RS expression
   45 if_expression: . expression '>' expression
   46              | . expression '<' expression
   47              | . expression OP_EQ expression
   48              | . expression OP_LE expression
   49              | . expression OP_GE expression
   50              | . expression OP_NE expression
   51              | . expression OP_LOR expression
   52              | . expression OP_LAND expression
   58 var: ID '=' . expression
   87 value: . ID
   88      | . STRING_VAL
   89      | . NUMBER_VAL
   90      | . DOUBLE_VAL
   91      | . CHAR_VAL
   92      | . TRUE
   93      | . FALSE

    FALSE       shift, and go to state 76
    TRUE        shift, and go to state 77
    NUMBER_VAL  shift, and go to state 78
    DOUBLE_VAL  shift, and go to state 79
    STRING_VAL  shift, and go to state 80
    CHAR_VAL    shift, and go to state 81
    ID          shift, and go to state 82
    '('         shift, and go to state 83

    expression        go to state 165
    function_call     go to state 85
    infix_expression  go to state 86
    if_expression     go to state 87
    value             go to state 88


state 138

   56 var_list: var_list ',' . var
   57 var: . ID
   58    | . ID '=' expression

    ID  shift, and go to state 106

    var  go to state 166


state 139

   72 condition_code: '{' operation_list '}' .

    $default  reduce using rule 72 (condition_code)


state 140

   30 expression: . '(' expression ')'
   31           | . value
   32           | . function_call
   33           | . infix_expression
   34           | . if_expression
   35 function_call: . ID '(' ')'
   36              | . ID '(' parameter_list ')'
   37 infix_expression: . expression '+' expression
   38                 | . expression '-' expression
   39                 | . expression '*' expression
   40                 | . expression '/' expression
   41                 | . expression '%' expression
   42                 | . expression '&' expression
   43                 | . expression LS expression
   44                 | . expression RS expression
   45 if_expression: . expression '>' expression
   46              | . expression '<' expression
   47              | . expression OP_EQ expression
   48              | . expression OP_LE expression
   49              | . expression OP_GE expression
   50              | . expression OP_NE expression
   51              | . expression OP_LOR expression
   52              | . expression OP_LAND expression
   64 cycle: DO condition_code WHILE '(' . if_expression ')' ';'
   87 value: . ID
   88      | . STRING_VAL
   89      | . NUMBER_VAL
   90      | . DOUBLE_VAL
   91      | . CHAR_VAL
   92      | . TRUE
   93      | . FALSE

    FALSE       shift, and go to state 76
    TRUE        shift, and go to state 77
    NUMBER_VAL  shift, and go to state 78
    DOUBLE_VAL  shift, and go to state 79
    STRING_VAL  shift, and go to state 80
    CHAR_VAL    shift, and go to state 81
    ID          shift, and go to state 82
    '('         shift, and go to state 83

    expression        go to state 134
    function_call     go to state 85
    infix_expression  go to state 86
    if_expression     go to state 167
    value             go to state 88


state 141

   30 expression: . '(' expression ')'
   31           | . value
   32           | . function_call
   33           | . infix_expression
   34           | . if_expression
   35 function_call: . ID '(' ')'
   36              | . ID '(' parameter_list ')'
   37 infix_expression: . expression '+' expression
   38                 | . expression '-' expression
   39                 | . expression '*' expression
   40                 | . expression '/' expression
   41                 | . expression '%' expression
   42                 | . expression '&' expression
   43                 | . expression LS expression
   44                 | . expression RS expression
   45 if_expression: . expression '>' expression
   46              | . expression '<' expression
   47              | . expression OP_EQ expression
   48              | . expression OP_LE expression
   49              | . expression OP_GE expression
   50              | . expression OP_NE expression
   51              | . expression OP_LOR expression
   52              | . expression OP_LAND expression
   62 cycle: FOR '(' assignment ';' . if_expression ';' for_incr ')' condition_code
   87 value: . ID
   88      | . STRING_VAL
   89      | . NUMBER_VAL
   90      | . DOUBLE_VAL
   91      | . CHAR_VAL
   92      | . TRUE
   93      | . FALSE

    FALSE       shift, and go to state 76
    TRUE        shift, and go to state 77
    NUMBER_VAL  shift, and go to state 78
    DOUBLE_VAL  shift, and go to state 79
    STRING_VAL  shift, and go to state 80
    CHAR_VAL    shift, and go to state 81
    ID          shift, and go to state 82
    '('         shift, and go to state 83

    expression        go to state 134
    function_call     go to state 85
    infix_expression  go to state 86
    if_expression     go to state 168
    value             go to state 88


state 142

   14 operation: . declaration ';'
   15          | . assignment ';'
   16          | . unary ';'
   17          | . if
   18          | . cycle
   19          | . control ';'
   20 declaration: . type var_list
   21 assignment: . ID assign_operator expression
   22 unary: . ID OP_INC
   23      | . OP_INC ID
   24      | . ID OP_DEC
   25      | . OP_DEC ID
   26 control: . BREAK
   27        | . CONTINUE
   28        | . RETURN
   29        | . RETURN expression
   62 cycle: . FOR '(' assignment ';' if_expression ';' for_incr ')' condition_code
   63      | . WHILE '(' if_expression ')' condition_code
   64      | . DO condition_code WHILE '(' if_expression ')' ';'
   65 if: . IF '(' expression ')' condition_code
   65   | IF '(' expression ')' . condition_code
   66   | . IF '(' expression ')' condition_code ELSE condition_code
   66   | IF '(' expression ')' . condition_code ELSE condition_code
   67   | . SWITCH '(' expression ')' '{' switch '}'
   72 condition_code: . '{' operation_list '}'
   73               | . operation
   74               | . ';'
   75               | . '{' '}'
   94 type: . CHAR
   95     | . INT
   96     | . STRING
   97     | . BOOLEAN
   98     | . FLOAT
   99     | . VOID

    BOOLEAN   shift, and go to state 21
    BREAK     shift, and go to state 45
    CHAR      shift, and go to state 22
    CONTINUE  shift, and go to state 46
    DO        shift, and go to state 47
    FLOAT     shift, and go to state 23
    FOR       shift, and go to state 48
    IF        shift, and go to state 49
    INT       shift, and go to state 24
    OP_INC    shift, and go to state 50
    OP_DEC    shift, and go to state 51
    STRING    shift, and go to state 25
    SWITCH    shift, and go to state 52
    RETURN    shift, and go to state 53
    VOID      shift, and go to state 26
    WHILE     shift, and go to state 54
    ID        shift, and go to state 55
    '{'       shift, and go to state 67
    ';'       shift, and go to state 68

    operation       go to state 69
    declaration     go to state 59
    assignment      go to state 60
    unary           go to state 61
    control         go to state 62
    cycle           go to state 63
    if              go to state 64
    condition_code  go to state 169
    type            go to state 65


state 143

   67 if: SWITCH '(' expression ')' . '{' switch '}'

    '{'  shift, and go to state 170


state 144

   35 function_call: ID '(' ')' .

    $default  reduce using rule 35 (function_call)


state 145

   37 infix_expression: expression . '+' expression
   38                 | expression . '-' expression
   39                 | expression . '*' expression
   40                 | expression . '/' expression
   41                 | expression . '%' expression
   42                 | expression . '&' expression
   43                 | expression . LS expression
   44                 | expression . RS expression
   45 if_expression: expression . '>' expression
   46              | expression . '<' expression
   47              | expression . OP_EQ expression
   48              | expression . OP_LE expression
   49              | expression . OP_GE expression
   50              | expression . OP_NE expression
   51              | expression . OP_LOR expression
   52              | expression . OP_LAND expression
   53 parameter_list: expression .  [')', ',']

    LS       shift, and go to state 118
    OP_GE    shift, and go to state 119
    OP_LE    shift, and go to state 120
    OP_EQ    shift, and go to state 121
    OP_NE    shift, and go to state 122
    OP_LAND  shift, and go to state 123
    OP_LOR   shift, and go to state 124
    RS       shift, and go to state 125
    '+'      shift, and go to state 126
    '-'      shift, and go to state 127
    '*'      shift, and go to state 128
    '/'      shift, and go to state 129
    '%'      shift, and go to state 130
    '&'      shift, and go to state 131
    '<'      shift, and go to state 132
    '>'      shift, and go to state 133

    $default  reduce using rule 53 (parameter_list)


state 146

   36 function_call: ID '(' parameter_list . ')'
   54 parameter_list: parameter_list . ',' expression

    ')'  shift, and go to state 171
    ','  shift, and go to state 172


state 147

   30 expression: '(' expression ')' .

    $default  reduce using rule 30 (expression)


state 148

   37 infix_expression: expression . '+' expression
   38                 | expression . '-' expression
   39                 | expression . '*' expression
   40                 | expression . '/' expression
   41                 | expression . '%' expression
   42                 | expression . '&' expression
   43                 | expression . LS expression
   43                 | expression LS expression .  [LS, RS, '+', '-', '*', '/', '%', '&', ')', ';', ',']
   44                 | expression . RS expression
   45 if_expression: expression . '>' expression
   46              | expression . '<' expression
   47              | expression . OP_EQ expression
   48              | expression . OP_LE expression
   49              | expression . OP_GE expression
   50              | expression . OP_NE expression
   51              | expression . OP_LOR expression
   52              | expression . OP_LAND expression

    OP_GE    shift, and go to state 119
    OP_LE    shift, and go to state 120
    OP_EQ    shift, and go to state 121
    OP_NE    shift, and go to state 122
    OP_LAND  shift, and go to state 123
    OP_LOR   shift, and go to state 124
    '<'      shift, and go to state 132
    '>'      shift, and go to state 133

    $default  reduce using rule 43 (infix_expression)

    Conflict between rule 43 and token LS resolved as reduce (%left LS).
    Conflict between rule 43 and token OP_GE resolved as shift (LS < OP_GE).
    Conflict between rule 43 and token OP_LE resolved as shift (LS < OP_LE).
    Conflict between rule 43 and token OP_EQ resolved as shift (LS < OP_EQ).
    Conflict between rule 43 and token OP_NE resolved as shift (LS < OP_NE).
    Conflict between rule 43 and token OP_LAND resolved as shift (LS < OP_LAND).
    Conflict between rule 43 and token OP_LOR resolved as shift (LS < OP_LOR).
    Conflict between rule 43 and token RS resolved as reduce (%left RS).
    Conflict between rule 43 and token '+' resolved as reduce ('+' < LS).
    Conflict between rule 43 and token '-' resolved as reduce ('-' < LS).
    Conflict between rule 43 and token '*' resolved as reduce (%left '*').
    Conflict between rule 43 and token '/' resolved as reduce (%left '/').
    Conflict between rule 43 and token '%' resolved as reduce (%left '%').
    Conflict between rule 43 and token '&' resolved as reduce (%left '&').
    Conflict between rule 43 and token '<' resolved as shift (LS < '<').
    Conflict between rule 43 and token '>' resolved as shift (LS < '>').


state 149

   37 infix_expression: expression . '+' expression
   38                 | expression . '-' expression
   39                 | expression . '*' expression
   40                 | expression . '/' expression
   41                 | expression . '%' expression
   42                 | expression . '&' expression
   43                 | expression . LS expression
   44                 | expression . RS expression
   45 if_expression: expression . '>' expression
   46              | expression . '<' expression
   47              | expression . OP_EQ expression
   48              | expression . OP_LE expression
   49              | expression . OP_GE expression
   49              | expression OP_GE expression .  [LS, OP_GE, OP_LE, OP_EQ, OP_NE, OP_LAND, OP_LOR, RS, '+', '-', '*', '/', '%', '&', ')', '<', '>', ';', ',']
   50              | expression . OP_NE expression
   51              | expression . OP_LOR expression
   52              | expression . OP_LAND expression

    $default  reduce using rule 49 (if_expression)

    Conflict between rule 49 and token LS resolved as reduce (LS < OP_GE).
    Conflict between rule 49 and token OP_GE resolved as reduce (%left OP_GE).
    Conflict between rule 49 and token OP_LE resolved as reduce (%left OP_LE).
    Conflict between rule 49 and token OP_EQ resolved as reduce (%left OP_EQ).
    Conflict between rule 49 and token OP_NE resolved as reduce (%left OP_NE).
    Conflict between rule 49 and token OP_LAND resolved as reduce (%left OP_LAND).
    Conflict between rule 49 and token OP_LOR resolved as reduce (%left OP_LOR).
    Conflict between rule 49 and token RS resolved as reduce (RS < OP_GE).
    Conflict between rule 49 and token '+' resolved as reduce ('+' < OP_GE).
    Conflict between rule 49 and token '-' resolved as reduce ('-' < OP_GE).
    Conflict between rule 49 and token '*' resolved as reduce ('*' < OP_GE).
    Conflict between rule 49 and token '/' resolved as reduce ('/' < OP_GE).
    Conflict between rule 49 and token '%' resolved as reduce ('%' < OP_GE).
    Conflict between rule 49 and token '&' resolved as reduce ('&' < OP_GE).
    Conflict between rule 49 and token '<' resolved as reduce (%left '<').
    Conflict between rule 49 and token '>' resolved as reduce (%left '>').


state 150

   37 infix_expression: expression . '+' expression
   38                 | expression . '-' expression
   39                 | expression . '*' expression
   40                 | expression . '/' expression
   41                 | expression . '%' expression
   42                 | expression . '&' expression
   43                 | expression . LS expression
   44                 | expression . RS expression
   45 if_expression: expression . '>' expression
   46              | expression . '<' expression
   47              | expression . OP_EQ expression
   48              | expression . OP_LE expression
   48              | expression OP_LE expression .  [LS, OP_GE, OP_LE, OP_EQ, OP_NE, OP_LAND, OP_LOR, RS, '+', '-', '*', '/', '%', '&', ')', '<', '>', ';', ',']
   49              | expression . OP_GE expression
   50              | expression . OP_NE expression
   51              | expression . OP_LOR expression
   52              | expression . OP_LAND expression

    $default  reduce using rule 48 (if_expression)

    Conflict between rule 48 and token LS resolved as reduce (LS < OP_LE).
    Conflict between rule 48 and token OP_GE resolved as reduce (%left OP_GE).
    Conflict between rule 48 and token OP_LE resolved as reduce (%left OP_LE).
    Conflict between rule 48 and token OP_EQ resolved as reduce (%left OP_EQ).
    Conflict between rule 48 and token OP_NE resolved as reduce (%left OP_NE).
    Conflict between rule 48 and token OP_LAND resolved as reduce (%left OP_LAND).
    Conflict between rule 48 and token OP_LOR resolved as reduce (%left OP_LOR).
    Conflict between rule 48 and token RS resolved as reduce (RS < OP_LE).
    Conflict between rule 48 and token '+' resolved as reduce ('+' < OP_LE).
    Conflict between rule 48 and token '-' resolved as reduce ('-' < OP_LE).
    Conflict between rule 48 and token '*' resolved as reduce ('*' < OP_LE).
    Conflict between rule 48 and token '/' resolved as reduce ('/' < OP_LE).
    Conflict between rule 48 and token '%' resolved as reduce ('%' < OP_LE).
    Conflict between rule 48 and token '&' resolved as reduce ('&' < OP_LE).
    Conflict between rule 48 and token '<' resolved as reduce (%left '<').
    Conflict between rule 48 and token '>' resolved as reduce (%left '>').


state 151

   37 infix_expression: expression . '+' expression
   38                 | expression . '-' expression
   39                 | expression . '*' expression
   40                 | expression . '/' expression
   41                 | expression . '%' expression
   42                 | expression . '&' expression
   43                 | expression . LS expression
   44                 | expression . RS expression
   45 if_expression: expression . '>' expression
   46              | expression . '<' expression
   47              | expression . OP_EQ expression
   47              | expression OP_EQ expression .  [LS, OP_GE, OP_LE, OP_EQ, OP_NE, OP_LAND, OP_LOR, RS, '+', '-', '*', '/', '%', '&', ')', '<', '>', ';', ',']
   48              | expression . OP_LE expression
   49              | expression . OP_GE expression
   50              | expression . OP_NE expression
   51              | expression . OP_LOR expression
   52              | expression . OP_LAND expression

    $default  reduce using rule 47 (if_expression)

    Conflict between rule 47 and token LS resolved as reduce (LS < OP_EQ).
    Conflict between rule 47 and token OP_GE resolved as reduce (%left OP_GE).
    Conflict between rule 47 and token OP_LE resolved as reduce (%left OP_LE).
    Conflict between rule 47 and token OP_EQ resolved as reduce (%left OP_EQ).
    Conflict between rule 47 and token OP_NE resolved as reduce (%left OP_NE).
    Conflict between rule 47 and token OP_LAND resolved as reduce (%left OP_LAND).
    Conflict between rule 47 and token OP_LOR resolved as reduce (%left OP_LOR).
    Conflict between rule 47 and token RS resolved as reduce (RS < OP_EQ).
    Conflict between rule 47 and token '+' resolved as reduce ('+' < OP_EQ).
    Conflict between rule 47 and token '-' resolved as reduce ('-' < OP_EQ).
    Conflict between rule 47 and token '*' resolved as reduce ('*' < OP_EQ).
    Conflict between rule 47 and token '/' resolved as reduce ('/' < OP_EQ).
    Conflict between rule 47 and token '%' resolved as reduce ('%' < OP_EQ).
    Conflict between rule 47 and token '&' resolved as reduce ('&' < OP_EQ).
    Conflict between rule 47 and token '<' resolved as reduce (%left '<').
    Conflict between rule 47 and token '>' resolved as reduce (%left '>').


state 152

   37 infix_expression: expression . '+' expression
   38                 | expression . '-' expression
   39                 | expression . '*' expression
   40                 | expression . '/' expression
   41                 | expression . '%' expression
   42                 | expression . '&' expression
   43                 | expression . LS expression
   44                 | expression . RS expression
   45 if_expression: expression . '>' expression
   46              | expression . '<' expression
   47              | expression . OP_EQ expression
   48              | expression . OP_LE expression
   49              | expression . OP_GE expression
   50              | expression . OP_NE expression
   50              | expression OP_NE expression .  [LS, OP_GE, OP_LE, OP_EQ, OP_NE, OP_LAND, OP_LOR, RS, '+', '-', '*', '/', '%', '&', ')', '<', '>', ';', ',']
   51              | expression . OP_LOR expression
   52              | expression . OP_LAND expression

    $default  reduce using rule 50 (if_expression)

    Conflict between rule 50 and token LS resolved as reduce (LS < OP_NE).
    Conflict between rule 50 and token OP_GE resolved as reduce (%left OP_GE).
    Conflict between rule 50 and token OP_LE resolved as reduce (%left OP_LE).
    Conflict between rule 50 and token OP_EQ resolved as reduce (%left OP_EQ).
    Conflict between rule 50 and token OP_NE resolved as reduce (%left OP_NE).
    Conflict between rule 50 and token OP_LAND resolved as reduce (%left OP_LAND).
    Conflict between rule 50 and token OP_LOR resolved as reduce (%left OP_LOR).
    Conflict between rule 50 and token RS resolved as reduce (RS < OP_NE).
    Conflict between rule 50 and token '+' resolved as reduce ('+' < OP_NE).
    Conflict between rule 50 and token '-' resolved as reduce ('-' < OP_NE).
    Conflict between rule 50 and token '*' resolved as reduce ('*' < OP_NE).
    Conflict between rule 50 and token '/' resolved as reduce ('/' < OP_NE).
    Conflict between rule 50 and token '%' resolved as reduce ('%' < OP_NE).
    Conflict between rule 50 and token '&' resolved as reduce ('&' < OP_NE).
    Conflict between rule 50 and token '<' resolved as reduce (%left '<').
    Conflict between rule 50 and token '>' resolved as reduce (%left '>').


state 153

   37 infix_expression: expression . '+' expression
   38                 | expression . '-' expression
   39                 | expression . '*' expression
   40                 | expression . '/' expression
   41                 | expression . '%' expression
   42                 | expression . '&' expression
   43                 | expression . LS expression
   44                 | expression . RS expression
   45 if_expression: expression . '>' expression
   46              | expression . '<' expression
   47              | expression . OP_EQ expression
   48              | expression . OP_LE expression
   49              | expression . OP_GE expression
   50              | expression . OP_NE expression
   51              | expression . OP_LOR expression
   52              | expression . OP_LAND expression
   52              | expression OP_LAND expression .  [LS, OP_GE, OP_LE, OP_EQ, OP_NE, OP_LAND, OP_LOR, RS, '+', '-', '*', '/', '%', '&', ')', '<', '>', ';', ',']

    $default  reduce using rule 52 (if_expression)

    Conflict between rule 52 and token LS resolved as reduce (LS < OP_LAND).
    Conflict between rule 52 and token OP_GE resolved as reduce (%left OP_GE).
    Conflict between rule 52 and token OP_LE resolved as reduce (%left OP_LE).
    Conflict between rule 52 and token OP_EQ resolved as reduce (%left OP_EQ).
    Conflict between rule 52 and token OP_NE resolved as reduce (%left OP_NE).
    Conflict between rule 52 and token OP_LAND resolved as reduce (%left OP_LAND).
    Conflict between rule 52 and token OP_LOR resolved as reduce (%left OP_LOR).
    Conflict between rule 52 and token RS resolved as reduce (RS < OP_LAND).
    Conflict between rule 52 and token '+' resolved as reduce ('+' < OP_LAND).
    Conflict between rule 52 and token '-' resolved as reduce ('-' < OP_LAND).
    Conflict between rule 52 and token '*' resolved as reduce ('*' < OP_LAND).
    Conflict between rule 52 and token '/' resolved as reduce ('/' < OP_LAND).
    Conflict between rule 52 and token '%' resolved as reduce ('%' < OP_LAND).
    Conflict between rule 52 and token '&' resolved as reduce ('&' < OP_LAND).
    Conflict between rule 52 and token '<' resolved as reduce (%left '<').
    Conflict between rule 52 and token '>' resolved as reduce (%left '>').


state 154

   37 infix_expression: expression . '+' expression
   38                 | expression . '-' expression
   39                 | expression . '*' expression
   40                 | expression . '/' expression
   41                 | expression . '%' expression
   42                 | expression . '&' expression
   43                 | expression . LS expression
   44                 | expression . RS expression
   45 if_expression: expression . '>' expression
   46              | expression . '<' expression
   47              | expression . OP_EQ expression
   48              | expression . OP_LE expression
   49              | expression . OP_GE expression
   50              | expression . OP_NE expression
   51              | expression . OP_LOR expression
   51              | expression OP_LOR expression .  [LS, OP_GE, OP_LE, OP_EQ, OP_NE, OP_LAND, OP_LOR, RS, '+', '-', '*', '/', '%', '&', ')', '<', '>', ';', ',']
   52              | expression . OP_LAND expression

    $default  reduce using rule 51 (if_expression)

    Conflict between rule 51 and token LS resolved as reduce (LS < OP_LOR).
    Conflict between rule 51 and token OP_GE resolved as reduce (%left OP_GE).
    Conflict between rule 51 and token OP_LE resolved as reduce (%left OP_LE).
    Conflict between rule 51 and token OP_EQ resolved as reduce (%left OP_EQ).
    Conflict between rule 51 and token OP_NE resolved as reduce (%left OP_NE).
    Conflict between rule 51 and token OP_LAND resolved as reduce (%left OP_LAND).
    Conflict between rule 51 and token OP_LOR resolved as reduce (%left OP_LOR).
    Conflict between rule 51 and token RS resolved as reduce (RS < OP_LOR).
    Conflict between rule 51 and token '+' resolved as reduce ('+' < OP_LOR).
    Conflict between rule 51 and token '-' resolved as reduce ('-' < OP_LOR).
    Conflict between rule 51 and token '*' resolved as reduce ('*' < OP_LOR).
    Conflict between rule 51 and token '/' resolved as reduce ('/' < OP_LOR).
    Conflict between rule 51 and token '%' resolved as reduce ('%' < OP_LOR).
    Conflict between rule 51 and token '&' resolved as reduce ('&' < OP_LOR).
    Conflict between rule 51 and token '<' resolved as reduce (%left '<').
    Conflict between rule 51 and token '>' resolved as reduce (%left '>').


state 155

   37 infix_expression: expression . '+' expression
   38                 | expression . '-' expression
   39                 | expression . '*' expression
   40                 | expression . '/' expression
   41                 | expression . '%' expression
   42                 | expression . '&' expression
   43                 | expression . LS expression
   44                 | expression . RS expression
   44                 | expression RS expression .  [LS, RS, '+', '-', '*', '/', '%', '&', ')', ';', ',']
   45 if_expression: expression . '>' expression
   46              | expression . '<' expression
   47              | expression . OP_EQ expression
   48              | expression . OP_LE expression
   49              | expression . OP_GE expression
   50              | expression . OP_NE expression
   51              | expression . OP_LOR expression
   52              | expression . OP_LAND expression

    OP_GE    shift, and go to state 119
    OP_LE    shift, and go to state 120
    OP_EQ    shift, and go to state 121
    OP_NE    shift, and go to state 122
    OP_LAND  shift, and go to state 123
    OP_LOR   shift, and go to state 124
    '<'      shift, and go to state 132
    '>'      shift, and go to state 133

    $default  reduce using rule 44 (infix_expression)

    Conflict between rule 44 and token LS resolved as reduce (%left LS).
    Conflict between rule 44 and token OP_GE resolved as shift (RS < OP_GE).
    Conflict between rule 44 and token OP_LE resolved as shift (RS < OP_LE).
    Conflict between rule 44 and token OP_EQ resolved as shift (RS < OP_EQ).
    Conflict between rule 44 and token OP_NE resolved as shift (RS < OP_NE).
    Conflict between rule 44 and token OP_LAND resolved as shift (RS < OP_LAND).
    Conflict between rule 44 and token OP_LOR resolved as shift (RS < OP_LOR).
    Conflict between rule 44 and token RS resolved as reduce (%left RS).
    Conflict between rule 44 and token '+' resolved as reduce ('+' < RS).
    Conflict between rule 44 and token '-' resolved as reduce ('-' < RS).
    Conflict between rule 44 and token '*' resolved as reduce (%left '*').
    Conflict between rule 44 and token '/' resolved as reduce (%left '/').
    Conflict between rule 44 and token '%' resolved as reduce (%left '%').
    Conflict between rule 44 and token '&' resolved as reduce (%left '&').
    Conflict between rule 44 and token '<' resolved as shift (RS < '<').
    Conflict between rule 44 and token '>' resolved as shift (RS < '>').


state 156

   37 infix_expression: expression . '+' expression
   37                 | expression '+' expression .  ['+', '-', ')', ';', ',']
   38                 | expression . '-' expression
   39                 | expression . '*' expression
   40                 | expression . '/' expression
   41                 | expression . '%' expression
   42                 | expression . '&' expression
   43                 | expression . LS expression
   44                 | expression . RS expression
   45 if_expression: expression . '>' expression
   46              | expression . '<' expression
   47              | expression . OP_EQ expression
   48              | expression . OP_LE expression
   49              | expression . OP_GE expression
   50              | expression . OP_NE expression
   51              | expression . OP_LOR expression
   52              | expression . OP_LAND expression

    LS       shift, and go to state 118
    OP_GE    shift, and go to state 119
    OP_LE    shift, and go to state 120
    OP_EQ    shift, and go to state 121
    OP_NE    shift, and go to state 122
    OP_LAND  shift, and go to state 123
    OP_LOR   shift, and go to state 124
    RS       shift, and go to state 125
    '*'      shift, and go to state 128
    '/'      shift, and go to state 129
    '%'      shift, and go to state 130
    '&'      shift, and go to state 131
    '<'      shift, and go to state 132
    '>'      shift, and go to state 133

    $default  reduce using rule 37 (infix_expression)

    Conflict between rule 37 and token LS resolved as shift ('+' < LS).
    Conflict between rule 37 and token OP_GE resolved as shift ('+' < OP_GE).
    Conflict between rule 37 and token OP_LE resolved as shift ('+' < OP_LE).
    Conflict between rule 37 and token OP_EQ resolved as shift ('+' < OP_EQ).
    Conflict between rule 37 and token OP_NE resolved as shift ('+' < OP_NE).
    Conflict between rule 37 and token OP_LAND resolved as shift ('+' < OP_LAND).
    Conflict between rule 37 and token OP_LOR resolved as shift ('+' < OP_LOR).
    Conflict between rule 37 and token RS resolved as shift ('+' < RS).
    Conflict between rule 37 and token '+' resolved as reduce (%left '+').
    Conflict between rule 37 and token '-' resolved as reduce (%left '-').
    Conflict between rule 37 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 37 and token '/' resolved as shift ('+' < '/').
    Conflict between rule 37 and token '%' resolved as shift ('+' < '%').
    Conflict between rule 37 and token '&' resolved as shift ('+' < '&').
    Conflict between rule 37 and token '<' resolved as shift ('+' < '<').
    Conflict between rule 37 and token '>' resolved as shift ('+' < '>').


state 157

   37 infix_expression: expression . '+' expression
   38                 | expression . '-' expression
   38                 | expression '-' expression .  ['+', '-', ')', ';', ',']
   39                 | expression . '*' expression
   40                 | expression . '/' expression
   41                 | expression . '%' expression
   42                 | expression . '&' expression
   43                 | expression . LS expression
   44                 | expression . RS expression
   45 if_expression: expression . '>' expression
   46              | expression . '<' expression
   47              | expression . OP_EQ expression
   48              | expression . OP_LE expression
   49              | expression . OP_GE expression
   50              | expression . OP_NE expression
   51              | expression . OP_LOR expression
   52              | expression . OP_LAND expression

    LS       shift, and go to state 118
    OP_GE    shift, and go to state 119
    OP_LE    shift, and go to state 120
    OP_EQ    shift, and go to state 121
    OP_NE    shift, and go to state 122
    OP_LAND  shift, and go to state 123
    OP_LOR   shift, and go to state 124
    RS       shift, and go to state 125
    '*'      shift, and go to state 128
    '/'      shift, and go to state 129
    '%'      shift, and go to state 130
    '&'      shift, and go to state 131
    '<'      shift, and go to state 132
    '>'      shift, and go to state 133

    $default  reduce using rule 38 (infix_expression)

    Conflict between rule 38 and token LS resolved as shift ('-' < LS).
    Conflict between rule 38 and token OP_GE resolved as shift ('-' < OP_GE).
    Conflict between rule 38 and token OP_LE resolved as shift ('-' < OP_LE).
    Conflict between rule 38 and token OP_EQ resolved as shift ('-' < OP_EQ).
    Conflict between rule 38 and token OP_NE resolved as shift ('-' < OP_NE).
    Conflict between rule 38 and token OP_LAND resolved as shift ('-' < OP_LAND).
    Conflict between rule 38 and token OP_LOR resolved as shift ('-' < OP_LOR).
    Conflict between rule 38 and token RS resolved as shift ('-' < RS).
    Conflict between rule 38 and token '+' resolved as reduce (%left '+').
    Conflict between rule 38 and token '-' resolved as reduce (%left '-').
    Conflict between rule 38 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 38 and token '/' resolved as shift ('-' < '/').
    Conflict between rule 38 and token '%' resolved as shift ('-' < '%').
    Conflict between rule 38 and token '&' resolved as shift ('-' < '&').
    Conflict between rule 38 and token '<' resolved as shift ('-' < '<').
    Conflict between rule 38 and token '>' resolved as shift ('-' < '>').


state 158

   37 infix_expression: expression . '+' expression
   38                 | expression . '-' expression
   39                 | expression . '*' expression
   39                 | expression '*' expression .  [LS, RS, '+', '-', '*', '/', '%', '&', ')', ';', ',']
   40                 | expression . '/' expression
   41                 | expression . '%' expression
   42                 | expression . '&' expression
   43                 | expression . LS expression
   44                 | expression . RS expression
   45 if_expression: expression . '>' expression
   46              | expression . '<' expression
   47              | expression . OP_EQ expression
   48              | expression . OP_LE expression
   49              | expression . OP_GE expression
   50              | expression . OP_NE expression
   51              | expression . OP_LOR expression
   52              | expression . OP_LAND expression

    OP_GE    shift, and go to state 119
    OP_LE    shift, and go to state 120
    OP_EQ    shift, and go to state 121
    OP_NE    shift, and go to state 122
    OP_LAND  shift, and go to state 123
    OP_LOR   shift, and go to state 124
    '<'      shift, and go to state 132
    '>'      shift, and go to state 133

    $default  reduce using rule 39 (infix_expression)

    Conflict between rule 39 and token LS resolved as reduce (%left LS).
    Conflict between rule 39 and token OP_GE resolved as shift ('*' < OP_GE).
    Conflict between rule 39 and token OP_LE resolved as shift ('*' < OP_LE).
    Conflict between rule 39 and token OP_EQ resolved as shift ('*' < OP_EQ).
    Conflict between rule 39 and token OP_NE resolved as shift ('*' < OP_NE).
    Conflict between rule 39 and token OP_LAND resolved as shift ('*' < OP_LAND).
    Conflict between rule 39 and token OP_LOR resolved as shift ('*' < OP_LOR).
    Conflict between rule 39 and token RS resolved as reduce (%left RS).
    Conflict between rule 39 and token '+' resolved as reduce ('+' < '*').
    Conflict between rule 39 and token '-' resolved as reduce ('-' < '*').
    Conflict between rule 39 and token '*' resolved as reduce (%left '*').
    Conflict between rule 39 and token '/' resolved as reduce (%left '/').
    Conflict between rule 39 and token '%' resolved as reduce (%left '%').
    Conflict between rule 39 and token '&' resolved as reduce (%left '&').
    Conflict between rule 39 and token '<' resolved as shift ('*' < '<').
    Conflict between rule 39 and token '>' resolved as shift ('*' < '>').


state 159

   37 infix_expression: expression . '+' expression
   38                 | expression . '-' expression
   39                 | expression . '*' expression
   40                 | expression . '/' expression
   40                 | expression '/' expression .  [LS, RS, '+', '-', '*', '/', '%', '&', ')', ';', ',']
   41                 | expression . '%' expression
   42                 | expression . '&' expression
   43                 | expression . LS expression
   44                 | expression . RS expression
   45 if_expression: expression . '>' expression
   46              | expression . '<' expression
   47              | expression . OP_EQ expression
   48              | expression . OP_LE expression
   49              | expression . OP_GE expression
   50              | expression . OP_NE expression
   51              | expression . OP_LOR expression
   52              | expression . OP_LAND expression

    OP_GE    shift, and go to state 119
    OP_LE    shift, and go to state 120
    OP_EQ    shift, and go to state 121
    OP_NE    shift, and go to state 122
    OP_LAND  shift, and go to state 123
    OP_LOR   shift, and go to state 124
    '<'      shift, and go to state 132
    '>'      shift, and go to state 133

    $default  reduce using rule 40 (infix_expression)

    Conflict between rule 40 and token LS resolved as reduce (%left LS).
    Conflict between rule 40 and token OP_GE resolved as shift ('/' < OP_GE).
    Conflict between rule 40 and token OP_LE resolved as shift ('/' < OP_LE).
    Conflict between rule 40 and token OP_EQ resolved as shift ('/' < OP_EQ).
    Conflict between rule 40 and token OP_NE resolved as shift ('/' < OP_NE).
    Conflict between rule 40 and token OP_LAND resolved as shift ('/' < OP_LAND).
    Conflict between rule 40 and token OP_LOR resolved as shift ('/' < OP_LOR).
    Conflict between rule 40 and token RS resolved as reduce (%left RS).
    Conflict between rule 40 and token '+' resolved as reduce ('+' < '/').
    Conflict between rule 40 and token '-' resolved as reduce ('-' < '/').
    Conflict between rule 40 and token '*' resolved as reduce (%left '*').
    Conflict between rule 40 and token '/' resolved as reduce (%left '/').
    Conflict between rule 40 and token '%' resolved as reduce (%left '%').
    Conflict between rule 40 and token '&' resolved as reduce (%left '&').
    Conflict between rule 40 and token '<' resolved as shift ('/' < '<').
    Conflict between rule 40 and token '>' resolved as shift ('/' < '>').


state 160

   37 infix_expression: expression . '+' expression
   38                 | expression . '-' expression
   39                 | expression . '*' expression
   40                 | expression . '/' expression
   41                 | expression . '%' expression
   41                 | expression '%' expression .  [LS, RS, '+', '-', '*', '/', '%', '&', ')', ';', ',']
   42                 | expression . '&' expression
   43                 | expression . LS expression
   44                 | expression . RS expression
   45 if_expression: expression . '>' expression
   46              | expression . '<' expression
   47              | expression . OP_EQ expression
   48              | expression . OP_LE expression
   49              | expression . OP_GE expression
   50              | expression . OP_NE expression
   51              | expression . OP_LOR expression
   52              | expression . OP_LAND expression

    OP_GE    shift, and go to state 119
    OP_LE    shift, and go to state 120
    OP_EQ    shift, and go to state 121
    OP_NE    shift, and go to state 122
    OP_LAND  shift, and go to state 123
    OP_LOR   shift, and go to state 124
    '<'      shift, and go to state 132
    '>'      shift, and go to state 133

    $default  reduce using rule 41 (infix_expression)

    Conflict between rule 41 and token LS resolved as reduce (%left LS).
    Conflict between rule 41 and token OP_GE resolved as shift ('%' < OP_GE).
    Conflict between rule 41 and token OP_LE resolved as shift ('%' < OP_LE).
    Conflict between rule 41 and token OP_EQ resolved as shift ('%' < OP_EQ).
    Conflict between rule 41 and token OP_NE resolved as shift ('%' < OP_NE).
    Conflict between rule 41 and token OP_LAND resolved as shift ('%' < OP_LAND).
    Conflict between rule 41 and token OP_LOR resolved as shift ('%' < OP_LOR).
    Conflict between rule 41 and token RS resolved as reduce (%left RS).
    Conflict between rule 41 and token '+' resolved as reduce ('+' < '%').
    Conflict between rule 41 and token '-' resolved as reduce ('-' < '%').
    Conflict between rule 41 and token '*' resolved as reduce (%left '*').
    Conflict between rule 41 and token '/' resolved as reduce (%left '/').
    Conflict between rule 41 and token '%' resolved as reduce (%left '%').
    Conflict between rule 41 and token '&' resolved as reduce (%left '&').
    Conflict between rule 41 and token '<' resolved as shift ('%' < '<').
    Conflict between rule 41 and token '>' resolved as shift ('%' < '>').


state 161

   37 infix_expression: expression . '+' expression
   38                 | expression . '-' expression
   39                 | expression . '*' expression
   40                 | expression . '/' expression
   41                 | expression . '%' expression
   42                 | expression . '&' expression
   42                 | expression '&' expression .  [LS, RS, '+', '-', '*', '/', '%', '&', ')', ';', ',']
   43                 | expression . LS expression
   44                 | expression . RS expression
   45 if_expression: expression . '>' expression
   46              | expression . '<' expression
   47              | expression . OP_EQ expression
   48              | expression . OP_LE expression
   49              | expression . OP_GE expression
   50              | expression . OP_NE expression
   51              | expression . OP_LOR expression
   52              | expression . OP_LAND expression

    OP_GE    shift, and go to state 119
    OP_LE    shift, and go to state 120
    OP_EQ    shift, and go to state 121
    OP_NE    shift, and go to state 122
    OP_LAND  shift, and go to state 123
    OP_LOR   shift, and go to state 124
    '<'      shift, and go to state 132
    '>'      shift, and go to state 133

    $default  reduce using rule 42 (infix_expression)

    Conflict between rule 42 and token LS resolved as reduce (%left LS).
    Conflict between rule 42 and token OP_GE resolved as shift ('&' < OP_GE).
    Conflict between rule 42 and token OP_LE resolved as shift ('&' < OP_LE).
    Conflict between rule 42 and token OP_EQ resolved as shift ('&' < OP_EQ).
    Conflict between rule 42 and token OP_NE resolved as shift ('&' < OP_NE).
    Conflict between rule 42 and token OP_LAND resolved as shift ('&' < OP_LAND).
    Conflict between rule 42 and token OP_LOR resolved as shift ('&' < OP_LOR).
    Conflict between rule 42 and token RS resolved as reduce (%left RS).
    Conflict between rule 42 and token '+' resolved as reduce ('+' < '&').
    Conflict between rule 42 and token '-' resolved as reduce ('-' < '&').
    Conflict between rule 42 and token '*' resolved as reduce (%left '*').
    Conflict between rule 42 and token '/' resolved as reduce (%left '/').
    Conflict between rule 42 and token '%' resolved as reduce (%left '%').
    Conflict between rule 42 and token '&' resolved as reduce (%left '&').
    Conflict between rule 42 and token '<' resolved as shift ('&' < '<').
    Conflict between rule 42 and token '>' resolved as shift ('&' < '>').


state 162

   37 infix_expression: expression . '+' expression
   38                 | expression . '-' expression
   39                 | expression . '*' expression
   40                 | expression . '/' expression
   41                 | expression . '%' expression
   42                 | expression . '&' expression
   43                 | expression . LS expression
   44                 | expression . RS expression
   45 if_expression: expression . '>' expression
   46              | expression . '<' expression
   46              | expression '<' expression .  [LS, OP_GE, OP_LE, OP_EQ, OP_NE, OP_LAND, OP_LOR, RS, '+', '-', '*', '/', '%', '&', ')', '<', '>', ';', ',']
   47              | expression . OP_EQ expression
   48              | expression . OP_LE expression
   49              | expression . OP_GE expression
   50              | expression . OP_NE expression
   51              | expression . OP_LOR expression
   52              | expression . OP_LAND expression

    $default  reduce using rule 46 (if_expression)

    Conflict between rule 46 and token LS resolved as reduce (LS < '<').
    Conflict between rule 46 and token OP_GE resolved as reduce (%left OP_GE).
    Conflict between rule 46 and token OP_LE resolved as reduce (%left OP_LE).
    Conflict between rule 46 and token OP_EQ resolved as reduce (%left OP_EQ).
    Conflict between rule 46 and token OP_NE resolved as reduce (%left OP_NE).
    Conflict between rule 46 and token OP_LAND resolved as reduce (%left OP_LAND).
    Conflict between rule 46 and token OP_LOR resolved as reduce (%left OP_LOR).
    Conflict between rule 46 and token RS resolved as reduce (RS < '<').
    Conflict between rule 46 and token '+' resolved as reduce ('+' < '<').
    Conflict between rule 46 and token '-' resolved as reduce ('-' < '<').
    Conflict between rule 46 and token '*' resolved as reduce ('*' < '<').
    Conflict between rule 46 and token '/' resolved as reduce ('/' < '<').
    Conflict between rule 46 and token '%' resolved as reduce ('%' < '<').
    Conflict between rule 46 and token '&' resolved as reduce ('&' < '<').
    Conflict between rule 46 and token '<' resolved as reduce (%left '<').
    Conflict between rule 46 and token '>' resolved as reduce (%left '>').


state 163

   37 infix_expression: expression . '+' expression
   38                 | expression . '-' expression
   39                 | expression . '*' expression
   40                 | expression . '/' expression
   41                 | expression . '%' expression
   42                 | expression . '&' expression
   43                 | expression . LS expression
   44                 | expression . RS expression
   45 if_expression: expression . '>' expression
   45              | expression '>' expression .  [LS, OP_GE, OP_LE, OP_EQ, OP_NE, OP_LAND, OP_LOR, RS, '+', '-', '*', '/', '%', '&', ')', '<', '>', ';', ',']
   46              | expression . '<' expression
   47              | expression . OP_EQ expression
   48              | expression . OP_LE expression
   49              | expression . OP_GE expression
   50              | expression . OP_NE expression
   51              | expression . OP_LOR expression
   52              | expression . OP_LAND expression

    $default  reduce using rule 45 (if_expression)

    Conflict between rule 45 and token LS resolved as reduce (LS < '>').
    Conflict between rule 45 and token OP_GE resolved as reduce (%left OP_GE).
    Conflict between rule 45 and token OP_LE resolved as reduce (%left OP_LE).
    Conflict between rule 45 and token OP_EQ resolved as reduce (%left OP_EQ).
    Conflict between rule 45 and token OP_NE resolved as reduce (%left OP_NE).
    Conflict between rule 45 and token OP_LAND resolved as reduce (%left OP_LAND).
    Conflict between rule 45 and token OP_LOR resolved as reduce (%left OP_LOR).
    Conflict between rule 45 and token RS resolved as reduce (RS < '>').
    Conflict between rule 45 and token '+' resolved as reduce ('+' < '>').
    Conflict between rule 45 and token '-' resolved as reduce ('-' < '>').
    Conflict between rule 45 and token '*' resolved as reduce ('*' < '>').
    Conflict between rule 45 and token '/' resolved as reduce ('/' < '>').
    Conflict between rule 45 and token '%' resolved as reduce ('%' < '>').
    Conflict between rule 45 and token '&' resolved as reduce ('&' < '>').
    Conflict between rule 45 and token '<' resolved as reduce (%left '<').
    Conflict between rule 45 and token '>' resolved as reduce (%left '>').


state 164

   14 operation: . declaration ';'
   15          | . assignment ';'
   16          | . unary ';'
   17          | . if
   18          | . cycle
   19          | . control ';'
   20 declaration: . type var_list
   21 assignment: . ID assign_operator expression
   22 unary: . ID OP_INC
   23      | . OP_INC ID
   24      | . ID OP_DEC
   25      | . OP_DEC ID
   26 control: . BREAK
   27        | . CONTINUE
   28        | . RETURN
   29        | . RETURN expression
   62 cycle: . FOR '(' assignment ';' if_expression ';' for_incr ')' condition_code
   63      | . WHILE '(' if_expression ')' condition_code
   63      | WHILE '(' if_expression ')' . condition_code
   64      | . DO condition_code WHILE '(' if_expression ')' ';'
   65 if: . IF '(' expression ')' condition_code
   66   | . IF '(' expression ')' condition_code ELSE condition_code
   67   | . SWITCH '(' expression ')' '{' switch '}'
   72 condition_code: . '{' operation_list '}'
   73               | . operation
   74               | . ';'
   75               | . '{' '}'
   94 type: . CHAR
   95     | . INT
   96     | . STRING
   97     | . BOOLEAN
   98     | . FLOAT
   99     | . VOID

    BOOLEAN   shift, and go to state 21
    BREAK     shift, and go to state 45
    CHAR      shift, and go to state 22
    CONTINUE  shift, and go to state 46
    DO        shift, and go to state 47
    FLOAT     shift, and go to state 23
    FOR       shift, and go to state 48
    IF        shift, and go to state 49
    INT       shift, and go to state 24
    OP_INC    shift, and go to state 50
    OP_DEC    shift, and go to state 51
    STRING    shift, and go to state 25
    SWITCH    shift, and go to state 52
    RETURN    shift, and go to state 53
    VOID      shift, and go to state 26
    WHILE     shift, and go to state 54
    ID        shift, and go to state 55
    '{'       shift, and go to state 67
    ';'       shift, and go to state 68

    operation       go to state 69
    declaration     go to state 59
    assignment      go to state 60
    unary           go to state 61
    control         go to state 62
    cycle           go to state 63
    if              go to state 64
    condition_code  go to state 173
    type            go to state 65


state 165

   37 infix_expression: expression . '+' expression
   38                 | expression . '-' expression
   39                 | expression . '*' expression
   40                 | expression . '/' expression
   41                 | expression . '%' expression
   42                 | expression . '&' expression
   43                 | expression . LS expression
   44                 | expression . RS expression
   45 if_expression: expression . '>' expression
   46              | expression . '<' expression
   47              | expression . OP_EQ expression
   48              | expression . OP_LE expression
   49              | expression . OP_GE expression
   50              | expression . OP_NE expression
   51              | expression . OP_LOR expression
   52              | expression . OP_LAND expression
   58 var: ID '=' expression .  [';', ',']

    LS       shift, and go to state 118
    OP_GE    shift, and go to state 119
    OP_LE    shift, and go to state 120
    OP_EQ    shift, and go to state 121
    OP_NE    shift, and go to state 122
    OP_LAND  shift, and go to state 123
    OP_LOR   shift, and go to state 124
    RS       shift, and go to state 125
    '+'      shift, and go to state 126
    '-'      shift, and go to state 127
    '*'      shift, and go to state 128
    '/'      shift, and go to state 129
    '%'      shift, and go to state 130
    '&'      shift, and go to state 131
    '<'      shift, and go to state 132
    '>'      shift, and go to state 133

    $default  reduce using rule 58 (var)


state 166

   56 var_list: var_list ',' var .

    $default  reduce using rule 56 (var_list)


state 167

   34 expression: if_expression .  [LS, OP_GE, OP_LE, OP_EQ, OP_NE, OP_LAND, OP_LOR, RS, '+', '-', '*', '/', '%', '&', '<', '>']
   64 cycle: DO condition_code WHILE '(' if_expression . ')' ';'

    ')'  shift, and go to state 174

    $default  reduce using rule 34 (expression)


state 168

   34 expression: if_expression .  [LS, OP_GE, OP_LE, OP_EQ, OP_NE, OP_LAND, OP_LOR, RS, '+', '-', '*', '/', '%', '&', '<', '>']
   62 cycle: FOR '(' assignment ';' if_expression . ';' for_incr ')' condition_code

    ';'  shift, and go to state 175

    $default  reduce using rule 34 (expression)


state 169

   65 if: IF '(' expression ')' condition_code .  [BOOLEAN, BREAK, CASE, CHAR, CONTINUE, DEFAULT, DO, FLOAT, FOR, IF, INT, OP_INC, OP_DEC, STRING, SWITCH, RETURN, VOID, WHILE, ID, '}']
   66   | IF '(' expression ')' condition_code . ELSE condition_code

    ELSE  shift, and go to state 176

    $default  reduce using rule 65 (if)

    Conflict between rule 65 and token ELSE resolved as shift (IFPREC < ELSE).


state 170

   67 if: SWITCH '(' expression ')' '{' . switch '}'
   76 switch: . CASE value ':' operation_list switch
   77       | . DEFAULT ':' operation_list switch
   78       | . CASE value ':' operation_list
   79       | . DEFAULT ':' operation_list

    CASE     shift, and go to state 177
    DEFAULT  shift, and go to state 178

    switch  go to state 179


state 171

   36 function_call: ID '(' parameter_list ')' .

    $default  reduce using rule 36 (function_call)


state 172

   30 expression: . '(' expression ')'
   31           | . value
   32           | . function_call
   33           | . infix_expression
   34           | . if_expression
   35 function_call: . ID '(' ')'
   36              | . ID '(' parameter_list ')'
   37 infix_expression: . expression '+' expression
   38                 | . expression '-' expression
   39                 | . expression '*' expression
   40                 | . expression '/' expression
   41                 | . expression '%' expression
   42                 | . expression '&' expression
   43                 | . expression LS expression
   44                 | . expression RS expression
   45 if_expression: . expression '>' expression
   46              | . expression '<' expression
   47              | . expression OP_EQ expression
   48              | . expression OP_LE expression
   49              | . expression OP_GE expression
   50              | . expression OP_NE expression
   51              | . expression OP_LOR expression
   52              | . expression OP_LAND expression
   54 parameter_list: parameter_list ',' . expression
   87 value: . ID
   88      | . STRING_VAL
   89      | . NUMBER_VAL
   90      | . DOUBLE_VAL
   91      | . CHAR_VAL
   92      | . TRUE
   93      | . FALSE

    FALSE       shift, and go to state 76
    TRUE        shift, and go to state 77
    NUMBER_VAL  shift, and go to state 78
    DOUBLE_VAL  shift, and go to state 79
    STRING_VAL  shift, and go to state 80
    CHAR_VAL    shift, and go to state 81
    ID          shift, and go to state 82
    '('         shift, and go to state 83

    expression        go to state 180
    function_call     go to state 85
    infix_expression  go to state 86
    if_expression     go to state 87
    value             go to state 88


state 173

   63 cycle: WHILE '(' if_expression ')' condition_code .

    $default  reduce using rule 63 (cycle)


state 174

   64 cycle: DO condition_code WHILE '(' if_expression ')' . ';'

    ';'  shift, and go to state 181


state 175

   21 assignment: . ID assign_operator expression
   22 unary: . ID OP_INC
   23      | . OP_INC ID
   24      | . ID OP_DEC
   25      | . OP_DEC ID
   62 cycle: FOR '(' assignment ';' if_expression ';' . for_incr ')' condition_code
   68 for_incr: . incr
   69         | . for_incr ',' incr
   70 incr: . assignment
   71     | . unary

    OP_INC  shift, and go to state 50
    OP_DEC  shift, and go to state 51
    ID      shift, and go to state 55

    assignment  go to state 182
    unary       go to state 183
    for_incr    go to state 184
    incr        go to state 185


state 176

   14 operation: . declaration ';'
   15          | . assignment ';'
   16          | . unary ';'
   17          | . if
   18          | . cycle
   19          | . control ';'
   20 declaration: . type var_list
   21 assignment: . ID assign_operator expression
   22 unary: . ID OP_INC
   23      | . OP_INC ID
   24      | . ID OP_DEC
   25      | . OP_DEC ID
   26 control: . BREAK
   27        | . CONTINUE
   28        | . RETURN
   29        | . RETURN expression
   62 cycle: . FOR '(' assignment ';' if_expression ';' for_incr ')' condition_code
   63      | . WHILE '(' if_expression ')' condition_code
   64      | . DO condition_code WHILE '(' if_expression ')' ';'
   65 if: . IF '(' expression ')' condition_code
   66   | . IF '(' expression ')' condition_code ELSE condition_code
   66   | IF '(' expression ')' condition_code ELSE . condition_code
   67   | . SWITCH '(' expression ')' '{' switch '}'
   72 condition_code: . '{' operation_list '}'
   73               | . operation
   74               | . ';'
   75               | . '{' '}'
   94 type: . CHAR
   95     | . INT
   96     | . STRING
   97     | . BOOLEAN
   98     | . FLOAT
   99     | . VOID

    BOOLEAN   shift, and go to state 21
    BREAK     shift, and go to state 45
    CHAR      shift, and go to state 22
    CONTINUE  shift, and go to state 46
    DO        shift, and go to state 47
    FLOAT     shift, and go to state 23
    FOR       shift, and go to state 48
    IF        shift, and go to state 49
    INT       shift, and go to state 24
    OP_INC    shift, and go to state 50
    OP_DEC    shift, and go to state 51
    STRING    shift, and go to state 25
    SWITCH    shift, and go to state 52
    RETURN    shift, and go to state 53
    VOID      shift, and go to state 26
    WHILE     shift, and go to state 54
    ID        shift, and go to state 55
    '{'       shift, and go to state 67
    ';'       shift, and go to state 68

    operation       go to state 69
    declaration     go to state 59
    assignment      go to state 60
    unary           go to state 61
    control         go to state 62
    cycle           go to state 63
    if              go to state 64
    condition_code  go to state 186
    type            go to state 65


state 177

   76 switch: CASE . value ':' operation_list switch
   78       | CASE . value ':' operation_list
   87 value: . ID
   88      | . STRING_VAL
   89      | . NUMBER_VAL
   90      | . DOUBLE_VAL
   91      | . CHAR_VAL
   92      | . TRUE
   93      | . FALSE

    FALSE       shift, and go to state 76
    TRUE        shift, and go to state 77
    NUMBER_VAL  shift, and go to state 78
    DOUBLE_VAL  shift, and go to state 79
    STRING_VAL  shift, and go to state 80
    CHAR_VAL    shift, and go to state 81
    ID          shift, and go to state 187

    value  go to state 188


state 178

   77 switch: DEFAULT . ':' operation_list switch
   79       | DEFAULT . ':' operation_list

    ':'  shift, and go to state 189


state 179

   67 if: SWITCH '(' expression ')' '{' switch . '}'

    '}'  shift, and go to state 190


state 180

   37 infix_expression: expression . '+' expression
   38                 | expression . '-' expression
   39                 | expression . '*' expression
   40                 | expression . '/' expression
   41                 | expression . '%' expression
   42                 | expression . '&' expression
   43                 | expression . LS expression
   44                 | expression . RS expression
   45 if_expression: expression . '>' expression
   46              | expression . '<' expression
   47              | expression . OP_EQ expression
   48              | expression . OP_LE expression
   49              | expression . OP_GE expression
   50              | expression . OP_NE expression
   51              | expression . OP_LOR expression
   52              | expression . OP_LAND expression
   54 parameter_list: parameter_list ',' expression .  [')', ',']

    LS       shift, and go to state 118
    OP_GE    shift, and go to state 119
    OP_LE    shift, and go to state 120
    OP_EQ    shift, and go to state 121
    OP_NE    shift, and go to state 122
    OP_LAND  shift, and go to state 123
    OP_LOR   shift, and go to state 124
    RS       shift, and go to state 125
    '+'      shift, and go to state 126
    '-'      shift, and go to state 127
    '*'      shift, and go to state 128
    '/'      shift, and go to state 129
    '%'      shift, and go to state 130
    '&'      shift, and go to state 131
    '<'      shift, and go to state 132
    '>'      shift, and go to state 133

    $default  reduce using rule 54 (parameter_list)


state 181

   64 cycle: DO condition_code WHILE '(' if_expression ')' ';' .

    $default  reduce using rule 64 (cycle)


state 182

   70 incr: assignment .

    $default  reduce using rule 70 (incr)


state 183

   71 incr: unary .

    $default  reduce using rule 71 (incr)


state 184

   62 cycle: FOR '(' assignment ';' if_expression ';' for_incr . ')' condition_code
   69 for_incr: for_incr . ',' incr

    ')'  shift, and go to state 191
    ','  shift, and go to state 192


state 185

   68 for_incr: incr .

    $default  reduce using rule 68 (for_incr)


state 186

   66 if: IF '(' expression ')' condition_code ELSE condition_code .

    $default  reduce using rule 66 (if)


state 187

   87 value: ID .

    $default  reduce using rule 87 (value)


state 188

   76 switch: CASE value . ':' operation_list switch
   78       | CASE value . ':' operation_list

    ':'  shift, and go to state 193


state 189

   12 operation_list: . operation
   13               | . operation_list operation
   14 operation: . declaration ';'
   15          | . assignment ';'
   16          | . unary ';'
   17          | . if
   18          | . cycle
   19          | . control ';'
   20 declaration: . type var_list
   21 assignment: . ID assign_operator expression
   22 unary: . ID OP_INC
   23      | . OP_INC ID
   24      | . ID OP_DEC
   25      | . OP_DEC ID
   26 control: . BREAK
   27        | . CONTINUE
   28        | . RETURN
   29        | . RETURN expression
   62 cycle: . FOR '(' assignment ';' if_expression ';' for_incr ')' condition_code
   63      | . WHILE '(' if_expression ')' condition_code
   64      | . DO condition_code WHILE '(' if_expression ')' ';'
   65 if: . IF '(' expression ')' condition_code
   66   | . IF '(' expression ')' condition_code ELSE condition_code
   67   | . SWITCH '(' expression ')' '{' switch '}'
   77 switch: DEFAULT ':' . operation_list switch
   79       | DEFAULT ':' . operation_list
   94 type: . CHAR
   95     | . INT
   96     | . STRING
   97     | . BOOLEAN
   98     | . FLOAT
   99     | . VOID

    BOOLEAN   shift, and go to state 21
    BREAK     shift, and go to state 45
    CHAR      shift, and go to state 22
    CONTINUE  shift, and go to state 46
    DO        shift, and go to state 47
    FLOAT     shift, and go to state 23
    FOR       shift, and go to state 48
    IF        shift, and go to state 49
    INT       shift, and go to state 24
    OP_INC    shift, and go to state 50
    OP_DEC    shift, and go to state 51
    STRING    shift, and go to state 25
    SWITCH    shift, and go to state 52
    RETURN    shift, and go to state 53
    VOID      shift, and go to state 26
    WHILE     shift, and go to state 54
    ID        shift, and go to state 55

    operation_list  go to state 194
    operation       go to state 58
    declaration     go to state 59
    assignment      go to state 60
    unary           go to state 61
    control         go to state 62
    cycle           go to state 63
    if              go to state 64
    type            go to state 65


state 190

   67 if: SWITCH '(' expression ')' '{' switch '}' .

    $default  reduce using rule 67 (if)


state 191

   14 operation: . declaration ';'
   15          | . assignment ';'
   16          | . unary ';'
   17          | . if
   18          | . cycle
   19          | . control ';'
   20 declaration: . type var_list
   21 assignment: . ID assign_operator expression
   22 unary: . ID OP_INC
   23      | . OP_INC ID
   24      | . ID OP_DEC
   25      | . OP_DEC ID
   26 control: . BREAK
   27        | . CONTINUE
   28        | . RETURN
   29        | . RETURN expression
   62 cycle: . FOR '(' assignment ';' if_expression ';' for_incr ')' condition_code
   62      | FOR '(' assignment ';' if_expression ';' for_incr ')' . condition_code
   63      | . WHILE '(' if_expression ')' condition_code
   64      | . DO condition_code WHILE '(' if_expression ')' ';'
   65 if: . IF '(' expression ')' condition_code
   66   | . IF '(' expression ')' condition_code ELSE condition_code
   67   | . SWITCH '(' expression ')' '{' switch '}'
   72 condition_code: . '{' operation_list '}'
   73               | . operation
   74               | . ';'
   75               | . '{' '}'
   94 type: . CHAR
   95     | . INT
   96     | . STRING
   97     | . BOOLEAN
   98     | . FLOAT
   99     | . VOID

    BOOLEAN   shift, and go to state 21
    BREAK     shift, and go to state 45
    CHAR      shift, and go to state 22
    CONTINUE  shift, and go to state 46
    DO        shift, and go to state 47
    FLOAT     shift, and go to state 23
    FOR       shift, and go to state 48
    IF        shift, and go to state 49
    INT       shift, and go to state 24
    OP_INC    shift, and go to state 50
    OP_DEC    shift, and go to state 51
    STRING    shift, and go to state 25
    SWITCH    shift, and go to state 52
    RETURN    shift, and go to state 53
    VOID      shift, and go to state 26
    WHILE     shift, and go to state 54
    ID        shift, and go to state 55
    '{'       shift, and go to state 67
    ';'       shift, and go to state 68

    operation       go to state 69
    declaration     go to state 59
    assignment      go to state 60
    unary           go to state 61
    control         go to state 62
    cycle           go to state 63
    if              go to state 64
    condition_code  go to state 195
    type            go to state 65


state 192

   21 assignment: . ID assign_operator expression
   22 unary: . ID OP_INC
   23      | . OP_INC ID
   24      | . ID OP_DEC
   25      | . OP_DEC ID
   69 for_incr: for_incr ',' . incr
   70 incr: . assignment
   71     | . unary

    OP_INC  shift, and go to state 50
    OP_DEC  shift, and go to state 51
    ID      shift, and go to state 55

    assignment  go to state 182
    unary       go to state 183
    incr        go to state 196


state 193

   12 operation_list: . operation
   13               | . operation_list operation
   14 operation: . declaration ';'
   15          | . assignment ';'
   16          | . unary ';'
   17          | . if
   18          | . cycle
   19          | . control ';'
   20 declaration: . type var_list
   21 assignment: . ID assign_operator expression
   22 unary: . ID OP_INC
   23      | . OP_INC ID
   24      | . ID OP_DEC
   25      | . OP_DEC ID
   26 control: . BREAK
   27        | . CONTINUE
   28        | . RETURN
   29        | . RETURN expression
   62 cycle: . FOR '(' assignment ';' if_expression ';' for_incr ')' condition_code
   63      | . WHILE '(' if_expression ')' condition_code
   64      | . DO condition_code WHILE '(' if_expression ')' ';'
   65 if: . IF '(' expression ')' condition_code
   66   | . IF '(' expression ')' condition_code ELSE condition_code
   67   | . SWITCH '(' expression ')' '{' switch '}'
   76 switch: CASE value ':' . operation_list switch
   78       | CASE value ':' . operation_list
   94 type: . CHAR
   95     | . INT
   96     | . STRING
   97     | . BOOLEAN
   98     | . FLOAT
   99     | . VOID

    BOOLEAN   shift, and go to state 21
    BREAK     shift, and go to state 45
    CHAR      shift, and go to state 22
    CONTINUE  shift, and go to state 46
    DO        shift, and go to state 47
    FLOAT     shift, and go to state 23
    FOR       shift, and go to state 48
    IF        shift, and go to state 49
    INT       shift, and go to state 24
    OP_INC    shift, and go to state 50
    OP_DEC    shift, and go to state 51
    STRING    shift, and go to state 25
    SWITCH    shift, and go to state 52
    RETURN    shift, and go to state 53
    VOID      shift, and go to state 26
    WHILE     shift, and go to state 54
    ID        shift, and go to state 55

    operation_list  go to state 197
    operation       go to state 58
    declaration     go to state 59
    assignment      go to state 60
    unary           go to state 61
    control         go to state 62
    cycle           go to state 63
    if              go to state 64
    type            go to state 65


state 194

   13 operation_list: operation_list . operation
   14 operation: . declaration ';'
   15          | . assignment ';'
   16          | . unary ';'
   17          | . if
   18          | . cycle
   19          | . control ';'
   20 declaration: . type var_list
   21 assignment: . ID assign_operator expression
   22 unary: . ID OP_INC
   23      | . OP_INC ID
   24      | . ID OP_DEC
   25      | . OP_DEC ID
   26 control: . BREAK
   27        | . CONTINUE
   28        | . RETURN
   29        | . RETURN expression
   62 cycle: . FOR '(' assignment ';' if_expression ';' for_incr ')' condition_code
   63      | . WHILE '(' if_expression ')' condition_code
   64      | . DO condition_code WHILE '(' if_expression ')' ';'
   65 if: . IF '(' expression ')' condition_code
   66   | . IF '(' expression ')' condition_code ELSE condition_code
   67   | . SWITCH '(' expression ')' '{' switch '}'
   76 switch: . CASE value ':' operation_list switch
   77       | . DEFAULT ':' operation_list switch
   77       | DEFAULT ':' operation_list . switch
   78       | . CASE value ':' operation_list
   79       | . DEFAULT ':' operation_list
   79       | DEFAULT ':' operation_list .  ['}']
   94 type: . CHAR
   95     | . INT
   96     | . STRING
   97     | . BOOLEAN
   98     | . FLOAT
   99     | . VOID

    BOOLEAN   shift, and go to state 21
    BREAK     shift, and go to state 45
    CASE      shift, and go to state 177
    CHAR      shift, and go to state 22
    CONTINUE  shift, and go to state 46
    DEFAULT   shift, and go to state 178
    DO        shift, and go to state 47
    FLOAT     shift, and go to state 23
    FOR       shift, and go to state 48
    IF        shift, and go to state 49
    INT       shift, and go to state 24
    OP_INC    shift, and go to state 50
    OP_DEC    shift, and go to state 51
    STRING    shift, and go to state 25
    SWITCH    shift, and go to state 52
    RETURN    shift, and go to state 53
    VOID      shift, and go to state 26
    WHILE     shift, and go to state 54
    ID        shift, and go to state 55

    $default  reduce using rule 79 (switch)

    operation    go to state 101
    declaration  go to state 59
    assignment   go to state 60
    unary        go to state 61
    control      go to state 62
    cycle        go to state 63
    if           go to state 64
    switch       go to state 198
    type         go to state 65


state 195

   62 cycle: FOR '(' assignment ';' if_expression ';' for_incr ')' condition_code .

    $default  reduce using rule 62 (cycle)


state 196

   69 for_incr: for_incr ',' incr .

    $default  reduce using rule 69 (for_incr)


state 197

   13 operation_list: operation_list . operation
   14 operation: . declaration ';'
   15          | . assignment ';'
   16          | . unary ';'
   17          | . if
   18          | . cycle
   19          | . control ';'
   20 declaration: . type var_list
   21 assignment: . ID assign_operator expression
   22 unary: . ID OP_INC
   23      | . OP_INC ID
   24      | . ID OP_DEC
   25      | . OP_DEC ID
   26 control: . BREAK
   27        | . CONTINUE
   28        | . RETURN
   29        | . RETURN expression
   62 cycle: . FOR '(' assignment ';' if_expression ';' for_incr ')' condition_code
   63      | . WHILE '(' if_expression ')' condition_code
   64      | . DO condition_code WHILE '(' if_expression ')' ';'
   65 if: . IF '(' expression ')' condition_code
   66   | . IF '(' expression ')' condition_code ELSE condition_code
   67   | . SWITCH '(' expression ')' '{' switch '}'
   76 switch: . CASE value ':' operation_list switch
   76       | CASE value ':' operation_list . switch
   77       | . DEFAULT ':' operation_list switch
   78       | . CASE value ':' operation_list
   78       | CASE value ':' operation_list .  ['}']
   79       | . DEFAULT ':' operation_list
   94 type: . CHAR
   95     | . INT
   96     | . STRING
   97     | . BOOLEAN
   98     | . FLOAT
   99     | . VOID

    BOOLEAN   shift, and go to state 21
    BREAK     shift, and go to state 45
    CASE      shift, and go to state 177
    CHAR      shift, and go to state 22
    CONTINUE  shift, and go to state 46
    DEFAULT   shift, and go to state 178
    DO        shift, and go to state 47
    FLOAT     shift, and go to state 23
    FOR       shift, and go to state 48
    IF        shift, and go to state 49
    INT       shift, and go to state 24
    OP_INC    shift, and go to state 50
    OP_DEC    shift, and go to state 51
    STRING    shift, and go to state 25
    SWITCH    shift, and go to state 52
    RETURN    shift, and go to state 53
    VOID      shift, and go to state 26
    WHILE     shift, and go to state 54
    ID        shift, and go to state 55

    $default  reduce using rule 78 (switch)

    operation    go to state 101
    declaration  go to state 59
    assignment   go to state 60
    unary        go to state 61
    control      go to state 62
    cycle        go to state 63
    if           go to state 64
    switch       go to state 199
    type         go to state 65


state 198

   77 switch: DEFAULT ':' operation_list switch .

    $default  reduce using rule 77 (switch)


state 199

   76 switch: CASE value ':' operation_list switch .

    $default  reduce using rule 76 (switch)
